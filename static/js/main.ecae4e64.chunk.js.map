{"version":3,"sources":["components/icon/baseImg.png","components/icon/move.gif","hook/useHook.js","hook/useRequest.ts","reducers/temporary.js","hook/people/usePeopleList.js","hook/auth/refreshToken.js","hook/project/useProjectList.js","hook/project/useProjectDetail.js","hook/project/useProjectCreate.js","hook/project/useProjectUpdate.js","hook/project/useProjectApply.js","reducers/alert.js","hook/useAlert.js","reducers/login.js","components/Layout.js","components/Main/Jumbotron.js","components/Bar/subtitlebar.js","components/Project/ProjectBox.js","components/People/Level.js","components/People/PeopleBox.js","components/Switch/switch.js","components/Image/inputImage.jsx","components/Dropdown/dropdown.jsx","components/Drawer/drawer.jsx","hook/api/profileApi.js","hook/profile/useImage.js","hook/profile/useProfileInfo.js","components/People/Profile/ProfileInfo/ProfileInfo.js","components/People/Profile/ProfileImage/ImageModify.js","hook/profile/useProfileInfoModify.js","components/People/Profile/ProfileInfo/ProfileInfoModify.js","components/Modal/Modal.js","components/Input/Input.jsx","pages/root.jsx","components/List/Sort.js","pages/project/projectList.jsx","reducers/project.js","pages/project/projectDetail.jsx","pages/project/createProject.jsx","pages/project/updateProject.jsx","pages/auth/Register.jsx","hook/api/authApi.js","hook/auth/useRegister.js","hook/profile/useProfileProject.js","reducers/profile.js","hook/profile/useProfileProjectModify.js","components/People/Profile/ProfileProjects/ModifyPlanProjects.js","components/People/Profile/ProfileProjects/RunningProjects.js","components/People/Profile/ProfileProjects/ModifyEndedProjects.js","components/People/Profile/ProfileProjects/EndedProjects.js","components/People/Profile/ProfileProjects/PlanProjects.js","hook/profile/useProfileRecruit.js","components/People/Profile/RecruitModal.js","hook/profile/useInvitation.js","components/People/Profile/Invitation/DetailModal.js","components/People/Profile/Invitation/InvitationBox.js","components/People/Profile/Invitation/InvitationModal.js","pages/Profile.jsx","pages/auth/Login.jsx","hook/auth/useLogin.js","hook/usePageMove.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","require","reducer","state","action","type","error","pending","fulfilled","rejected","data","payload","useRequest","asyncTask","options","useReducer","dispatch","run","a","temporaryRedux","createSlice","name","initialState","temporary","reducers","setTemporary","actions","axios","staticPeopleData","userId","userName","stacks","area","level","_links","self","href","profileImage","refreshToken","token","window","sessionStorage","getItem","post","process","res","setItem","accessToken","useProjectListState","useState","staticProjectData","projectList","setProjectList","number","size","totalElements","totalPages","page","setPage","getProjectList","pageNumber","get","getDeadLineProjectList","catch","response","projectId","projectName","teamName","endDate","description","dday","status","projectField","currentMember","developer","designer","planner","etc","needMember","leaderId","projectDetail","applyCanFile","questions","apply","recruitDtoList","selfDescription","role","introduction","projectApply","answers","alertRedux","isOpen","sentence","openAlert","closeAlert","useAlert","useDispatch","useSelector","alert","open","close","loginRedux","isToken","setToken","Layout","children","history","useHistory","login","profileUrl","setIsOpen","Navbar","color","light","expand","style","margin","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","removeItem","push","items","src","altText","caption","header","key","Jumbotron","UncontrolledCarousel","SubtitleHeader","props","id","moment","ProjectBox","nowDay","Date","parse","tz","format","Math","floor","developerPercent","plannerPercent","designerPercent","etcPercent","pathname","url","textDecoration","Card","CardImg","width","height","alt","CardBody","CardTitle","CardSubtitle","CardText","Row","xs","Col","Progress","value","Level","PeopleBox","top","sampleimg","map","IOSSwitch","withStyles","theme","root","padding","spacing","switchBase","transform","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","display","primary","main","borderColor","boxShadow","ImgInput","img","saveImg","useDropzone","accept","maxFiles","onDrop","acceptedFiles","imgFile","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","align","heigth","DropdownRole","dropdownCaret","dropdownHeader","pick","dropdownOpen","setDropdownOpen","caret","setCaret","useEffect","Dropdown","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","e","DropdownField","makeStyles","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","useInfoApi","getInfo","postInfo","put","headers","Authorization","console","log","useImgApi","getImg","postImg","image","FormData","append","imgUrl","useEndedProjectApi","getProject","getHideProject","usePlanProjectApi","getAllPlannedProject","myId","res2","totalRes","concat","_embedded","useHideProjectApi","hideProject","delete","displayProject","useImage","imgState","setImgState","getImgApi","useProfileInfo","setInfo","alertAction","getInfoApi","contact","grade","message","ProfileInfo","info","infoPending","imgPending","Alert","object-fit","ImageModify","setState","isImgChange","Form","FormGroup","Label","for","Input","FormText","useProfileInfoModify","setModifying","infoFulfilled","infoRejected","infoError","postInfoApi","imgFulfilled","imgRejected","imgError","postImgApi","ProfileInfoModify","handleChange","target","placeholder","onChange","preventDefault","withOutGrade","CenterModal","modalFlag","Modal","ModalHeader","gridTemplateColumns","alignItems","fontWeight","float","IconButton","ModalFooter","footer","AlertModal","alertData","BootstrapInputUI","input","position","fontSize","fontFamily","join","fade","InputBase","BootstrapInput","Root","projectlistPromise","getApi","project","projectAction","projectListPromise","undefined","peopleList","setPeopleList","getPeopleList","usePeopleListState","people","peopleAction","peopleListPromise","peoplelistPromise","usePeopleListEffect","index","Pagination","count","useStyles","formControl","minWidth","selectEmpty","marginTop","search","Sort","setRole","region","setRegion","stack","setStack","setSearch","event","Grid","container","item","sm","FormControl","Select","displayEmpty","MenuItem","disabled","FormHelperText","variant","InputLabel","OutlinedInput","label","ProjectList","projectListAction","resProjectList","getProjectListFulfilled","getProjectListRejected","getProjectListError","getProjectListApi","projectRedux","memberList","setProject","ReactMarkdown","ProjectDetail","location","useLocation","split","setApply","recruit","setRecruit","reader","applyModal","check","setCheck","pagination","setPagination","fetchGetDetail","Accept","then","setApplyState","projectApplicantDtoList","resApply","inputProject","setProjectState","checkSwitch","inputApply","setRecruitState","inputRecruit","fetchDeleteProject","clickPagination","nextPage","openApply","closeApply","openDelete","closeDelete","useProjectDetailState","resProject","getProjectFulfilled","getProjectPending","fetchDetail","useProjectDetailEffect","updateProject","Typography","applyApi","detailGet","List","ListItem","divider","ListItemText","ListItemSecondaryAction","source","FormControlLabel","control","length","dense","secondary","ApplyProject","api","applied","setApplied","fetchGetApply","fetchPostApply","inputAnswer","i","selectRole","fetchPutApply","useProjectApplyState","applyAction","applyRes","postApply","applyPutRes","putApply","applyGetRes","getApply","applyLink","afterAction","defaultAnaswer","answer","useProjectApplyEffect","InputGroup","InputGroupAddon","addonType","marginBottom","multiline","fullWidth","ProjectCreate","setImg","fetchPostCreate","targetValue","inputImg","inputProjectMember","memberValue","fetchImg","imgData","inputDate","date","inputQuestion","q","addQuestion","deleteQuestion","filter","inputField","useProjectCreateState","getProjectRejected","getProjectError","createProjectApi","getImgFulfilled","createImgApi","projectImg","createdProject","useProjectCreateEffect","min","max","step","utils","DateFnsUtils","locale","ko","disableUnderline","disableToolbar","hideTabs","clearable","ampm","questionString","ProjectUpdate","fetchPutUpdate","useProjectUpdateState","UpdateProjectApi","UpdateImgApi","useProjectUpdateEffect","updateData","Register","userEmail","password","postRegister","RegisterFulfilled","RegisterRejected","RegisterError","postRegisterApi","useRegisterEffect","resRegister","RegisterPending","Container","onSubmit","useProfileProject","resGetProject","getProjectApi","setList","hiding","profile","isHideChange","profileRedux","setHideChange","useProfileProjectModify","getHideProjectApi","resHideProject","hideProjectFulfilled","hideProjectRejected","hideProjectError","resDisplayProject","displayProjectFulfilled","displayProjectRejected","displayProjectError","list","hideList","setHideList","moveData","ModifyPlanProjects","hideProjectApi","displayProjectApi","RunningProjects","setHiding","ModifyEndedProjects","EndedProjects","PlanProjects","useProfileRecruit","getProjectData","getProjecsError","postRecruitData","postRecruitFulfilled","postRecruitRejected","postRecruitError","toggleNested","setNestedMessage","plannedProjects","setPlannedProjects","RecruitModal","modal","recruitState","nestedModal","setNestedModal","closeAll","setCloseAll","nestedMessage","postRecruit","postRecruitApi","pj","TextField","rows","onClosed","ModalBody","useInvitationEffect","invitationList","setInvitationList","isError","errorMessage","noList","setNoList","noticeNoList","getInvitationList","getInvitationListApi","useInvitationDetailEffect","pid","invitaionDetail","setInvitaionDetail","activityName","setActivityName","getInvitationDetail","putInvitationAccept","deleteInvitationReject","getInvitationDetailApi","putFulfilled","putInvitationAcceptApi","reject","deleteFulfilled","deleteInvitationRejectApi","handleAccept","handleReject","DetailModal","Badge","pill","body","InvitationBox","detailModal","setDetailModal","detailModalToggle","InvitationModal","invitation","Profile","modifying","modifyToggle","invitationModal","setInvitationModal","invitationToggle","setModal","recruitToggle","activeTab","setActiveTab","tabToggle","tab","tabs","classnames","active","TabContent","TabPane","tabId","Login","postLogin","resLogin","LoginFulfilled","LoginRejected","LoginError","postLoginApi","reduxData","useLoginEffect","LoginPending","condition","destination","useMove","App","test","useLoginAuth","exact","path","component","Boolean","hostname","match","combineReducers","temproray","store","configureStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecae4e64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseImg.c40f4ed9.png\";","module.exports = __webpack_public_path__ + \"static/media/move.272e1d7a.gif\";","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useTemporaryApi() {\r\n  const { temporary } = useSelector(state => state.temproray);\r\n  const getProjectList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const getPeopleList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const postProjectList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n  const postPeopletList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n\r\n  return [\r\n    temporary,\r\n    {\r\n      getProjectList,\r\n      getPeopleList,\r\n      postProjectList,\r\n      postPeopletList\r\n    }\r\n  ];\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nexport type Service<R, P extends any[]> = (...args: P) => Promise<R>;\r\n\r\nexport type RequestState = {\r\n  data: any;\r\n  error: any;\r\n  pending: boolean;\r\n  fulfilled: boolean;\r\n  rejected: boolean;\r\n};\r\n\r\nexport type RequestAction =\r\n  | { type: 'request' }\r\n  | { type: 'success'; payload: any }\r\n  | { type: 'failure'; payload: string };\r\n\r\nfunction reducer(state: RequestState, action: RequestAction): RequestState {\r\n  switch (action.type) {\r\n    case 'request':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: true,\r\n        fulfilled: false,\r\n        rejected: false,\r\n      };\r\n    case 'success':\r\n      return {\r\n        data: action.payload,\r\n        error: null,\r\n        pending: false,\r\n        fulfilled: true,\r\n        rejected: false,\r\n      };\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        fulfilled: false,\r\n        rejected: true,\r\n      };\r\n  }\r\n}\r\n\r\nexport function useRequest<R, P extends any[]>(\r\n  asyncTask: Service<R, P>,\r\n  options?: {\r\n    // autoFirstRun?: boolean;\r\n    // passArgs?: P;\r\n  },\r\n) {\r\n  // const {autoFirstRun = false, passArgs} = options || {};\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    data: null,\r\n    error: null,\r\n    pending: false,\r\n    fulfilled: false,\r\n    rejected: false,\r\n  });\r\n  const requestActions = {\r\n    run: async (...args: P) => {\r\n      dispatch({\r\n        type: 'request',\r\n      });\r\n      try {\r\n        // then 패턴 데신에 await을 쓴 이유는 일반 함수일 경우에도 동작하도록\r\n        const data = await asyncTask(...args);\r\n        dispatch({\r\n          type: 'success',\r\n          payload: data,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: 'failure',\r\n          payload: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return [state, requestActions] as const;\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst temporaryRedux = createSlice({\r\n  name: 'project',\r\n  initialState: {\r\n    temporary: 0,\r\n  },\r\n  reducers: {\r\n    setTemporary(state, action) {\r\n      state.temporary = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setTemporary,\r\n} = temporaryRedux.actions;\r\nexport default temporaryRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport function usePeopleListState() {\r\n  const [peopleList, setPeopleList] = useState(staticPeopleData);\r\n  const [page, setPage] = useState({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const getPeopleList = async (pageNumber) => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/people?page=${pageNumber}&size=6`\r\n    );\r\n    return res.data;\r\n  };\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  return [\r\n    { peopleList, page },\r\n    { setPeopleList, getPeopleList, setPage },\r\n  ];\r\n}\r\n\r\nexport function usePeopleListEffect(\r\n  peoplelistPromise,\r\n  getApi,\r\n  setPeopleList,\r\n  setPage\r\n) {\r\n  useEffect(() => {\r\n    if (peoplelistPromise.fulfilled) {\r\n      setPeopleList(peoplelistPromise.data._embedded.peopleList);\r\n      setPage(peoplelistPromise.data.page);\r\n    } // 임시데이터\r\n  }, [peoplelistPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (peoplelistPromise.rejected) {\r\n      if (peoplelistPromise.error) {\r\n        alertAction.open(peoplelistPromise.error.data.message);\r\n      }\r\n    }\r\n  }, [peoplelistPromise.rejected]);\r\n}\r\n\r\nexport function usePeopleSaveEffect(\r\n  data,\r\n  fulfilled,\r\n  pending,\r\n  rejected,\r\n  error,\r\n  posApi\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(fulfilled);\r\n    if (fulfilled) {\r\n      alertAction.open(\"전송 성공\");\r\n      // dispatch(setTemporary(data));\r\n      dispatch(setTemporary(staticPeopleData));\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n\r\nconst staticPeopleData = [\r\n  {\r\n    userId: \"testUser1\",\r\n    userName: \"User1\",\r\n    stacks: [\"SPRINGBOOT\", \"ReactJS\"],\r\n    area: \"Daegu\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser1\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser4\",\r\n    userName: \"User4\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser4\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser4\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Ilsan\",\r\n    level: 6,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Busanl\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import axios from \"axios\";\r\n\r\nconst refreshToken = async () => {\r\n  const token = window.sessionStorage.getItem(\"refreshToken\");\r\n  const res = await axios.post(\r\n    `${process.env.REACT_APP_BASE_URL}auth/refresh`,\r\n    {\r\n      refreshToken: token,\r\n    }\r\n  );\r\n  window.sessionStorage.setItem(\"accessToken\", res.data.accessToken);\r\n  return res.data.accessToken;\r\n};\r\n\r\nexport default refreshToken;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useProjectListState() {\r\n  const [projectList, setProjectList] = useState(staticProjectData);\r\n  const [page, setPage] = useState({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const getProjectList = async (pageNumber) => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/projects?page=${pageNumber}&size=10`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async (pageNumber) => {\r\n        let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`)\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`\r\n    );\r\n    return res.data;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  return [\r\n    { projectList, page },\r\n    { getProjectList, setProjectList, getDeadLineProjectList, setPage },\r\n  ];\r\n}\r\n\r\nexport function useProjectListEffect(\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  getApi,\r\n  setProjectList,\r\n  setPage\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      if (data !== undefined) {\r\n        setProjectList(data._embedded.projectList);\r\n        setPage(data.page);\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  projectlistPromise,\r\n  getApi,\r\n  setProjectList,\r\n  setPage\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.fulfilled) {\r\n      if (projectlistPromise.data !== undefined) {\r\n        setProjectList(projectlistPromise.data._embedded.projectList);\r\n        setPage(projectlistPromise.data.page);\r\n      }\r\n    }\r\n  }, [projectlistPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.rejected) {\r\n      if (projectlistPromise.error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [projectlistPromise.rejected]);\r\n}\r\n\r\nconst staticProjectData = [\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectDetailState = () => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [apply, setApply] = useState([]);\r\n  const [recruit, setRecruit] = useState(recruitDtoList);\r\n  const [alertData, alertAction] = useAlert();\r\n  const [check, setCheck] = useState({\r\n    apply: true,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n  const [teamReader, setTeamReader] = useState(false);\r\n  const fetchGetDetail = async (projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply;\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0].userName === id) {\r\n      resApply = await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value) => {\r\n          setApplyState(value.data._embedded.projectApplicantDtoList);\r\n        })\r\n        .catch(async (error) => {\r\n          if (error.response.data.error === \"007\") {\r\n            token = await refreshToken();\r\n            resApply = await axios.get(res.data._links.apply.href, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            });\r\n          } else {\r\n            throw error;\r\n          }\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios.delete(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    history.push(\"/projects\");\r\n  };\r\n\r\n  const setProjectState = (data) => {\r\n    setProject(data);\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setApplyState = (data) => {\r\n    setApply(data);\r\n  };\r\n\r\n  const inputApply = (e) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setRecruitState = (data) => {\r\n    setRecruit(data);\r\n  };\r\n\r\n  const inputRecruit = (e) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const checkSwitch = (name, checked) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name, nextPage) => {\r\n    setPagination((value) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, check, apply, recruit, pagination },\r\n    {\r\n      fetchGetDetail,\r\n      inputProject,\r\n      setProjectState,\r\n      checkSwitch,\r\n      inputApply,\r\n      setApplyState,\r\n      setRecruitState,\r\n      inputRecruit,\r\n      fetchDeleteProject,\r\n      clickPagination,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectDetailEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  fetchDetail,\r\n  projectAction,\r\n  projectId\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    fetchDetail(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      projectAction.setProjectState(data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (data.res.memberList[0]._links.self.href === `/profile/${id}`) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n        if (data.resApply !== undefined)\r\n          projectAction.setApplyState(data.resApply);\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nconst useProjectRecruitEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  inputState\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // inputDetail(data);\r\n      inputState(recruitDtoList);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport {\r\n  useProjectDetailState,\r\n  useProjectDetailEffect,\r\n  useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectCreateState = () => {\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(\"\");\r\n  const fetchPostCreate = async (data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = refreshToken();\r\n          res = await axios.post(\r\n            `${process.env.REACT_APP_BASE_URL}projects`,\r\n            data,\r\n            {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            }\r\n          );\r\n          console.log(res);\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        }\r\n      )\r\n      .then((value) => (res = value))\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios.post(\r\n            `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n            imgData,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n                \"Access-Control-Expose-Headers\": \"*\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPostCreate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectCreateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  createImgApi,\r\n  projectImg\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      console.log(data.headers);\r\n      console.log(data);\r\n      const projectId = data._links.createdProject.href.split(\"/\");\r\n      createImgApi(projectId[2], projectImg);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectCreateState, useProjectCreateEffect };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectUpdateState = () => {\r\n  const projectDetail = useSelector((state) => state.project.projectDetail);\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(projectDetail.img);\r\n  const fetchPutUpdate = async (projectId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios.put(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n            data,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        }\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios.post(\r\n            `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n            imgData,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPutUpdate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectUpdateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  UpdateImgApi,\r\n  projectImg,\r\n  projectId\r\n) => {\r\n  const history = useHistory();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      console.log(typeof projectImg);\r\n      if (typeof projectImg !== \"string\") UpdateImgApi(projectId, projectImg);\r\n      history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectUpdateState, useProjectUpdateEffect };\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const useProjectApplyState = (api) => {\r\n  const [apply, setApply] = useState(projectApply);\r\n  const [applied, setApplied] = useState(false);\r\n  const fetchGetApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .get(`${api}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .post(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios.post(api, data, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios.put(api, data, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const inputApply = (name, data) => {\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a, i) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { apply, applied },\r\n    {\r\n      fetchPostApply,\r\n      inputAnswer,\r\n      setApply,\r\n      inputApply,\r\n      selectRole,\r\n      fetchGetApply,\r\n      fetchPutApply,\r\n      setApplied,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useProjectApplyEffect = (\r\n  questions,\r\n  getApply,\r\n  apply,\r\n  applyAction,\r\n  applyRes,\r\n  applyGetRes,\r\n  applyPutRes,\r\n  detailGet,\r\n  applyLink,\r\n  afterAction\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const defaultAnaswer = questions.map(() => {\r\n      return \"\";\r\n    });\r\n    applyAction.inputApply(\"answers\", defaultAnaswer);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet && applyLink !== \"\") {\r\n      getApply();\r\n    }\r\n  }, [detailGet, applyLink]);\r\n\r\n  useEffect(() => {\r\n    if (applyGetRes.fulfilled) {\r\n      applyAction.setApply(applyGetRes.data);\r\n      if (apply.answer !== \"\") {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [applyGetRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyRes.fulfilled]);\r\n  useEffect(() => {\r\n    if (applyPutRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyPutRes.fulfilled]);\r\n  return \"\";\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst alertRedux = createSlice({\r\n  name: \"alert\",\r\n  initialState: {\r\n    isOpen: false,\r\n    sentence: \"\",\r\n  },\r\n  reducers: {\r\n    openAlert(state, action) {\r\n      state.isOpen = true;\r\n      state.sentence = action.payload;\r\n    },\r\n    closeAlert(state, action) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openAlert, closeAlert } = alertRedux.actions;\r\nexport default alertRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openAlert, closeAlert } from \"../reducers/alert\";\r\n\r\nexport default function useAlert() {\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.alert.isOpen);\r\n  const sentence = useSelector((state) => state.alert.sentence);\r\n\r\n  const open = (data) => {\r\n    dispatch(openAlert(data));\r\n  };\r\n\r\n  const close = () => {\r\n    dispatch(closeAlert());\r\n  };\r\n\r\n  return [\r\n    { sentence, isOpen },\r\n    {\r\n      open,\r\n      close,\r\n    },\r\n  ];\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginRedux = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    isToken: false,\r\n    userId: \"\"\r\n  },\r\n  reducers: {\r\n    setToken(state, action) {\r\n      state.isToken = action.payload.isToken;\r\n      state.userId = action.payload.userId;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setToken } = loginRedux.actions;\r\nexport default loginRedux.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLogoutAuth } from \"../hook/auth/useLogin\";\r\nimport { setToken } from \"../reducers/login\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport \"./component.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // useMove 안 쓴 이유 -> 로그인 여부를 가지는 state가 레이아웃 컴포넌트 내부에 없어서 사용하기 애매함,,\r\n  // 일단 직접 useHistory로 구현\r\n  const history = useHistory();\r\n\r\n  // 레이아웃 바에서 로그인 여부를 확인하고, 유저 아이디를 띄울 변수\r\n  const userId = useSelector(state => state.login.userId);\r\n  const isToken = useSelector(state => state.login.isToken);\r\n\r\n  // 레이아웃에서 userId클릭하면 이동할 본인 프로필페이지 주소\r\n  const profileUrl = `/profile/${userId}`;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  // 로그아웃\r\n  const handleClick = () => {\r\n    // 세션 스토리지 비우기\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"accessToken\");\r\n    window.sessionStorage.removeItem(\"refreshToken\");\r\n\r\n    // 리덕스 초기화 데이터\r\n    const reduxData = {\r\n      isToken: false,\r\n      userId: null\r\n    };\r\n\r\n    // 액션 디스패치\r\n    dispatch(setToken(reduxData));\r\n\r\n    // 홈으로\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"\" light expand=\"md\" style={{ margin: \"0 20vw 0 20vw\" }}>\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          Egluu\r\n          {/* <img src={logo} alt=\"menubar\" id=\"menu-img\" width=\"100\" /> */}\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"container-fluid\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/projects\">\r\n                프로젝트 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/people\">\r\n                사용자 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            {isToken ? (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to={profileUrl}>\r\n                    {userId} 님 환영해~\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={handleClick}>로그아웃</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"nav-right\">\r\n                  <NavLink tag={Link} to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <main>\r\n        <div style={{ margin: \"0 20vw 0 20vw\" }}>{children}</div>\r\n      </main>\r\n      <footer>\r\n        <div style={{ margin: \"0 20vw 0 20vw\" }}>\r\n          <p>Copyright © Igo Corp. All Rights Reserved.</p>\r\n          <p> Team I go </p>\r\n          <p>\r\n            Address : 서울특별시 동작구 상도동 상도로 369 숭실대학교 정보과학관\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { UncontrolledCarousel } from \"reactstrap\";\r\nconst items = [\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\",\r\n    header: \"Slide 1 Header\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\",\r\n    header: \"Slide 2 Header\",\r\n    key: \"2\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\",\r\n    header: \"Slide 3 Header\",\r\n    key: \"3\"\r\n  }\r\n];\r\nconst Jumbotron = () => <UncontrolledCarousel items={items} />;\r\nexport default Jumbotron;","import React from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport './Bar.css'\r\nconst SubtitleHeader = (props) => {\r\n    return (\r\n        <Button onClick={props.onClick} color=\"link\" id=\"subtitleheader\">\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\nexport default SubtitleHeader;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Progress,\r\n} from \"reactstrap\";\r\nimport sampleimg from \"../icon/baseImg.png\";\r\nimport \"./Project.css\";\r\nconst moment = require(\"moment-timezone\"); //상단에 선언\r\n\r\nexport default function ProjectBox(props) {\r\n  const staticProjectData = props.data;\r\n  const nowDay = Date.parse(moment().tz(\"Asia/Seoul\").format());\r\n  const dday = Math.floor(\r\n    (Date.parse(staticProjectData.endDate) - nowDay) / (24 * 3600 * 1000)\r\n  );\r\n  // 0으로 나눌 경우 예외처리!\r\n  const developerPercent =\r\n    staticProjectData.currentMember.developer !== 0\r\n      ? (staticProjectData.currentMember.developer /\r\n          staticProjectData.needMember.developer) *\r\n        100\r\n      : 0;\r\n  const plannerPercent =\r\n    staticProjectData.currentMember.planner !== 0\r\n      ? (staticProjectData.currentMember.planner /\r\n          staticProjectData.needMember.planner) *\r\n        100\r\n      : 0;\r\n\r\n  const designerPercent =\r\n    staticProjectData.currentMember.designer !== 0\r\n      ? (staticProjectData.currentMember.designer /\r\n          staticProjectData.needMember.designer) *\r\n        100\r\n      : 0;\r\n\r\n  const etcPercent =\r\n    staticProjectData.currentMember.etc !== 0\r\n      ? (staticProjectData.currentMember.etc /\r\n          staticProjectData.needMember.etc) *\r\n        100\r\n      : 0;\r\n\r\n  return (\r\n    <div id=\"ProjectBoxCard\">\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`,\r\n        }}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <Card>\r\n          <CardImg\r\n            width=\"240px\"\r\n            height=\"180px\"\r\n            src={`${process.env.REACT_APP_BASE_URL}projects/image/${staticProjectData.projectId}`}\r\n            alt=\"Card image cap\"\r\n          />\r\n          <CardBody>\r\n            <CardTitle>{staticProjectData.projectName}</CardTitle>\r\n            <CardSubtitle>{staticProjectData.teamName}</CardSubtitle>\r\n            <CardText>D-{dday}</CardText>\r\n            <Row xs=\"12\">\r\n              <Col xs=\"6\">\r\n                <Progress color=\"success\" value={developerPercent}>\r\n                  {developerPercent}\r\n                </Progress>\r\n                <CardText>developer</CardText>\r\n                <Progress color=\"success\" value={plannerPercent}>\r\n                  {plannerPercent}\r\n                </Progress>\r\n                <CardText>planner </CardText>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <Progress color=\"success\" value={designerPercent}>\r\n                  {designerPercent}\r\n                </Progress>\r\n                <CardText>designer</CardText>\r\n                <Progress color=\"success\" value={etcPercent}>\r\n                  {etcPercent}\r\n                </Progress>\r\n                <CardText>etc</CardText>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./People.css\";\r\nexport default function Level(props) {\r\n  const data = props.data;\r\n\r\n  return <Button className=\"level\">{data}</Button>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport sampleimg from \"../icon/baseImg.png\";\r\nimport Level from \"./Level\";\r\nimport \"./People.css\";\r\n\r\nexport default function PeopleBox(props) {\r\n  const data = props.data;\r\n\r\n  return (\r\n    <div id=\"PeopleBoxCard\">\r\n      <Card>\r\n        <CardImg top width=\"100%\" src={sampleimg} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <div>\r\n            <Row xs=\"12\">\r\n              <Col xs=\"9\">\r\n                {/* <CardTitle>{data.userName}</CardTitle> */}\r\n                <CardSubtitle>{data.userId}</CardSubtitle>\r\n              </Col>\r\n              <Col xs=\"3\">\r\n                <Level data={data.level} />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <CardText>\r\n            {data.stacks.map(value => {\r\n              return \"#\" + value + \" \";\r\n            })}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nexport const AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useRef, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst params = {\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    type: \"bullets\",\r\n    clickable: true,\r\n  },\r\n  observer: true,\r\n  spaceBetween: 30,\r\n  lazy: {\r\n    loadPrevNext: true,\r\n  },\r\n};\r\n\r\nfunction ImgInput({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${img}`}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImgInput2({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://pixabay.com/ko/illustrations/%EC%9C%84%EC%84%B1-%ED%96%89%EC%84%B1-%EA%B3%B5%EA%B0%84-%EC%B2%9C%EB%AC%B8%ED%95%99-1303512/\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={img}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ImgInput2, ImgInput };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst role = [\"DEVELOPER\", \"DESIGNER\", \"PLANNER\", \"ETC\"];\r\n\r\nconst DropdownRole = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle caret style={props.style}>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"DEVELOPER\")}>\r\n          DEVELOPER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"DESIGNER\")}>\r\n          DESIGNER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"PLANNER\")}>PLANNER</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst DropdownField = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle style={props.style} caret>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"APP\")}>APP</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"WEB\")}>WEB</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"AI\")}>AI</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"HW\")}>HW</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"BLOCKCHAIN\")}>\r\n          BLOCKCHAIN\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"SYSTEM\")}>SYSTEM</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\nexport { DropdownRole, DropdownField };\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: \"20%\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function HalfDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { anchor, buttonName } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <React.Fragment key={anchor}>\r\n        <Button style={{ fontSize: \"20px\" }} onClick={handleDrawerOpen}>\r\n          {buttonName}\r\n        </Button>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"right\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {props.children}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\n// Profile Page 좌측 Info창에서 사용되는 api\r\nexport function useInfoApi() {\r\n  // get info api\r\n  const getInfo = async (userId) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // post info api\r\n  const postInfo = async (userId, data) => {\r\n    // token = await refreshToken();\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    //console.log(token);\r\n    //console.log(userId);\r\n    const res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          console.log(token);\r\n          const res = await axios\r\n            .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n              headers: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n          return res;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n  return { getInfo, postInfo };\r\n}\r\nexport function useImgApi() {\r\n  // get Img api\r\n  const getImg = async (userId) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`\r\n    );\r\n    //const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    //console.log(res);\r\n    return res.data;\r\n  };\r\n\r\n  const postImg = async (userId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    //console.log(token);\r\n    //console.log(userId);\r\n    let image = new FormData();\r\n    image.append(\"image\", data.imgUrl);\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n      image,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    console.log(res);\r\n    return res;\r\n  };\r\n  return { getImg, postImg };\r\n}\r\nexport function useRunningProjectApi() {\r\n  const getProject = async (userId) => {\r\n    //const res = await axios.get(`${process.env.REACT_APP_BASE_URL}${userId}`);\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function useEndedProjectApi() {\r\n  // 종료된 프로젝트 목록 가져오기\r\n  const getProject = async (userId) => {\r\n    //const res = await axios.get(`${process.env.REACT_APP_BASE_URL}${userId}`);\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function usePlanProjectApi() {\r\n  const getProject = async (userId) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 모든 (planned) 프로젝트 목록 가져오기 (recruit modal에서 프로젝트 선택용)\r\n  const getAllPlannedProject = async (myId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n\r\n    // 헤더\r\n    const header = {\r\n      \"Content-type\": \"application/json;charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    // 일반 plan과 숨겨진 plan 가져오기\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan`,\r\n      {\r\n        headers: header,\r\n      }\r\n    );\r\n    const res2 = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan/hidden`,\r\n      {\r\n        headers: header,\r\n      }\r\n    );\r\n\r\n    let totalRes = [];\r\n\r\n    // 안에 데이터가 있을 경우 데이터 가져오기\r\n    if (res.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res.data._embedded.projectList);\r\n    }\r\n    if (res2.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res2.data._embedded.projectList);\r\n    }\r\n\r\n    return totalRes;\r\n  };\r\n\r\n  return { getProject, getHideProject, getAllPlannedProject };\r\n}\r\nexport function useHideProjectApi() {\r\n  const hideProject = async (userId, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return { res, projectId };\r\n  };\r\n\r\n  const displayProject = async (userId, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return { res, projectId };\r\n  };\r\n  return { hideProject, displayProject };\r\n}\r\nexport function useSendRecruitPeopleApi() {\r\n  const postRecruit = async (userId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res;\r\n  };\r\n  return { postRecruit };\r\n}\r\nexport function useInvitationListApi() {\r\n  const getInvitationList = async (userId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    // console.log(res);\r\n    return res.data;\r\n  };\r\n  return { getInvitationList };\r\n}\r\nexport function useInvitationDetailApi() {\r\n  const getInvitationDetail = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    console.log(res);\r\n    return res.data;\r\n  };\r\n\r\n  const putInvitationAccept = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const deleteInvitationReject = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(`profile/${userId}/recruit/${pid}`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json;charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n  return { getInvitationDetail, putInvitationAccept, deleteInvitationReject };\r\n}\r\n// recruitToPeople\r\n// recruitToProject\r\n","import { useEffect } from \"react\";\r\nimport { useImgApi } from \"../api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nexport const useImage = (\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n) => {\r\n  const { getImg } = useImgApi();\r\n\r\n  const [\r\n    { data, fulfilled, pending, rejected, error },\r\n    { run: getImgApi },\r\n  ] = useRequest(getImg);\r\n\r\n  useEffect(() => {\r\n    getImgApi(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    setImgState({\r\n      ...imgState,\r\n      imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    });\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        // console.log(error.response.data);\r\n        if (error.response.data.error === \"302\") {\r\n          setImgState({\r\n            ...imgState,\r\n            imgUrl:\r\n              \"https://i.pinimg.com/236x/21/88/fd/2188fd41b8d31930acc43b7b197e6dfd.jpg\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [rejected]);\r\n  return pending;\r\n};\r\n\r\nexport default useImage;\r\n","import { useEffect } from \"react\";\r\nimport { useInfoApi } from \"../../hook/api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfo = (setInfo, userId) => {\r\n  // info 정보 get 하는 api\r\n  const { getInfo } = useInfoApi();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  // info get의 상태변수와 데이터 및 액션 디스패쳐\r\n  const [\r\n    { data: response, fulfilled, pending, rejected, error },\r\n    { run: getInfoApi },\r\n  ] = useRequest(getInfo);\r\n\r\n  // 마운트될 때 액션 디스패치\r\n  useEffect(() => {\r\n    getInfoApi(userId);\r\n  }, [userId]);\r\n\r\n  // info get 성공시\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInfo({\r\n        userName: response.userName,\r\n        role: response.role,\r\n        stacks: response.stacks,\r\n        contact: response.contact,\r\n        area: response.area,\r\n        grade: response.grade,\r\n        introduction: response.introduction,\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // info get 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // get refresh~\r\n  const Refresh = () => {\r\n    Api();\r\n  };\r\n\r\n  return pending;\r\n};\r\n\r\nexport default useProfileInfo;\r\n","import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"../Profile.css\";\r\nimport { useImage } from \"../../../../hook/profile/useImage\";\r\nimport useProfileInfo from \"../../../../hook/profile/useProfileInfo\";\r\n\r\nconst ProfileInfo = ({ info, setInfo, imgState, setImgState, userId }) => {\r\n  // 상태변화에 대한 sideEffect에 쓰일 args\r\n  const infoPending = useProfileInfo(setInfo, userId);\r\n\r\n  const imgPending = useImage(imgState, setImgState, userId);\r\n\r\n  return (\r\n    <div>\r\n      {infoPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <>\r\n          <Alert color=\"secondary\">{info.introduction} </Alert>\r\n          {/* width=\"100%\" 으로 비율유지 \r\n  object-fit=\"contain\" 으로 1/4칸에 딱 맞게 조정 */}\r\n          {imgPending ? (\r\n            <p>로딩중...</p>\r\n          ) : (\r\n            <div className=\"profile-img\">\r\n              <img\r\n                src={imgState.imgUrl}\r\n                width=\"100%\"\r\n                object-fit=\"contain\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          <h3 className=\"profile-info-id\">{userId}</h3>\r\n          <h6 className=\"profile-info-id\">{info.userName}</h6>\r\n          <h6>\r\n            Lev. {info.grade} {info.role}\r\n          </h6>\r\n          <h6>area : {info.area}</h6>\r\n          <p>#ReactJs #Javascript</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nconst ImageModify = ({ state, setState }) => {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: acceptedFiles => {\r\n      const imgFile = acceptedFiles.map(file =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file)\r\n        })\r\n      );\r\n      setState({ imgUrl: imgFile[0], isImgChange: true });\r\n    }\r\n  });\r\n\r\n  const params = {\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      type: \"bullets\",\r\n      clickable: true\r\n    },\r\n    observer: true,\r\n    spaceBetween: 30\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div {...getRootProps({ className: \"dropzone\" })}>\r\n          <input {...getInputProps()} />\r\n          {state.imgUrl === \"\" ? (\r\n            <img\r\n              src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n              alt=\"이미지 에러\"\r\n              align=\"center\"\r\n              heigth=\"100%\"\r\n              width=\"100%\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              {typeof state.imgUrl !== \"string\" ? (\r\n                <img\r\n                  src={state.imgUrl.url}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={state.imgUrl}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleFile\">File</Label>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n          <FormText color=\"muted\">\r\n            This is some placeholder block-level help text for the above input.\r\n            It's a bit lighter and easily wraps to a new line.\r\n          </FormText>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageModify;\r\n","import { useEffect } from \"react\";\r\nimport { useInfoApi, useImgApi } from \"../api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfoModify = (\r\n  setModifying,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n) => {\r\n  const { postInfo } = useInfoApi();\r\n\r\n  const [\r\n    {\r\n      data: infoResponse,\r\n      fulfilled: infoFulfilled,\r\n      pending: infoPending,\r\n      rejected: infoRejected,\r\n      error: infoError,\r\n    },\r\n    { run: postInfoApi },\r\n  ] = useRequest(postInfo);\r\n\r\n  const { postImg } = useImgApi();\r\n\r\n  const [\r\n    {\r\n      data: imgResponse,\r\n      fulfilled: imgFulfilled,\r\n      pending: imgPending,\r\n      rejected: imgRejected,\r\n      error: imgError,\r\n    },\r\n    { run: postImgApi },\r\n  ] = useRequest(postImg);\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (imgFulfilled && infoFulfilled) {\r\n      setImgState({\r\n        imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n        isImgChange: false,\r\n      });\r\n      setModifying();\r\n      //console.log(\"둘다 \");\r\n    }\r\n  }, [imgFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (!imgState.isImgChange && infoFulfilled) {\r\n      setModifying();\r\n      //console.log(\"인포메이션만 \");\r\n    }\r\n  }, [infoFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (infoRejected) {\r\n      if (infoError) {\r\n        alertAction.open(infoError.response.data.message);\r\n      }\r\n    }\r\n  }, [infoRejected]);\r\n\r\n  useEffect(() => {\r\n    if (imgRejected) {\r\n      if (imgError) {\r\n        alertAction.open(imgError.response.data.message);\r\n        console.log(imgError);\r\n      }\r\n    }\r\n  }, [imgRejected]);\r\n\r\n  return { postInfoApi, postImgApi };\r\n};\r\nconst useProfileImgModify = () => {};\r\n\r\nexport default useProfileInfoModify;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport ImageModify from \"../ProfileImage/ImageModify\";\r\nimport { useInfoApi, useImgApi } from \"../../../../hook/api/profileApi\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport useProfileInfoModify from \"../../../../hook/profile/useProfileInfoModify\";\r\n\r\nconst ProfileInfoModify = ({\r\n  setModifying,\r\n\r\n  info,\r\n  setInfo,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n}) => {\r\n  const { postInfoApi, postImgApi } = useProfileInfoModify(\r\n    setModifying,\r\n\r\n    imgState,\r\n    setImgState,\r\n\r\n    userId\r\n  );\r\n\r\n  const handleChange = e => {\r\n    // stack은 지금은 무조건 배열상태로 들어가게 임시방편함\r\n    if (e.target.name === \"stacks\") {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: [e.target.value]\r\n      });\r\n    }\r\n    // 나머지는 원래 방식대로\r\n    else {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n    console.log(info);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { grade, ...withOutGrade } = info;\r\n    postInfoApi(userId, withOutGrade);\r\n    if (imgState.isImgChange) {\r\n      postImgApi(userId, imgState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModify state={imgState} setState={setImgState} />\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Name</Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"userName\"\r\n            placeholder=\"name\"\r\n            value={info.userName}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Role</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"role\"\r\n            value={info.role}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEVELOPER\">DEVELOPER</option>\r\n            <option value=\"DESIGNER\">DESIGNER</option>\r\n            <option value=\"LEADER\">LEADER</option>\r\n            <option value=\"ETC\">ETC</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Stack</Label>\r\n          <Input\r\n            type=\"stack\"\r\n            name=\"stacks\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"stack\"\r\n            value={info.stacks}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Email Contact</Label>\r\n          <Input\r\n            type=\"contact\"\r\n            name=\"contact\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"contact\"\r\n            value={info.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Area</Label>\r\n          <Input\r\n            type=\"area\"\r\n            name=\"area\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"area\"\r\n            value={info.area}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">Introduction</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"introduction\"\r\n            id=\"introduction\"\r\n            value={info.introduction}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button onClick={handleSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoModify;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useAlert } from \"../../hook\";\r\n\r\nconst CenterModal = (props) => {\r\n  const { modalFlag, close } = props;\r\n  console.log(modalFlag);\r\n  console.log(close);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modalFlag}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>{props.header}</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {props.children}\r\n        <ModalFooter>{props.footer}</ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AlertModal = (props) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={alertData.isOpen}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>알림</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={alertAction.close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {alertData.sentence}\r\n        {/* <ModalFooter>{props.footer}</ModalFooter> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CenterModal, AlertModal };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInputUI = withStyles((theme) => ({\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction BootstrapInput(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nfunction InputTemp(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nexport { BootstrapInput, InputTemp };\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport {\r\n  useDeadlineProjectListEffect,\r\n  usePeopleListEffect,\r\n  usePeopleListState,\r\n  useProjectListState,\r\n  useRequest,\r\n} from \"../hook\";\r\nimport {\r\n  Button,\r\n  Layout,\r\n  Jumbotron,\r\n  SubtitleHeader,\r\n  ProjectBox,\r\n  PeopleBox,\r\n} from \"../components\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./main.css\";\r\n\r\nexport default function Root() {\r\n  const [project, projectAction] = useProjectListState();\r\n  const [projectListPromise, { run: getProjectList }] = useRequest(\r\n    projectAction.getDeadLineProjectList\r\n  );\r\n  useDeadlineProjectListEffect(\r\n    projectListPromise,\r\n    getProjectList,\r\n    projectAction.setProjectList,\r\n    projectAction.setPage\r\n  );\r\n\r\n\r\n  const [people, peopleAction] = usePeopleListState();\r\n  const [peopleListPromise, { run: getPeopleList }] = useRequest(\r\n    peopleAction.getPeopleList\r\n  );\r\n  usePeopleListEffect(\r\n    peopleListPromise,\r\n    getPeopleList,\r\n    peopleAction.setPeopleList,\r\n    peopleAction.setPage\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Jumbotron />\r\n        <SubtitleHeader>마감임박 프로젝트 </SubtitleHeader>\r\n        <Row xs=\"12\">\r\n          {project.projectList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"3\" key={index}>\r\n                <ProjectBox data={value} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            id=\"pagination\"\r\n            count={project.totalPages}\r\n            onChange={(e, page) => {\r\n              getProjectList(page - 1);\r\n            }}\r\n          />\r\n        </div>\r\n        <SubtitleHeader> 프로젝트를 찾는 사람들 </SubtitleHeader>\r\n        <Row xs=\"12\">\r\n          {people.peopleList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"2\" key={index}>\r\n                <PeopleBox data={value} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            id=\"pagination\"\r\n            count={people.page.totalPages}\r\n            onChange={(e, page) => {\r\n              getPeopleList(page - 1);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  Grid,\r\n  makeStyles,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  search: {\r\n    margin: theme.spacing(1),\r\n    width: \"30ch\"\r\n  }\r\n}));\r\nexport default function Sort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  stack,\r\n  setStack,\r\n  search,\r\n  setSearch\r\n}) {\r\n  const handleChange = event => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setStack(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeSearch = event => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"developer\">developer</MenuItem>\r\n              <MenuItem value=\"designer\">designer</MenuItem>\r\n              <MenuItem value=\"director\">director</MenuItem>\r\n              <MenuItem value=\"etc.\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"서울\">서울</MenuItem>\r\n              <MenuItem value=\"경기\">경기</MenuItem>\r\n              <MenuItem value=\"부산\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"stack\"\r\n              value={stack}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                기술스택\r\n              </MenuItem>\r\n              <MenuItem value=\"ReactJS\">ReactJS</MenuItem>\r\n              <MenuItem value=\"SPRINGBOOT\">SPRINGBOOT</MenuItem>\r\n              <MenuItem value=\"PHP\">PHP</MenuItem>\r\n            </Select>\r\n            <FormHelperText>stack</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6}>\r\n          <FormControl variant=\"outlined\" className={classes.search}>\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n          <Button>search</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  useProjectListState,\r\n  useProjectListEffect,\r\n  useRequest,\r\n} from \"../../hook\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, ProjectBox } from \"../../components\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Sort from \"../../components/List/Sort\";\r\nimport { Button } from \"reactstrap\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default function ProjectList() {\r\n  const [role, setRole] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [stack, setStack] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [projectList, projectListAction] = useProjectListState();\r\n  const [\r\n    {\r\n      data: resProjectList,\r\n      fulfilled: getProjectListFulfilled,\r\n      pending: getProjectListPending,\r\n      rejected: getProjectListRejected,\r\n      error: getProjectListError,\r\n    },\r\n    { run: getProjectListApi },\r\n  ] = useRequest(projectListAction.getProjectList);\r\n  useProjectListEffect(\r\n    resProjectList,\r\n    getProjectListFulfilled,\r\n    getProjectListRejected,\r\n    getProjectListError,\r\n    getProjectListApi,\r\n    projectListAction.setProjectList,\r\n    projectListAction.setPage\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <hr />\r\n      <Sort\r\n        role={role}\r\n        setRole={setRole}\r\n        region={region}\r\n        setRegion={setRegion}\r\n        stack={stack}\r\n        setStack={setStack}\r\n        search={search}\r\n        setSearch={setSearch}\r\n      />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          <Link to=\"/createProject\">\r\n            <Button>프로젝트 생성</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <h1>{role}</h1>\r\n      <h1>{region}</h1>\r\n      <h1>{stack}</h1>\r\n      <h1>{search}</h1>\r\n      <Row xs=\"12\">\r\n        {projectList.projectList.map((value, index) => {\r\n          return (\r\n            <Col xs=\"3\" key={index}>\r\n              <ProjectBox\r\n                url={`/projectDetail/${value.projectId}`}\r\n                data={value}\r\n                // onClick={() => handleClickProject(projectId)}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <div id=\"pagination_div\">\r\n        <Pagination\r\n          id=\"pagination\"\r\n          count={projectList.page.totalPages}\r\n          onChange={(e, page) => {\r\n            getProjectListApi(page - 1);\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst projectDetail = {\r\n    projectName: \"\",\r\n    teamName: \"\",\r\n    endDate: \"2020-10-30T23:59:00\",\r\n    introduction: \"\",\r\n    state: 'RECRUTING',\r\n    projectField: \"\",\r\n    applyCanFile: true,\r\n    needMember: {\r\n        developer: 0,\r\n        designer: 0,\r\n        planner: 0,\r\n        etc: 0\r\n    },\r\n    questions: [],\r\n    currentMember: null,\r\n    memberList: null,\r\n    img: []\r\n}\r\n\r\nconst projectRedux = createSlice({\r\n    name: \"project\",\r\n    initialState: {\r\n        projectDetail,\r\n    },\r\n    reducers: {\r\n        setProject(state, action) {\r\n            state.projectDetail = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setProject } = projectRedux.actions;\r\nexport default projectRedux.reducer;\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  useProjectDetailState,\r\n  useProjectDetailEffect,\r\n  useRequest,\r\n  useProjectApplyState,\r\n  useProjectApplyEffect,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  IOSSwitch,\r\n  DropdownRole,\r\n  HalfDrawer,\r\n  CenterModal,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  FormControlLabel,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setProject } from \"../../reducers/project\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport \"./projectDetail.css\";\r\nconst ReactMarkdown = require(\"react-markdown\");\r\n\r\nexport default function ProjectDetail() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const [project, projectAction] = useProjectDetailState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(projectAction.fetchGetDetail);\r\n\r\n  useProjectDetailEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n    projectAction,\r\n    url[2]\r\n  );\r\n\r\n  const handleClickUpdate = () => {\r\n    const updateProject = {\r\n      img: [`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`],\r\n      ...project.project,\r\n    };\r\n    dispatch(setProject(updateProject));\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    projectAction.fetchDeleteProject(projectId);\r\n  };\r\n  return (\r\n    <Layout>\r\n      {getProjectPending ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            {project.check.reader ? (\r\n              <div id=\"button\">\r\n                <Link to={`/projectUpdate/${url[2]}`}>\r\n                  <Button onClick={handleClickUpdate}>수정하기</Button>\r\n                </Link>\r\n                <Button\r\n                  onClick={projectAction.openDelete}\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  color=\"danger\"\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n                <CenterModal\r\n                  header=\"삭제하기\"\r\n                  modalFlag={project.check.delete}\r\n                  close={projectAction.closeDelete}\r\n                  footer={\r\n                    <div className=\"full_div\">\r\n                      <div id=\"button\">\r\n                        <Button color=\"danger\" onClick={handleClickDelete}>\r\n                          삭제하기\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div style={{ height: \"12px\" }} />\r\n                  <Typography variant=\"h6\">정말로 삭제하시겠습니까?</Typography>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </CenterModal>\r\n              </div>\r\n            ) : (\r\n              <div id=\"button\">\r\n                <Button onClick={projectAction.openApply}>지원서</Button>\r\n                <CenterModal\r\n                  header=\"지원하기\"\r\n                  modalFlag={project.check.applyModal}\r\n                  close={projectAction.closeApply}\r\n                >\r\n                  <ApplyProject\r\n                    questions={project.project.questions}\r\n                    projectId={projectId}\r\n                    applyApi={project.project._links}\r\n                    detailGet={getProjectFulfilled}\r\n                    close={projectAction.closeApply}\r\n                  />\r\n                </CenterModal>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <div className=\"half_div_left\">\r\n              <img\r\n                id=\"cover\"\r\n                src={`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`}\r\n                alt=\"temp\"\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              {/* <div id=\"tag_case\"> */}\r\n              <div>\r\n                <span id=\"tag\">{project.project.projectField}</span>\r\n              </div>\r\n              <Typography variant=\"h1\">\r\n                {project.project.projectName}\r\n              </Typography>\r\n              <Typography variant=\"h4\">{project.project.teamName}</Typography>\r\n              <Typography>마감일 : {project.project.endDate}</Typography>\r\n              <div id=\"list\">\r\n                <div className=\"half_div_left\">\r\n                  <List>\r\n                    <ListItem divider>\r\n                      <ListItemText primary=\"현재 인원\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.developer < 1}\r\n                    >\r\n                      <ListItemText primary=\"개발자\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.developer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.designer < 1}\r\n                    >\r\n                      <ListItemText primary=\"디자이너\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.designer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.planner < 1}\r\n                    >\r\n                      <ListItemText primary=\"기획자\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.planner}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.currentMember.etc < 1}>\r\n                      <ListItemText primary=\"기타\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.etc}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </List>\r\n                </div>\r\n                <div className=\"half_div_right\">\r\n                  <List>\r\n                    <ListItem divider>\r\n                      <ListItemText primary=\"모집 인원\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.needMember.developer < 1}\r\n                    >\r\n                      <ListItemText primary={`개발자`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.developer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.needMember.designer < 1}\r\n                    >\r\n                      <ListItemText primary={`디자이너`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.designer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.needMember.planner < 1}>\r\n                      <ListItemText primary={`기획자`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.planner}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.needMember.etc < 1}>\r\n                      <ListItemText primary={`기타`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.etc}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </List>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>소개</div>\r\n          <ReactMarkdown source={project.project.introduction} />\r\n          {project.check.reader && (\r\n            <div>\r\n              <FormControlLabel\r\n                style={{ margin: \"0px -20px 0px 0px\", padding: \"0px\" }}\r\n                control={\r\n                  <IOSSwitch\r\n                    name=\"apply\"\r\n                    checked={project.check.apply}\r\n                    onChange={(e) =>\r\n                      projectAction.checkSwitch(e.target.name, e.target.checked)\r\n                    }\r\n                    value=\"apply\"\r\n                  />\r\n                }\r\n              />\r\n              {project.check.apply &&\r\n                (project.apply.length === 0 ? (\r\n                  <div>지원자가 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List dense>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`이름 : ${\r\n                            project.apply[project.pagination.apply].userName\r\n                          }`}\r\n                          secondary=\"Secondary text\"\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`역할 : ${\r\n                            project.apply[project.pagination.apply].role\r\n                          }`}\r\n                          secondary=\"Secondary text\"\r\n                        />\r\n                      </ListItem>\r\n                      <Button\r\n                        onClick={() => {\r\n                          history.push(\r\n                            `/profile/${\r\n                              project.apply[project.pagination.apply].userId\r\n                            }`\r\n                          );\r\n                        }}\r\n                      >\r\n                        상세보기\r\n                      </Button>\r\n                    </List>\r\n                    <Button\r\n                      disabled={project.pagination.apply === 0}\r\n                      onClick={() => projectAction.clickPagination(\"apply\", -1)}\r\n                    >\r\n                      이전\r\n                    </Button>\r\n                    <Button\r\n                      disabled={\r\n                        project.apply.length - project.pagination.apply < 2\r\n                      }\r\n                      onClick={() => projectAction.clickPagination(\"apply\", 1)}\r\n                    >\r\n                      다음\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              <br />\r\n              <FormControlLabel\r\n                style={{ margin: \"0px -20px 0px 0px\", padding: \"0px\" }}\r\n                control={\r\n                  <IOSSwitch\r\n                    name=\"recruit\"\r\n                    checked={project.check.recruit}\r\n                    onChange={(e) =>\r\n                      projectAction.checkSwitch(e.target.name, e.target.checked)\r\n                    }\r\n                    value=\"recruit\"\r\n                  />\r\n                }\r\n              />\r\n              {project.check.recruit && (\r\n                <div>\r\n                  <List dense>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`이름 : ${\r\n                          project.recruit[project.pagination.recruit].userName\r\n                        }`}\r\n                        secondary=\"Secondary text\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`역할 : ${\r\n                          project.recruit[project.pagination.recruit].role\r\n                        }`}\r\n                        secondary=\"Secondary text\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`자기소개 : ${\r\n                          project.recruit[project.pagination.recruit]\r\n                            .selfDescription\r\n                        }`}\r\n                        secondary=\"Secondary text\"\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                  <Button\r\n                    disabled={project.pagination.recruit === 0}\r\n                    onClick={() => projectAction.clickPagination(\"recruit\", -1)}\r\n                  >\r\n                    이전\r\n                  </Button>\r\n                  <Button\r\n                    disabled={\r\n                      project.recruit.length - project.pagination.recruit < 2\r\n                    }\r\n                    onClick={() => projectAction.clickPagination(\"recruit\", 1)}\r\n                  >\r\n                    다음\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst ApplyProject = (props) => {\r\n  const { questions, projectId, applyApi, detailGet, close } = props;\r\n  const [apply, applyAction] = useProjectApplyState(applyApi.apply.href);\r\n  const [applyRes, { run: postApply }] = useRequest(applyAction.fetchPostApply);\r\n  const [applyPutRes, { run: putApply }] = useRequest(\r\n    applyAction.fetchPutApply\r\n  );\r\n  const [applyGetRes, { run: getApply }] = useRequest(\r\n    applyAction.fetchGetApply\r\n  );\r\n\r\n  useProjectApplyEffect(\r\n    questions,\r\n    getApply,\r\n    apply,\r\n    applyAction,\r\n    applyRes,\r\n    applyGetRes,\r\n    applyPutRes,\r\n    detailGet,\r\n    applyApi.apply.href,\r\n    close\r\n  );\r\n\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {apply.apply.answers.map((a, i) => (\r\n        <div>\r\n          <Typography variant=\"h6\">\r\n            {i + 1}번 질문 : {questions[i]}\r\n          </Typography>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">답변</InputGroupAddon>\r\n            <Input\r\n              name=\"answer\"\r\n              onChange={(e) => applyAction.inputAnswer(e.target.value, i)}\r\n              value={a}\r\n            />\r\n          </InputGroup>\r\n          <div style={{ height: \"12px\" }} />\r\n        </div>\r\n      ))}\r\n      <Label for=\"exampleEmail\" style={{ marginBottom: \"0px\" }}>\r\n        자기 소개\r\n      </Label>\r\n      <BootstrapInput\r\n        multiline\r\n        name=\"introduction\"\r\n        onChange={(e) => applyAction.inputApply(e.target.name, e.target.value)}\r\n        value={apply.apply.introduction}\r\n        fullWidth\r\n      />\r\n      <div style={{ height: \"12px\" }} />\r\n      <DropdownRole\r\n        style={{ width: \"100%\" }}\r\n        dropdownCaret=\"역할 선택\"\r\n        action={applyAction.selectRole}\r\n        pick={apply.apply.role}\r\n      />\r\n      <div style={{ height: \"12px\" }} />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          {apply.applied ? (\r\n            <Button\r\n              onClick={() => {\r\n                putApply(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  projectId\r\n                );\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                postApply(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  projectId\r\n                );\r\n              }}\r\n            >\r\n              지원하기\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"12px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n<MuiDateTimePicker\r\n    name=\"endDate\"\r\n    value={project.endDate}\r\n    onChange={setStartDate}\r\n    format=\"yy.MM.dd HH:mm\"\r\n    placeholder=\"종료일\"\r\n    variant=\"dialog\"\r\n    disableUnderline\r\n    disableToolbar={false}\r\n    hideTabs\r\n    clearable\r\n    ampm\r\n    style={{\r\n        borderLeft: '1px solid #cdcecd',\r\n    }}\r\n/>\r\n</MuiPickersUtilsProvider> */\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport {\r\n  useProjectCreateState,\r\n  useProjectCreateEffect,\r\n  useRequest,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport tempimg from \"../../components/icon/move.gif\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\n\r\nexport default function ProjectCreate() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const [project, projectAction] = useProjectCreateState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: createProjectApi },\r\n  ] = useRequest(projectAction.fetchPostCreate);\r\n  const [\r\n    { fulfilled: getImgFulfilled, pending: getImgPending },\r\n    { run: createImgApi },\r\n  ] = useRequest(projectAction.fetchImg);\r\n  useProjectCreateEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    createImgApi,\r\n    project.img\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (getImgFulfilled) {\r\n      const projectId = resProject.data._links.createdProject.href.split(\"/\");\r\n      history.push(`/projectDetail/${projectId[2]}`);\r\n    }\r\n  }, [getImgFulfilled]);\r\n\r\n  const handleClickCreate = () => {\r\n    createProjectApi(project.project);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {false ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button onClick={handleClickCreate}>Make Project</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={project.img} saveImg={projectAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <Label for=\"exampleEmail\">Project Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              value={project.project.projectName}\r\n              onChange={projectAction.inputProject}\r\n            />\r\n            <Label for=\"exampleEmail\">Team Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <Label for=\"exampleEmail\">Recruit People</Label>\r\n              <br />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Developer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"developer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.developer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Designer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"designer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.designer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Planner\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"planner\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.planner}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Etc\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"etc\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.etc}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <Label for=\"exampleEmail\">End Date</Label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={project.project.endDate}\r\n                  onChange={projectAction.inputDate}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableUnderline\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Label for=\"exampleEmail\">Role</Label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={projectAction.inputField}\r\n                pick={project.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Label for=\"exampleEmail\">Introduction</Label>\r\n            <BootstrapInput\r\n              multiline\r\n              type=\"name\"\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={project.project.introduction}\r\n              onChange={projectAction.inputProject}\r\n              fullWidth\r\n            />\r\n            <Label for=\"exampleEmail\">Questions</Label>\r\n            {project.project.questions.map((value, index) => {\r\n              const questionString = `Question ${index + 1}`;\r\n              return (\r\n                <div>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      {questionString}\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"question\"\r\n                      name=\"questions\"\r\n                      onChange={(e) =>\r\n                        projectAction.inputQuestion(e.target.value, index)\r\n                      }\r\n                      value={value}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        onClick={() => projectAction.deleteQuestion(index)}\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={projectAction.addQuestion}\r\n              >\r\n                Add Questions\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  useProjectUpdateState,\r\n  useRequest,\r\n  useProjectUpdateEffect,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport MultiInput from \"@material-ui/core/Input\";\r\n\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nexport default function ProjectUpdate() {\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const [project, projectAction] = useProjectUpdateState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: UpdateProjectApi },\r\n  ] = useRequest(projectAction.fetchPutUpdate);\r\n  const [\r\n    {\r\n      data: resImg,\r\n      fulfilled: getImgFulfilled,\r\n      pending: getImgPending,\r\n      rejected: getImgRejected,\r\n      error: getImgError,\r\n    },\r\n    { run: UpdateImgApi },\r\n  ] = useRequest(projectAction.fetchImg);\r\n  useProjectUpdateEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    UpdateImgApi,\r\n    project.img,\r\n    url[2]\r\n  );\r\n  const handleClickUpdate = () => {\r\n    const updateData = {\r\n      projectName: project.project.projectName,\r\n      teamName: project.project.teamName,\r\n      endDate: project.project.endDate,\r\n      introduction: project.project.introduction,\r\n      state: project.project.state,\r\n      projectField: project.project.projectField,\r\n      applyCanFile: project.project.applyCanFile,\r\n      needMember: {\r\n        developer: project.project.needMember.developer,\r\n        designer: project.project.needMember.designer,\r\n        planner: project.project.needMember.planner,\r\n        etc: project.project.needMember.etc,\r\n      },\r\n      questions: project.project.questions,\r\n    };\r\n    UpdateProjectApi(projectId, updateData);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {false ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button onClick={handleClickUpdate}>Update Project</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={project.img} saveImg={projectAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <Label for=\"exampleEmail\">Project Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.projectName}\r\n            />\r\n            <Label for=\"exampleEmail\">Team Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <Label for=\"exampleEmail\">Recruit People</Label>\r\n              <br />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Developer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"developer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.developer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Designer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"designer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.designer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Planner\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"planner\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.planner}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Etc\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"etc\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.etc}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <Label for=\"exampleEmail\">End Date</Label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={project.project.endDate}\r\n                  onChange={projectAction.inputDate}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableUnderline\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Label for=\"exampleEmail\">Role</Label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={projectAction.inputField}\r\n                pick={project.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Label for=\"exampleEmail\">Introduction</Label>\r\n            <BootstrapInput\r\n              multiline\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={project.project.introduction}\r\n              onChange={projectAction.inputProject}\r\n              fullWidth\r\n            />\r\n            <Label for=\"exampleEmail\">Questions</Label>\r\n            {project.project.questions.map((value, index) => {\r\n              const questionString = `Question ${index + 1}`;\r\n              return (\r\n                <div>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      {questionString}\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"question\"\r\n                      name=\"questions\"\r\n                      onChange={(e) =>\r\n                        projectAction.inputQuestion(e.target.value, index)\r\n                      }\r\n                      value={value}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        onClick={() => projectAction.deleteQuestion(index)}\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={projectAction.addQuestion}\r\n              >\r\n                Add Questions\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Layout } from \"../../components\";\r\nimport { useRequest } from \"../../hook\";\r\nimport { useRegisterApi } from \"../../hook/api/authApi\";\r\nimport { useRegisterEffect } from \"../../hook/auth/useRegister\";\r\nimport \"./Login.css\";\r\n\r\nconst Register = () => {\r\n  const [state, setState] = useState({\r\n    userId: \"\",\r\n    userEmail: \"\",\r\n    password: \"\",\r\n    name: \"\"\r\n  });\r\n\r\n  //1. api를 가져온다.\r\n  const { postRegister } = useRegisterApi();\r\n\r\n  //2. api와 상태변수들을 useRequest로 연동한다.\r\n  const [\r\n    {\r\n      data: resRegister,\r\n      fulfilled: RegisterFulfilled,\r\n      pending: RegisterPending,\r\n      rejected: RegisterRejected,\r\n      error: RegisterError\r\n    },\r\n    //여기서 postRegisterApi는 액션 생성 함수\r\n    { run: postRegisterApi }\r\n  ] = useRequest(postRegister);\r\n\r\n  //3.해당 hook에 상태변수들을 넣어준다.\r\n  useRegisterEffect(\r\n    resRegister,\r\n    RegisterFulfilled,\r\n    RegisterPending,\r\n    RegisterRejected,\r\n    RegisterError\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postRegisterApi(state);\r\n    setState({ userId: \"\", userEmail: \"\", password: \"\", name: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row xs=\"3\">\r\n          <Col></Col>\r\n          <Col className=\"loginBox\">\r\n            <h3 className=\"loginHeader\">Create your Account</h3>\r\n            <br />\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"id\">UserId</Label>\r\n                <Input\r\n                  type=\"id\"\r\n                  name=\"userId\"\r\n                  id=\"userId\"\r\n                  placeholder=\"userId\"\r\n                  value={state.userId}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"userEmail\"\r\n                  id=\"exampleEmail\"\r\n                  placeholder=\"email\"\r\n                  value={state.userEmail}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"examplePassword\"\r\n                  placeholder=\"password placeholder\"\r\n                  value={state.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"id\">Name</Label>\r\n                <Input\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"name\"\r\n                  value={state.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <div className=\"loginSubmit\">\r\n                <Button>Submit</Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function useRegisterApi() {\r\n  const postRegister = async (data) => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signup`,\r\n      data\r\n    );\r\n    console.log(res);\r\n    return res.data;\r\n  };\r\n  return { postRegister };\r\n}\r\n\r\nexport function useLoginApi() {\r\n  const postLogin = async (data) => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signin`,\r\n      data\r\n    );\r\n    // console.log(res);\r\n    return res.data;\r\n  };\r\n  return { postLogin };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"../\";\r\n\r\nexport function useRegisterEffect(data, fulfilled, pending, rejected, error) {\r\n  const history = useHistory();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      alertAction.open(\r\n        \"회원가입을 무사히 마쳤습니다,, \\n 가서 로그인해 인간아!!\"\r\n      );\r\n      history.push(\"/login\");\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data);\r\n        // console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useProfileProject = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getProjectApi,\r\n\r\n  setList,\r\n  hiding,\r\n\r\n  userId\r\n) => {\r\n  const check = useSelector(state => state.profile.isHideChange);\r\n\r\n  // hide 변경사항이 있으면 다시 get요청\r\n  useEffect(() => {\r\n    if (check) {\r\n      getProjectApi(userId);\r\n    }\r\n  }, [check, userId]);\r\n\r\n  // 요청 성공시\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProject;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst profileRedux = createSlice({\r\n  name: \"hide\",\r\n  initialState: {\r\n    isHideChange: true\r\n  },\r\n  reducers: {\r\n    setHideChange(state, action) {\r\n      state.isHideChange = action.payload.isHideChange;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setHideChange } = profileRedux.actions;\r\nexport default profileRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useProfileProjectModify = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getHideProjectApi,\r\n\r\n  resHideProject,\r\n  hideProjectFulfilled,\r\n  hideProjectRejected,\r\n  hideProjectError,\r\n\r\n  resDisplayProject,\r\n  displayProjectFulfilled,\r\n  displayProjectRejected,\r\n  displayProjectError,\r\n\r\n  userId,\r\n\r\n  list,\r\n  setList,\r\n\r\n  hideList,\r\n  setHideList\r\n) => {\r\n  // 처음 로딩 시 숨겨진 프로젝트 목록 불러오기\r\n  useEffect(() => {\r\n    getHideProjectApi(userId);\r\n  }, []);\r\n\r\n  // 불러오기 성공시 , 불러온 내부에 프로젝트 데이터가 있으면 숨김 state에 저장\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setHideList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  // 숨기기 요청 성공시\r\n  useEffect(() => {\r\n    if (hideProjectFulfilled) {\r\n      let moveData = {};\r\n      // 일반 state list에서 선택한 project 제거\r\n      setList(\r\n        list.filter(a => {\r\n          if (a.projectId === resHideProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n\r\n      // 숨김 state list에서 위에서 선택된 project 추가\r\n      setHideList(hideList => {\r\n        const newList = hideList.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [hideProjectFulfilled]);\r\n\r\n  // 보여주기 요청 성공시\r\n  useEffect(() => {\r\n    if (displayProjectFulfilled) {\r\n      let moveData = {};\r\n      // 숨김 state list에서 선택한 project 제거\r\n      setHideList(\r\n        hideList.filter(a => {\r\n          if (a.projectId === resDisplayProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n      // 일반 state list에 선택된 프로젝트 추가\r\n      setList(list => {\r\n        const newList = list.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [displayProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProjectModify;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport {\r\n  usePlanProjectApi,\r\n  useHideProjectApi\r\n} from \"../../../../hook/api/profileApi\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyPlanProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = usePlanProjectApi();\r\n  const { hideProject, displayProject } = useHideProjectApi();\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getHideProjectApi }\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError\r\n    },\r\n    { run: hideProjectApi }\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError\r\n    },\r\n    { run: displayProjectApi }\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList\r\n  );\r\n\r\n  const handleHide = id => {\r\n    hideProjectApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = id => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyPlanProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { useRunningProjectApi } from \"../../../../hook/api/profileApi\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyRunningProjects from \"./ModifyPlanProjects\";\r\n\r\nconst RunningProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n  const { getProject } = useRunningProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getProjectApi }\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyRunningProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunningProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport {\r\n  useEndedProjectApi,\r\n  useHideProjectApi\r\n} from \"../../../../hook/api/profileApi\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyEndedProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = useEndedProjectApi();\r\n  const { hideProject, displayProject } = useHideProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getHideProjectApi }\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError\r\n    },\r\n    { run: hideProjectApi }\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError\r\n    },\r\n    { run: displayProjectApi }\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList\r\n  );\r\n\r\n  const handleHide = id => {\r\n    hideProjectApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = id => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyEndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { useEndedProjectApi } from \"../../../../hook/api/profileApi\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"./profileProject.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyEndedProjects from \"./ModifyEndedProjects\";\r\n\r\nconst EndedProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = useEndedProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getProjectApi }\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyEndedProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { usePlanProjectApi } from \"../../../../hook/api/profileApi\";\r\n// 잠시 ended 훅을 공유해서 써보자\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyPlanProjects from \"./ModifyPlanProjects\";\r\n\r\nconst PlanProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = usePlanProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getProjectApi }\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyPlanProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox data={value} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanProjects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useProfileRecruit = (\r\n  getProjectData,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjecsError,\r\n  getProjectApi,\r\n\r\n  postRecruitData,\r\n  postRecruitFulfilled,\r\n  postRecruitRejected,\r\n  postRecruitError,\r\n\r\n  toggleNested,\r\n  setNestedMessage\r\n) => {\r\n  const [plannedProjects, setPlannedProjects] = useState([]);\r\n  const myId = useSelector((state) => state.login.userId);\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (myId) {\r\n      getProjectApi(myId);\r\n    }\r\n  }, [myId]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      // console.log(getProjectData);\r\n      setPlannedProjects(getProjectData);\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectRejected) {\r\n      if (getProjecsError) {\r\n        alertAction.open(getProjecsError.response.data.message);\r\n        console.log(getProjecsError);\r\n      }\r\n    }\r\n  }, [getProjectRejected]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitFulfilled) {\r\n      setNestedMessage({\r\n        status: true,\r\n        message: \"영입 메시지를 성공적으로 전달했습니다!\",\r\n      });\r\n      toggleNested();\r\n    }\r\n  }, [postRecruitFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitRejected) {\r\n      if (postRecruitError) {\r\n        console.log(postRecruitError);\r\n        setNestedMessage({\r\n          status: false,\r\n          message: \"오류가 발생했습니다. 다시 시도해주세요.\",\r\n        });\r\n        toggleNested();\r\n      }\r\n    }\r\n  }, [postRecruitRejected]);\r\n  return { plannedProjects };\r\n};\r\n\r\nexport default useProfileRecruit;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport {\r\n  usePlanProjectApi,\r\n  useSendRecruitPeopleApi\r\n} from \"../../../hook/api/profileApi\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Profile.css\";\r\nimport { useRequest } from \"../../../hook\";\r\nimport useProfileRecruit from \"../../../hook/profile/useProfileRecruit\";\r\n\r\nconst RecruitModal = ({ modal, toggle, userId }) => {\r\n  // 내부 State\r\n  const [recruitState, setRecruitState] = useState({\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectId: \"\"\r\n  });\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n  const [nestedMessage, setNestedMessage] = useState({\r\n    status: false,\r\n    message: \"\"\r\n  });\r\n\r\n  // 내부 모달 띄우기\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n\r\n  // Recruit 요청 실패시, 내부 모달창만 닫기 + 내부 state 유지\r\n  // Recruit 요청 성공시, 모든 모달창 닫기 + 내부 state 초기화\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    if (nestedMessage.status) {\r\n      setCloseAll(true);\r\n      setRecruitState({\r\n        introduction: \"\",\r\n        role: \"\",\r\n        projectId: \"\"\r\n      });\r\n    } else {\r\n      setCloseAll(false);\r\n    }\r\n  };\r\n\r\n  const { getAllPlannedProject } = usePlanProjectApi();\r\n  const { postRecruit } = useSendRecruitPeopleApi();\r\n\r\n  const [\r\n    {\r\n      data: getProjectData,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getProjectApi }\r\n  ] = useRequest(getAllPlannedProject);\r\n\r\n  const [\r\n    {\r\n      data: postRecruitData,\r\n      fulfilled: postRecruitFulfilled,\r\n      pending: postRecruitPending,\r\n      rejected: postRecruitRejected,\r\n      error: postRecruitError\r\n    },\r\n    { run: postRecruitApi }\r\n  ] = useRequest(postRecruit);\r\n\r\n  const { plannedProjects } = useProfileRecruit(\r\n    getProjectData,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    postRecruitData,\r\n    postRecruitFulfilled,\r\n    postRecruitRejected,\r\n    postRecruitError,\r\n\r\n    toggleNested,\r\n    setNestedMessage\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setRecruitState({\r\n      ...recruitState,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    postRecruitApi(userId, recruitState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>프로젝트 선택</InputLabel>\r\n          <Select\r\n            value={recruitState.projectId}\r\n            name=\"projectId\"\r\n            onChange={handleChange}\r\n          >\r\n            {plannedProjects &&\r\n              plannedProjects.map((pj, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={pj.projectId}>\r\n                    {pj.projectName}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>제안할 역할</InputLabel>\r\n          <Select value={recruitState.role} name=\"role\" onChange={handleChange}>\r\n            <MenuItem value={\"DEVELOPER\"}>DEVELOPER</MenuItem>\r\n            <MenuItem value={\"DESIGNER\"}>DESIGNER</MenuItem>\r\n            <MenuItem value={\"LEADER\"}>LEADER</MenuItem>\r\n            <MenuItem value={\"ETC\"}>ETC</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n\r\n        <TextField\r\n          label=\"영입 제안 메시지를 입력하세요.\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          name=\"introduction\"\r\n          value={recruitState.introduction}\r\n          onChange={handleChange}\r\n        />\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleSubmit}>\r\n            Send\r\n          </Button>\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalBody>{nestedMessage.message}</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecruitModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useInvitationListApi } from \"../api/profileApi\";\r\nimport { useInvitationDetailApi } from \"../api/profileApi\";\r\n\r\nexport const useInvitationEffect = userId => {\r\n  const [invitationList, setInvitationList] = useState([]);\r\n  const [noList, setNoList] = useState({ isError: false, errorMessage: \"\" });\r\n\r\n  const noticeNoList = message => {\r\n    setNoList({\r\n      isError: true,\r\n      errorMessage: message\r\n    });\r\n  };\r\n\r\n  const { getInvitationList } = useInvitationListApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationListApi }\r\n  ] = useRequest(getInvitationList);\r\n\r\n  useEffect(() => {\r\n    getInvitationListApi(userId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // 데이터가 있을 때\r\n      if (\"_embedded\" in data) {\r\n        setInvitationList(data._embedded.recruitDtoList);\r\n      }\r\n      // 데이터가 없을 때\r\n      else {\r\n        noticeNoList(\"초대 요청이 없습니다.\");\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error && error.response.data.error === \"105\") {\r\n        console.log(\"rej\");\r\n        noticeNoList(error.response.data.message);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  return { pending, invitationList, noList };\r\n};\r\n\r\nexport const useInvitationDetailEffect = (userId, pid, toggleNested) => {\r\n  const [invitaionDetail, setInvitaionDetail] = useState({\r\n    userName: \"\",\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectName: \"\",\r\n    state: \"\"\r\n  });\r\n  const [activityName, setActivityName] = useState(\"\");\r\n\r\n  const handleAccept = () => {\r\n    putInvitationAcceptApi(userId, pid);\r\n  };\r\n\r\n  const handleReject = () => {\r\n    deleteInvitationRejectApi(userId, pid);\r\n  };\r\n\r\n  const {\r\n    getInvitationDetail,\r\n    putInvitationAccept,\r\n    deleteInvitationReject\r\n  } = useInvitationDetailApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationDetailApi }\r\n  ] = useRequest(getInvitationDetail);\r\n\r\n  const [\r\n    {\r\n      data: putData,\r\n      error: putError,\r\n      pending: putPending,\r\n      fulfilled: putFulfilled,\r\n      reject: putRejected\r\n    },\r\n    { run: putInvitationAcceptApi }\r\n  ] = useRequest(putInvitationAccept);\r\n\r\n  const [\r\n    {\r\n      data: deleteData,\r\n      error: deleteError,\r\n      pending: deletePending,\r\n      fulfilled: deleteFulfilled,\r\n      reject: deleteRejected\r\n    },\r\n    { run: deleteInvitationRejectApi }\r\n  ] = useRequest(deleteInvitationReject);\r\n\r\n  useEffect(() => {\r\n    getInvitationDetailApi(userId, pid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInvitaionDetail({\r\n        userName: data.userName,\r\n        introduction: data.introduction,\r\n        projectName: data.projectName,\r\n        role: data.role,\r\n        state: data.state\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (putFulfilled) {\r\n      setActivityName(\"수락\");\r\n      toggleNested();\r\n    }\r\n  }, [putFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (deleteFulfilled) {\r\n      setActivityName(\"거절\");\r\n      toggleNested();\r\n    }\r\n  }, [deleteFulfilled]);\r\n\r\n  return [\r\n    {\r\n      invitaionDetail,\r\n      activityName\r\n    },\r\n    {\r\n      handleAccept,\r\n      handleReject\r\n    }\r\n  ];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  CardText\r\n} from \"reactstrap\";\r\nimport { useInvitationDetailEffect } from \"../../../../hook/profile/useInvitation\";\r\n\r\nconst DetailModal = ({ pid, userId, modal, toggle }) => {\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(true);\r\n  };\r\n\r\n  const [\r\n    { invitaionDetail, activityName },\r\n    { handleAccept, handleReject }\r\n  ] = useInvitationDetailEffect(userId, pid, toggleNested);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>{invitaionDetail.projectName}</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <Row xs=\"2\">\r\n            <Col>\r\n              <div>\r\n                <Badge color=\"info\" pill>\r\n                  {invitaionDetail.role}\r\n                </Badge>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <p> status : {invitaionDetail.state}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card body style={{ height: \"200px\" }}>\r\n            <CardText>{invitaionDetail.introduction}</CardText>\r\n          </Card>\r\n          <div> {invitaionDetail.userName}</div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {invitaionDetail.state === \"READ\" && (\r\n            <>\r\n              <Button color=\"primary\" onClick={handleAccept}>\r\n                Accept\r\n              </Button>\r\n              <Button color=\"danger\" onClick={handleReject}>\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalHeader>Nested Modal title</ModalHeader>\r\n            <ModalBody>{activityName}이 완료되었습니다.</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, CardTitle, CardText, Row, Col, Badge } from \"reactstrap\";\r\nimport DetailModal from \"./DetailModal\";\r\nconst InvitationBox = ({ data, userId }) => {\r\n  const [detailModal, setDetailModal] = useState(false);\r\n  const detailModalToggle = () => {\r\n    setDetailModal(!detailModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card body onClick={detailModalToggle}>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"8\">\r\n              <CardTitle>{data.projectName}</CardTitle>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Badge color=\"info\" pill>\r\n                {data.role}\r\n              </Badge>\r\n            </Col>\r\n          </Row>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"9\">\r\n              <CardText>{data.introduction}</CardText>\r\n            </Col>\r\n\r\n            <Col>\r\n              <CardText>{data.userName}</CardText>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        {detailModal && (\r\n          <DetailModal\r\n            pid={data.projectId}\r\n            userId={userId}\r\n            modal={detailModal}\r\n            toggle={detailModalToggle}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvitationBox;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useInvitationEffect } from \"../../../../hook/profile/useInvitation\";\r\nimport InvitationBox from \"./InvitationBox\";\r\nimport \"./Invitation.css\";\r\n\r\nconst InvitationModal = ({ modal, toggle, userId }) => {\r\n  const { pending, invitationList, noList } = useInvitationEffect(userId);\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> Invitations </ModalHeader>\r\n        <ModalBody>\r\n          {pending ? (\r\n            <div>로딩중...</div>\r\n          ) : noList.isError ? (\r\n            <div>{noList.errorMessage}</div>\r\n          ) : (\r\n            <div className=\"invitation_list\">\r\n              {invitationList.map((invitation, index) => {\r\n                return (\r\n                  <InvitationBox\r\n                    key={index}\r\n                    data={invitation}\r\n                    userId={userId}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvitationModal;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Layout, ProfileInfo, ProfileInfoModify } from \"../components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport RunningProjects from \"../components/People/Profile/ProfileProjects/RunningProjects\";\r\nimport EndedProjects from \"../components/People/Profile/ProfileProjects/EndedProjects\";\r\nimport PlanProjects from \"../components/People/Profile/ProfileProjects/PlanProjects\";\r\nimport RecruitModal from \"../components/People/Profile/RecruitModal\";\r\nimport InvitationModal from \"../components/People/Profile/Invitation/InvitationModal\";\r\n\r\nconst Profile = () => {\r\n  // url에서 userId 추출\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const userId = url[2];\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  // 컴포넌트 이동을 다룰 변수\r\n  const [modifying, setModifying] = useState(false);\r\n\r\n  // modify창 열고 닫을 토글\r\n  const modifyToggle = () => {\r\n    setModifying(!modifying);\r\n  };\r\n\r\n  const [invitationModal, setInvitationModal] = useState(false);\r\n\r\n  const invitationToggle = () => {\r\n    setInvitationModal(!invitationModal);\r\n  };\r\n\r\n  const [info, setInfo] = useState({\r\n    userName: \"\",\r\n    role: \"\",\r\n    stacks: [\"\"],\r\n    contact: \"\",\r\n    area: \"\",\r\n    grade: 0,\r\n    introduction: \"\"\r\n  });\r\n\r\n  const [imgState, setImgState] = useState({\r\n    imgUrl: \"\",\r\n    isImgChange: false\r\n  });\r\n\r\n  // Recruit modal\r\n  const [modal, setModal] = useState(false);\r\n  const recruitToggle = () => setModal(!modal);\r\n  // console.log(modal);\r\n\r\n  // 우측 탭 상태변수\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  // 탭 토글\r\n  const tabToggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <br />\r\n      <Row xs=\"4\">\r\n        <Col>\r\n          {modifying ? (\r\n            <ProfileInfoModify\r\n              setModifying={modifyToggle}\r\n              info={info}\r\n              setInfo={setInfo}\r\n              imgState={imgState}\r\n              setImgState={setImgState}\r\n              userId={userId}\r\n            />\r\n          ) : (\r\n            <>\r\n              <ProfileInfo\r\n                setModifying={modifyToggle}\r\n                info={info}\r\n                setInfo={setInfo}\r\n                imgState={imgState}\r\n                setImgState={setImgState}\r\n                userId={userId}\r\n              />\r\n\r\n              {myId &&\r\n                (userId === myId ? (\r\n                  <>\r\n                    <Button onClick={modifyToggle}>Modify</Button>\r\n                    <Button onClick={invitationToggle}>See Invitations</Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Button onClick={recruitToggle}> recruit </Button>\r\n                  </>\r\n                ))}\r\n              {modal && (\r\n                <RecruitModal\r\n                  modal={modal}\r\n                  toggle={recruitToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n              {invitationModal && (\r\n                <InvitationModal\r\n                  modal={invitationModal}\r\n                  toggle={invitationToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs=\"9\">\r\n          <div>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"1\");\r\n                  }}\r\n                >\r\n                  Ended Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"2\");\r\n                  }}\r\n                >\r\n                  Running Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"3\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"3\");\r\n                  }}\r\n                >\r\n                  Plan Projects\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <EndedProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"2\">\r\n                <RunningProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"3\">\r\n                <PlanProjects userId={userId} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Layout } from \"../../components\";\r\nimport { useLoginApi } from \"../../hook/api/authApi\";\r\nimport { useLoginEffect } from \"../../hook/auth/useLogin\";\r\nimport { useRequest, useMove } from \"../../hook\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./Login.css\";\r\nconst Login = () => {\r\n  const isToken = useSelector(state => state.login.isToken);\r\n\r\n  const { postLogin } = useLoginApi();\r\n\r\n  const [\r\n    {\r\n      data: resLogin,\r\n      fulfilled: LoginFulfilled,\r\n      pending: LoginPending,\r\n      rejected: LoginRejected,\r\n      error: LoginError\r\n    },\r\n    { run: postLoginApi }\r\n  ] = useRequest(postLogin);\r\n\r\n  const [state, setState] = useLoginEffect(\r\n    resLogin,\r\n    LoginFulfilled,\r\n    LoginPending,\r\n    LoginRejected,\r\n    LoginError\r\n  );\r\n\r\n  useMove(isToken && LoginFulfilled, \"\");\r\n\r\n  const handleChange = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postLoginApi(state);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row xs=\"3\">\r\n          <Col></Col>\r\n\r\n          <Col className=\"loginBox\">\r\n            <h1 className=\"loginHeader\">Login</h1>\r\n            <br />\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"id\">UserId</Label>\r\n                <Input\r\n                  type=\"id\"\r\n                  name=\"userId\"\r\n                  id=\"userId\"\r\n                  placeholder=\"userId\"\r\n                  value={state.userId}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"examplePassword\"\r\n                  placeholder=\"password placeholder\"\r\n                  value={state.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <br />\r\n              <div className=\"loginSubmit\">\r\n                <Button>Submit</Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../reducers/login\";\r\nimport { useAlert } from \"../\";\r\nexport function useLoginEffect(data, fulfilled, pending, rejected, error) {\r\n  // 로그인 정보 state\r\n  const [state, setState] = useState({\r\n    userId: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [alertData, alertAction] = useAlert();\r\n  // 로그인 성공 시 useEffect\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // response에서 토큰 추출\r\n      const accessToken = data.accessToken;\r\n      const refreshToken = data.refreshToken;\r\n\r\n      // 세션스토리지에 아이디와 토큰 저장\r\n      window.sessionStorage.setItem(\"id\", state.userId);\r\n      window.sessionStorage.setItem(\"accessToken\", accessToken);\r\n      window.sessionStorage.setItem(\"refreshToken\", refreshToken);\r\n      alertAction.open(\"로그인 성공\");\r\n\r\n      // 리덕스에 디스패치\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: state.userId,\r\n      };\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // 로그인 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        // 실패 이유 알림\r\n        alertAction.open(error.response.data);\r\n\r\n        // 실패한 아이디는 내버려두고, 비밀번호만 초기화\r\n        setState({\r\n          ...state,\r\n          password: \"\",\r\n        });\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // login page에서 input값 관리에 사용할 수 있게 로그인 정보 state 리턴\r\n  return [state, setState];\r\n}\r\n\r\n// 세션 스토리지에 아이디와 토큰이 있을 때, 리덕스에 토큰유무와 아이디를 저장\r\n// 레이아웃 바에서 유저아이디를 띄우기 위함\r\nexport function useLoginAuth() {\r\n  const dispatch = useDispatch();\r\n\r\n  // 새로고침시 (최상단 컴포넌트 app이 다시 그려질 시)만 동작\r\n  useEffect(() => {\r\n    // 세션에서 값 받아옴\r\n    let test = null;\r\n    test = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n\r\n    // null값이 아니면\r\n    if (test !== null) {\r\n      // payload 만들어서\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: id,\r\n      };\r\n\r\n      // 액션 디스패치\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, []);\r\n}\r\n// export function useLogoutAuth(logout) {\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     // 세션에서 값 받아옴\r\n\r\n//     let test = window.sessionStorage.getItem(\"accessToken\");\r\n//     const id = window.sessionStorage.getItem(\"id\");\r\n\r\n//     // null값이 아니면\r\n//     if (test === null) {\r\n//       // payload 만들어서\r\n//       const reduxData = {\r\n//         isToken: false,\r\n//         userId: null\r\n//       };\r\n\r\n//       // 액션 디스패치\r\n//       dispatch(setToken(reduxData));\r\n//     }\r\n//   }, [logout]);\r\n// }\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function useMove(condition, destination) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (condition) history.push(`./${destination}`);\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      history.push(`./${destination}`);\r\n    }\r\n  }, [condition])\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  Root,\r\n  ProjectList,\r\n  Profile,\r\n  Register,\r\n  Login,\r\n  ProjectDetail,\r\n  ProjectCreate,\r\n  ProjectUpdate,\r\n} from \"./pages\";\r\nimport { AlertModal } from \"./components\";\r\nimport { useLoginAuth } from \"./hook/auth/useLogin\";\r\n\r\nfunction App() {\r\n  useLoginAuth();\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Root} />\r\n        <Route path=\"/projects\" component={ProjectList} />\r\n        <Route path=\"/createProject\" component={ProjectCreate} />\r\n        <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n        <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/profile/:userId\" component={Profile} />\r\n      </Switch>\r\n      <AlertModal />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport temporaryRedux from \"./temporary\";\r\nimport loginRedux from \"./login\";\r\nimport profileRedux from \"./profile\";\r\nimport projectRedux from \"./project\";\r\nimport alertRedux from \"./alert\";\r\n\r\nexport default combineReducers({\r\n  temproray: temporaryRedux,\r\n  login: loginRedux,\r\n  profile: profileRedux,\r\n  project: projectRedux,\r\n  alert: alertRedux,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}