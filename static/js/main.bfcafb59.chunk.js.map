{"version":3,"sources":["hook/useAlert.ts","components/People/PeopleBox.js","hook/useHook.js","hook/usePageMove.js","hook/useLazyLoading.js","reducers/project.js","hook/api/authApi.ts","hook/api/peopleApi.ts","hook/api/profileApi.ts","App.js","serviceWorker.js","reducers/temporary.js","reducers/index.ts","index.js","hook/useRequest.ts","reducers/login.js","reducers/alert.ts","hook/profile/useImage.js","hook/projectTs/useProjectListTs.ts","hook/projectTs/useProjectDetailTs.ts","hook/projectTs/useProjectApplyTs.ts","hook/projectTs/useProjectUpdateTs.ts","hook/projectTs/useProjectCreateTs.ts","components/Layout.js","components/Main/Jumbotron.jsx","components/Switch/switch.js","components/Image/inputImage.jsx","components/Dropdown/dropdown.jsx","hook/profile/useProfileInfo.js","components/People/Profile/ProfileInfo/ProfileInfo.js","components/People/Profile/ProfileImage/ImageModify.js","hook/profile/useProfileInfoModify.js","components/People/Profile/ProfileInfo/ProfileInfoModify.js","components/Modal/Modal.jsx","components/Input/Input.jsx","components/Project/ProjectBox.js","hook/auth/useLogin.ts","hook/auth/useRegister.ts","reducers/profile.js"],"names":["useAlert","dispatch","useDispatch","isOpen","useSelector","state","alert","alertState","sentence","alertAction","open","data","openAlert","close","closeAlert","useStyles","makeStyles","theme","root","display","flexDirection","marginBottom","spacing","height","width","fontSize","borderRadius","color","backgroundColor","PeopleBox","props","classes","useState","imgState","setImgState","lazy","useImage","userId","useLazyLoading","id","className","card","to","pathname","url","style","textDecoration","badgeContent","String","grade","ref","target","data-src","imgUrl","object-fit","alt","stack","stacks","pill","require","useMove","condition","destination","history","useHistory","useEffect","push","useRef","current","observer","window","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImg","src","dataset","observe","disconnect","projectRedux","createSlice","name","initialState","projectDetail","projectName","teamName","endDate","introduction","projectField","applyCanFile","needMember","developer","designer","planner","etc","questions","currentMember","memberList","img","reducers","setProject","action","payload","actions","registerApi","postRegister","a","axios","post","process","res","loginApi","postLogin","refreshToken","token","sessionStorage","getItem","setItem","accessToken","peopleListApi","getPeopleList","pageNumber","params","get","getWantedPeopleList","infoApi","getInfo","postInfo","put","headers","Authorization","catch","error","response","imgApi","getImg","postImg","image","FormData","append","runningProjectApi","getProject","getHideProject","endedProjectApi","planProjectApi","getAllPlannedProject","myId","header","res2","totalRes","page","totalElements","concat","_embedded","projectList","hideProjectApi","hideProject","projectId","delete","displayProject","sendRecruitPeopleApi","postRecruit","Accept","invitationListApi","getInvitationList","invitationDetailApi","getInvitationDetail","pid","putInvitationAccept","deleteInvitationReject","Root","ProjectList","ProjectDetail","ProjectCreate","ProjectUpdate","RegisterPage","Profile","LoginPage","PeopleList","App","useLoginAuth","basename","fallback","paddingBottom","position","frameBorder","allowFullScreen","path","component","exact","Boolean","location","hostname","match","temporaryRedux","temporary","setTemporary","rootReducer","combineReducers","temproray","login","loginRedux","profile","profileRedux","project","alertRedux","store","configureStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","message","type","pending","fulfilled","rejected","useRequest","asyncTask","options","useReducer","run","isToken","setToken","log","getImgApi","useProjectListStateTs","setProjectList","number","size","totalPages","setPage","role","setRole","region","setRegion","setStack","search","setSearch","getProjectList","sort","getDeadLineProjectList","projectListPromise","getProjectListApi","projectPage","DeadLineProjectListPromise","projectAction","getDeadLineProjectListApi","useProjectListEffectTs","useDeadlineProjectListEffect","useProjectDetailStateTs","apply","setApply","recruit","setRecruit","reader","applyModal","applyDetail","check","setCheck","pagination","setPagination","fetchGetDetail","resApply","_links","self","href","value","projectApplicantDtoList","recruitDtoList","fetchDeleteProject","getProjectApi","deleteProject","deleteProjectApi","inputProject","e","checkSwitch","checked","inputApply","inputRecruit","clickPagination","nextPage","count","openApply","closeApply","openDelete","closeDelete","openDetailApply","closeDetailApply","useProjectDetailEffectTs","description","status","useInputProjectApplyStateTs","projectApply","applied","setApplied","fetchGetApply","apiLink","fetchPostApply","fetchPutApply","getApply","getApplyApi","putApply","putApplyApi","postApply","postApplyApi","applyAction","inputAnswer","i","answers","map","index","selectRole","useInputProjectApplyEffectTs","detailGet","afterAction","defaultAns","Array","length","fill","useViewProjectApplyStateTs","api","fetchDeleteApply","deleteApply","applyDetailAction","deleteApplyApi","useViewProjectApplyEffectTs","applyLink","applySet","userName","useProjectUpdateStateTs","setImg","fetchPutUpdate","fetchImg","imgData","updateProject","UpdateProjectApi","updateState","updateImg","updateAction","UpdateImgApi","targetValue","inputProjectMember","memberValue","inputDate","date","inputQuestion","q","addQuestion","deleteQuestion","filter","inputField","useProjectUpdateEffectTs","originImg","useProjectCreateStateTS","fetchPostCreate","createProject","createProjectApi","createState","createImg","createAction","createImgApi","inputImg","parseInt","useProjectCreateEffectTs","split","Layout","children","profileUrl","setIsOpen","Navbar","light","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Button","removeItem","Item","Paper","lineHeight","textAlign","background","item","altText","Jumbotron","autoPlay","caption","key","withStyles","padding","margin","switchBase","transform","palette","common","white","opacity","border","thumb","track","grey","transition","transitions","create","focusVisible","Switch","focusVisibleClassName","disableRipple","primary","main","borderColor","boxShadow","ImgInput","saveImg","useDropzone","accept","maxFiles","onDrop","acceptedFiles","imgFile","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","align","heigth","DropdownRole","dropdownCaret","pick","dropdownOpen","setDropdownOpen","caret","setCaret","handleClickItem","menu","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","keepMounted","onClose","MenuItem","DropdownField","useProfileInfo","setInfo","getInfoApi","contact","area","ProfileInfo","info","infoPending","imgPending","Alert","ImageModify","setState","isImgChange","Form","FormGroup","Label","for","Input","FormText","useProfileInfoModify","setModifying","infoFulfilled","infoRejected","infoError","postInfoApi","imgFulfilled","imgRejected","imgError","postImgApi","ProfileInfoModify","handleChange","placeholder","onChange","preventDefault","withOutGrade","modal","alignItems","justifyContent","paper","shadows","clear","content","headerText","float","headerBtn","closeBtn","CenterModal","modalFlag","Modal","aria-labelledby","aria-describedby","IconButton","footer","AlertModal","BootstrapInputUI","input","fontFamily","join","fade","InputBase","BootstrapInput","utc","timezone","ProjectBox","staticProjectData","nowDay","Date","parse","dayjs","dday","Math","floor","developerPercent","plannerPercent","designerPercent","etcPercent","xs","extend","tz","setDefault","useLoginEffect","postLoginApi","password","user","setUser","reduxData","loading","onFinish","onFinishFailed","errorInfo","handleInput","persist","test","useRegisterEffect","registerPromiseState","postRegisterFetch","userEmail","register","setRegister","isHideChange","setHideChange"],"mappings":"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","file":"static/js/main.bfcafb59.chunk.js","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { openAlert, closeAlert } from \"../reducers/alert\";\r\nimport { RootState } from '../reducers';\r\n\r\nexport default function useAlert() {\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state: RootState) => state.alert.isOpen);\r\n  const sentence = useSelector((state: RootState) => state.alert.sentence);\r\n\r\n  const open = (data: String) => {\r\n    dispatch(openAlert(data));\r\n  };\r\n\r\n  const close = () => {\r\n    dispatch(closeAlert());\r\n  };\r\n\r\n  return {\r\n    alertState: { sentence, isOpen },\r\n    alertAction: {\r\n      open,\r\n      close,\r\n    },\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Badge as Stack } from \"reactstrap\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport \"./People.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useImage } from \"../../hook/profile/useImage\";\r\nimport { useLazyLoading } from \"../../hook\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    \"& .MuiBadge-badge\": {\r\n      height: \"30px\",\r\n      width: \"30px\",\r\n      fontSize: \"1rem\",\r\n      borderRadius: \"15px\",\r\n      color: \"#ffffff\",\r\n      backgroundColor: \"#007bff\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PeopleBox(props) {\r\n  const classes = useStyles();\r\n  const data = props.data;\r\n  const [imgState, setImgState] = useState(\"\");\r\n  const imgPending = useImage(imgState, setImgState, data.userId);\r\n  const lazy = useLazyLoading();\r\n\r\n  return (\r\n    <div id=\"PeopleBoxCard\" className={classes.card}>\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`,\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Badge badgeContent={String(data.grade)} className={classes.root}>\r\n          <Card>\r\n            <div className=\"people-img\">\r\n              <img\r\n                ref={lazy.target}\r\n                data-src={imgState.imgUrl}\r\n                width=\"100%\"\r\n                object-fit=\"contain\"\r\n                alt=\"people img\"\r\n              />\r\n            </div>\r\n            <CardBody>\r\n              <div id=\"card-title\">\r\n                <CardTitle>{data.userId}</CardTitle>\r\n              </div>\r\n\r\n              <CardText id=\"card-text\">\r\n                {data.stack === null && \" \"}\r\n                {data.stacks[0] && (\r\n                  <Stack color=\"secondary\" pill>\r\n                    # {data.stacks[0]}{\" \"}\r\n                  </Stack>\r\n                )}\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Badge>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useTemporaryApi() {\r\n  const { temporary } = useSelector((state) => state.temproray);\r\n  const getProjectList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const getPeopleList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const postProjectList = async (data) => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n  const postPeopletList = async (data) => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n\r\n  return [\r\n    temporary,\r\n    {\r\n      getProjectList,\r\n      getPeopleList,\r\n      postProjectList,\r\n      postPeopletList,\r\n    },\r\n  ];\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useMove(condition, destination) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (condition) history.push(`./${destination}`);\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      history.push(`./${destination}`);\r\n    }\r\n  }, [condition]);\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function useLazyLoading() {\r\n  const target = useRef(null);\r\n  useEffect(() => {\r\n    if (!target.current) {\r\n      return;\r\n    }\r\n    let observer = new window.IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const lazyImg = entry.target;\r\n          lazyImg.src = lazyImg.dataset.src;\r\n        }\r\n      });\r\n    });\r\n    observer.observe(target.current);\r\n    return () => {\r\n      if (observer) {\r\n        observer.disconnect();\r\n        observer = null;\r\n      }\r\n    };\r\n  }, [target]);\r\n\r\n  return { target };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst projectDetail = {\r\n    projectName: \"\",\r\n    teamName: \"\",\r\n    endDate: \"2020-10-30T23:59:00\",\r\n    introduction: \"\",\r\n    state: 'RECRUTING',\r\n    projectField: \"\",\r\n    applyCanFile: true,\r\n    needMember: {\r\n        developer: 0,\r\n        designer: 0,\r\n        planner: 0,\r\n        etc: 0\r\n    },\r\n    questions: [],\r\n    currentMember: null,\r\n    memberList: null,\r\n    img: []\r\n}\r\n\r\nconst projectRedux = createSlice({\r\n    name: \"project\",\r\n    initialState: {\r\n        projectDetail,\r\n    },\r\n    reducers: {\r\n        setProject(state, action) {\r\n            state.projectDetail = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setProject } = projectRedux.actions;\r\nexport default projectRedux.reducer;\r\n","import axios from \"axios\";\r\n\r\nexport type RegisterState = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\nexport type RegisterLogin = {\r\n  userId: String;\r\n  password: String;\r\n};\r\n\r\n/**\r\n * 회원 가입 api\r\n */\r\nexport const registerApi: any = () => {\r\n  // 회원 가입 정보 등록\r\n  const postRegister = async (data: RegisterState): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signup`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  return { postRegister };\r\n};\r\n\r\n/**\r\n * login 관련 api\r\n */\r\nexport function loginApi(){\r\n  // 로그인\r\n  const postLogin = async (data: RegisterLogin): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signin`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  \r\n  // 토큰 만료 시 refresh\r\n  const refreshToken = async (): Promise<string> => {\r\n    const token = window.sessionStorage.getItem(\"refreshToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/refresh`,\r\n      {\r\n        refreshToken: token,\r\n      },\r\n    );\r\n    window.sessionStorage.setItem(\"accessToken\", res.data.accessToken);\r\n    return res.data.accessToken;\r\n  };\r\n\r\n  return { postLogin, refreshToken };\r\n};\r\n","import axios from \"axios\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\nexport const peopleListApi: any = () => {\r\n   \r\n    // 사람 리스트\r\n  const getPeopleList = async (pageNumber: number, params = \"\"): Promise<object> => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/people?page=${pageNumber}&size=12${params}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  //\r\n  const getWantedPeopleList = async (pageNumber: number): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}people?page=${pageNumber}&size=6`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getPeopleList, getWantedPeopleList };\r\n}\r\n","import axios from \"axios\";\r\nimport { loginApi } from \"./\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\n\r\nexport function infoApi(): any {\r\n  // get info api\r\n  const getInfo = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // post info api\r\n  const postInfo = async (userId: String, data: any): Promise<any> => {\r\n    let token: String | Promise<String> | null = window.sessionStorage.getItem(\r\n      \"accessToken\",\r\n    );\r\n    const res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          const res = await axios\r\n            .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n              headers: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n          return res;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return { getInfo, postInfo };\r\n}\r\n\r\n/**\r\n * img 저장 api\r\n */\r\nexport function imgApi():any {\r\n  // 이미지 불러오기\r\n  const getImg = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 이미지 저장\r\n  const postImg = async (userId: String, data: any): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let image = new FormData();\r\n    image.append(\"image\", data.imgUrl);\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n      image,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    )\r\n    return res;\r\n  };\r\n\r\n  return { getImg, postImg };\r\n}\r\n\r\n/**\r\n * 진행중인 프로젝트\r\n */\r\nexport function runningProjectApi(): any {\r\n  const getProject = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\n\r\nexport function endedProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function planProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 모든 (planned) 프로젝트 목록 가져오기 (recruit modal에서 프로젝트 선택용)\r\n  const getAllPlannedProject = async (myId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    // 헤더\r\n    const header = {\r\n      \"Content-type\": \"application/json;charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    // 일반 plan과 숨겨진 plan 가져오기\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n    const res2 = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan/hidden`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n\r\n    let totalRes: Array<Object> = [];\r\n\r\n    // 안에 데이터가 있을 경우 데이터 가져오기\r\n    if (res.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res.data._embedded.projectList);\r\n    }\r\n    if (res2.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res2.data._embedded.projectList);\r\n    }\r\n\r\n    return totalRes;\r\n  };\r\n\r\n  return { getProject, getHideProject, getAllPlannedProject };\r\n}\r\nexport function hideProjectApi() {\r\n  const hideProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n\r\n  const displayProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n  return { hideProject, displayProject };\r\n}\r\nexport function sendRecruitPeopleApi() {\r\n  const postRecruit = async (userId: String, data: any) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res;\r\n  };\r\n  return { postRecruit };\r\n}\r\nexport function invitationListApi() {\r\n  const getInvitationList = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n  return { getInvitationList };\r\n}\r\nexport function invitationDetailApi() {\r\n  const getInvitationDetail = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const putInvitationAccept = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const deleteInvitationReject = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getInvitationDetail, putInvitationAccept, deleteInvitationReject };\r\n}\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { AlertModal } from \"./components\";\r\nimport { useLoginAuth } from \"./hook/auth/useLogin\";\r\n\r\nconst Root = lazy(() => import(\"./pages/rootTs\"));\r\nconst ProjectList = lazy(() => import(\"./pages/project/projectListTs\"));\r\nconst ProjectDetail = lazy(() => import(\"./pages/project/projectDetailTs\"));\r\nconst ProjectCreate = lazy(() => import(\"./pages/project/createProjectTs\"));\r\nconst ProjectUpdate = lazy(() => import(\"./pages/project/updateProjectTs\"));\r\nconst RegisterPage = lazy(() => import(\"./pages/auth/RegisterTs\"));\r\nconst Profile = lazy(() => import(\"./pages/Profile\"));\r\nconst LoginPage = lazy(() => import(\"./pages/auth/LoginTs\"));\r\nconst PeopleList = lazy(() => import(\"./pages/PeopleList\"));\r\n\r\nfunction App() {\r\n  useLoginAuth();\r\n  return (\r\n    <Router basename={\"/egluu\"}>\r\n      <Suspense\r\n        fallback={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"0\",\r\n              paddingBottom: \"75\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <iframe\r\n              src=\"https://giphy.com/embed/hWZBZjMMuMl7sWe0x8\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              style={{ position: \"absolute\" }}\r\n              frameBorder=\"0\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        }\r\n      >\r\n        <Switch>\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <Route path=\"/register\" component={RegisterPage} />\r\n          <Route exact path=\"/\" component={Root} />\r\n          <Route path=\"/projects\" component={ProjectList} />\r\n          <Route path=\"/createProject\" component={ProjectCreate} />\r\n          <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n          <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n          <Route path=\"/peoples\" component={PeopleList} />\r\n          <Route path=\"/profile/:userId\" component={Profile} />\r\n        </Switch>\r\n        <AlertModal />\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst temporaryRedux = createSlice({\r\n  name: 'project',\r\n  initialState: {\r\n    temporary: 0,\r\n  },\r\n  reducers: {\r\n    setTemporary(state, action) {\r\n      state.temporary = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setTemporary,\r\n} = temporaryRedux.actions;\r\nexport default temporaryRedux.reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport temporaryRedux from \"./temporary\";\r\nimport loginRedux from \"./login\";\r\nimport profileRedux from \"./profile\";\r\nimport projectRedux from \"./project\";\r\nimport alertRedux from \"./alert\";\r\n\r\nconst rootReducer = combineReducers({\r\n  temproray: temporaryRedux,\r\n  login: loginRedux,\r\n  profile: profileRedux,\r\n  project: projectRedux,\r\n  alert: alertRedux,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nexport type Service<R, P extends any[]> = (...args: P) => Promise<R>;\r\n\r\nexport type RequestState = {\r\n  data: any;\r\n  error: any;\r\n  pending: boolean;\r\n  fulfilled: boolean;\r\n  rejected: boolean;\r\n};\r\n\r\nexport type RequestAction =\r\n  | { type: 'request' }\r\n  | { type: 'success'; payload: any }\r\n  | { type: 'failure'; payload: string };\r\n\r\nfunction reducer(state: RequestState, action: RequestAction): RequestState {\r\n  switch (action.type) {\r\n    case 'request':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: true,\r\n        fulfilled: false,\r\n        rejected: false,\r\n      };\r\n    case 'success':\r\n      return {\r\n        data: action.payload,\r\n        error: null,\r\n        pending: false,\r\n        fulfilled: true,\r\n        rejected: false,\r\n      };\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        fulfilled: false,\r\n        rejected: true,\r\n      };\r\n  }\r\n}\r\n\r\nexport function useRequest<R, P extends any[]>(\r\n  asyncTask: Service<R, P>,\r\n  options?: {\r\n    // autoFirstRun?: boolean;\r\n    // passArgs?: P;\r\n  },\r\n) {\r\n  // const {autoFirstRun = false, passArgs} = options || {};\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    data: null,\r\n    error: null,\r\n    pending: false,\r\n    fulfilled: false,\r\n    rejected: false,\r\n  });\r\n  const requestActions = {\r\n    run: async (...args: P) => {\r\n      dispatch({\r\n        type: 'request',\r\n      });\r\n      try {\r\n        // then 패턴 데신에 await을 쓴 이유는 일반 함수일 경우에도 동작하도록\r\n        const data = await asyncTask(...args);\r\n        dispatch({\r\n          type: 'success',\r\n          payload: data,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: 'failure',\r\n          payload: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return [state, requestActions] as const;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginRedux = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    isToken: false,\r\n    userId: \"\"\r\n  },\r\n  reducers: {\r\n    setToken(state, action) {\r\n      state.isToken = action.payload.isToken;\r\n      state.userId = action.payload.userId;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setToken } = loginRedux.actions;\r\nexport default loginRedux.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst alertRedux = createSlice({\r\n  name: \"alert\",\r\n  initialState: {\r\n    isOpen: false,\r\n    sentence: \"\",\r\n  },\r\n  reducers: {\r\n    openAlert(state, action) {\r\n      state.isOpen = true;\r\n      console.log(action.payload);\r\n      state.sentence = action.payload;\r\n    },\r\n    closeAlert(state) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openAlert, closeAlert } = alertRedux.actions;\r\nexport default alertRedux.reducer;\r\n","import { useEffect } from \"react\";\r\nimport { imgApi } from \"../api\";\r\nimport { useRequest } from \"../useRequest\";\r\nexport const useImage = (\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n) => {\r\n  const { getImg } = imgApi();\r\n\r\n  const [\r\n    { data, fulfilled, pending, rejected, error },\r\n    { run: getImgApi },\r\n  ] = useRequest(getImg);\r\n\r\n  useEffect(() => {\r\n    getImgApi(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    setImgState({\r\n      ...imgState,\r\n      imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    });\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        if (error.response.data.error === \"302\") {\r\n          setImgState({\r\n            ...imgState,\r\n            imgUrl:\r\n              \"https://i.pinimg.com/236x/21/88/fd/2188fd41b8d31930acc43b7b197e6dfd.jpg\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [rejected]);\r\n  return pending;\r\n};\r\n\r\nexport default useImage;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRequest } from \"../\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype projectListType = {\r\n  projectId: number;\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  dday: number;\r\n  status: string;\r\n  projectField: object | null;\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  leaderId: string | null;\r\n};\r\n\r\ntype pageType = {\r\n  number: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n};\r\n\r\ntype projectPage = {\r\n  projectList: projectListType[];\r\n  role: string;\r\n  region: string;\r\n  search: string;\r\n  page: pageType;\r\n  stack: string;\r\n  projectListPromise: RequestState;\r\n  DeadLineProjectListPromise: RequestState;\r\n};\r\n\r\ntype projectAction = {\r\n  setProjectList: Dispatch<SetStateAction<projectListType[]>>;\r\n  setPage: Dispatch<\r\n    SetStateAction<{\r\n      number: number;\r\n      size: number;\r\n      totalElements: number;\r\n      totalPages: number;\r\n    }>\r\n  >;\r\n  setRegion: Dispatch<SetStateAction<string>>;\r\n  setRole: Dispatch<SetStateAction<string>>;\r\n  setStack: Dispatch<SetStateAction<string>>;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  getProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n  getDeadLineProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n};\r\n\r\ntype projectState = {\r\n  projectPage: projectPage;\r\n  projectAction: projectAction;\r\n};\r\n\r\nexport function useProjectListStateTs(): projectState {\r\n  const [projectList, setProjectList] = useState<projectListType[] | []>([]);\r\n  const [page, setPage] = useState<pageType>({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [stack, setStack] = useState<string>(\"\");\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const getProjectList = async (\r\n    pageNumber: number,\r\n    sort:string = \"\",\r\n  ): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects?page=${pageNumber}&size=8${sort}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async (\r\n    pageNumber: number,\r\n  ): Promise<object> => {\r\n    let res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const [projectListPromise, { run: getProjectListApi }] = useRequest(\r\n    getProjectList,\r\n  );\r\n\r\n  const [\r\n    DeadLineProjectListPromise,\r\n    { run: getDeadLineProjectListApi },\r\n  ] = useRequest(getDeadLineProjectList);\r\n\r\n  const projectPage: projectPage = {\r\n    projectList,\r\n    role,\r\n    region,\r\n    search,\r\n    page,\r\n    stack,\r\n    projectListPromise,\r\n    DeadLineProjectListPromise,\r\n  };\r\n  const projectAction: projectAction = {\r\n    setProjectList,\r\n    setPage,\r\n    setRegion,\r\n    setRole,\r\n    setStack,\r\n    setSearch,\r\n    getProjectListApi,\r\n    getDeadLineProjectListApi,\r\n  };\r\n\r\n  return { projectPage, projectAction };\r\n}\r\n\r\nexport function useProjectListEffectTs(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.projectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.projectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.projectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.projectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.projectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.projectListPromise.rejected) {\r\n      if (project.projectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.projectListPromise.rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.DeadLineProjectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.DeadLineProjectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.DeadLineProjectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getDeadLineProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.rejected) {\r\n      if (project.DeadLineProjectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.rejected]);\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ProjectDetailType = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  status: string;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\nintroduction: string;\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n    apply: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype RecruitDtoListType = {\r\n  userName: string;\r\n  selfDescription: string;\r\n  role: string;\r\n  status: string;\r\n  projectId: number;\r\n  projectName: string;\r\n  introduction: string;\r\n  state: string;\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype checkType = {\r\n  apply: boolean;\r\n  recruit: boolean;\r\n  reader: boolean;\r\n  applyModal: boolean;\r\n  delete: boolean;\r\n  applyDetail: boolean;\r\n};\r\n\r\ntype pagenationType = {\r\n    apply: number,\r\n    recruit: number,\r\n}\r\n\r\ntype ApplyType = {\r\n    state: string;\r\n    userName: string;\r\n    role: string;\r\n    _links: {\r\n        self: {\r\n            href: string\r\n        }\r\n    };\r\n    userId: string;\r\n    href: string;\r\n}\r\n\r\ntype ProjectType = { \r\n        getProject: RequestState;\r\n        deleteProject: RequestState;\r\n        project: ProjectDetailType;\r\n        check: checkType;\r\n        apply: ApplyType[];\r\n        recruit: RecruitDtoListType[];\r\n        pagination: pagenationType;\r\n    };\r\n\r\ntype ProjectActionType = {\r\n    getProjectApi: (projectId: string) => Promise<void>;\r\n      deleteProjectApi: (projectId: string) => Promise<void>;\r\n      inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      checkSwitch: (name: string, checked: boolean) => void;\r\n      inputApply: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      inputRecruit: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      clickPagination: (name: string, nextPage: number) => void;\r\n      openApply: () => void;\r\n      closeApply: () => void;\r\n      openDelete: () => void;\r\n      closeDelete: () => void;\r\n      openDetailApply: () => void;\r\n      closeDetailApply: () => void;\r\n      setApply: Dispatch<SetStateAction<ApplyType[]>>;\r\n      setProject: Dispatch<SetStateAction<ProjectDetailType>>;\r\n    }\r\n\r\ntype ProjectDetailStateType = {\r\n    project: ProjectType;\r\n    projectAction: ProjectActionType;\r\n}\r\n\r\nconst useProjectDetailStateTs = (): ProjectDetailStateType => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState<ProjectDetailType>(projectDetail);\r\n  const [apply, setApply] = useState<ApplyType[]>([]);\r\n  const [recruit, setRecruit] = useState<RecruitDtoListType[]>([]);\r\n  const [check, setCheck] = useState<checkType>({\r\n    apply: false,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n    applyDetail: false,\r\n  });\r\n  const [pagination, setPagination] = useState<pagenationType>({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n\r\n  const fetchGetDetail = async (projectId: string): Promise<any> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply = {\r\n      apply: {},\r\n      recruit: {},\r\n    };\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        throw error;\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0]._links.self.href === `/profile/${id}`) {\r\n      token = await loginApi().refreshToken();\r\n\r\n      await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value: any) => {\r\n          try {\r\n            setApply(value.data._embedded.projectApplicantDtoList);\r\n          } catch {\r\n            setApply([]);\r\n          }\r\n        })\r\n        .catch(async (error: any) => {\r\n          throw error;\r\n        });\r\n      await axios\r\n        .get(\r\n          `${process.env.REACT_APP_BASE_URL}projects/${projectId}/recruits`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          },\r\n        )\r\n        .then((value: any) => {\r\n          try {\r\n            setRecruit(value.data._embedded.recruitDtoList);\r\n          } catch {\r\n            setRecruit([]);\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          throw error;\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    history.push(\"/projects\");\r\n  };\r\n\r\n  const [getProject, { run: getProjectApi }] = useRequest(fetchGetDetail);\r\n\r\n  const [deleteProject, { run: deleteProjectApi }] = useRequest(\r\n    fetchDeleteProject,\r\n  );\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n    const checkSwitch = (name: string, checked: boolean) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputApply = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputRecruit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name: string, nextPage: number) => {\r\n    setPagination((value: any) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    project: {\r\n      getProject,\r\n      deleteProject,\r\n      project,\r\n      check,\r\n      apply,\r\n      recruit,\r\n      pagination,\r\n    },\r\n    projectAction: {\r\n      getProjectApi,\r\n      deleteProjectApi,\r\n      inputProject,\r\n      checkSwitch,\r\n      inputApply,\r\n      inputRecruit,\r\n      clickPagination,\r\n      setApply,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n      openDetailApply,\r\n      closeDetailApply,\r\n      setProject\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectDetailEffectTs = (\r\n  project: ProjectType,\r\n  projectAction: ProjectActionType,\r\n  projectId: string,\r\n) => {\r\n    const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectApi(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.fulfilled) {\r\n      projectAction.setProject(project.getProject.data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (\r\n        project.getProject.data.res.memberList[0]._links.self.href ===\r\n        `/profile/${id}`\r\n      ) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n      }\r\n    }\r\n  }, [project.getProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.rejected) {\r\n        alertAction.open(project.getProject.error.response.data.message);\r\n    }\r\n  }, [project.getProject.rejected]);\r\n};\r\n\r\nexport {\r\n  useProjectDetailStateTs,\r\n  useProjectDetailEffectTs,\r\n  //   useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  introduction: \"\",\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"\",\r\n    selfDescription: \"\",\r\n    role: \"\",\r\n    status: \"\",\r\n    projectId: 0,\r\n    projectName: \"\",\r\n    introduction: \"\",\r\n    state:\"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRequest } from \"../\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ApplyStateType = {\r\n  answers: string[];\r\n  introduction: string;\r\n  role: string;\r\n  questions: string[];\r\n  userName: string;\r\n  status: string;\r\n};\r\n\r\ntype ApplyInputType = {\r\n  apply: ApplyStateType;\r\n  applied: boolean;\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  postApply: RequestState;\r\n};\r\n\r\ntype ApplyInputActionType = {\r\n  getApplyApi: (apiLink: string) => Promise<void>;\r\n  postApplyApi: (data: object, apiLink: string) => Promise<void>;\r\n  putApplyApi: (data: any, apiLink: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n  inputAnswer: (a: string, i: number) => void;\r\n  inputApply: (name: string, data: string[] | string) => void;\r\n  selectRole: (data: string) => void;\r\n  setApplied: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\ntype ApplyType = {\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  deleteApply: RequestState;\r\n  apply: ApplyStateType;\r\n};\r\n\r\ntype ApplyActionType = {\r\n  getApplyApi: (api: string) => Promise<void>;\r\n  putApplyApi: (api: string) => Promise<void>;\r\n  deleteApplyApi: (api: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n};\r\n\r\ntype ProjectApplyType = {\r\n  applyDetail: ApplyType;\r\n  applyDetailAction: ApplyActionType;\r\n};\r\n\r\nexport const useInputProjectApplyStateTs = () => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n  const [applied, setApplied] = useState<boolean>(false);\r\n  const fetchGetApply = async (apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${apiLink}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .get(`${apiLink}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (\r\n    data: object,\r\n    apiLink: string,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    console.log(apiLink);\r\n    await axios\r\n      .post(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .post(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data: any, apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [postApply, { run: postApplyApi }] = useRequest(fetchPostApply);\r\n\r\n  const inputApply = (name: string, data: string[] | string) => {\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a: string, i: number) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data: string) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    apply: { apply, applied, getApply, putApply, postApply },\r\n    applyAction: {\r\n      postApplyApi,\r\n      putApplyApi,\r\n      getApplyApi,\r\n      setApply,\r\n      inputAnswer,\r\n      inputApply,\r\n      selectRole,\r\n      setApplied,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useInputProjectApplyEffectTs = (\r\n  apply: ApplyInputType,\r\n  applyAction: ApplyInputActionType,\r\n  questions: string[],\r\n  detailGet: boolean,\r\n  apiLink: string,\r\n  afterAction: () => void,\r\n) => {\r\n\r\n  useEffect(() => {\r\n    const defaultAns = new Array(questions.length);\r\n    defaultAns.fill(\"\");\r\n    applyAction.inputApply(\"answers\", defaultAns);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet) {\r\n      applyAction.getApplyApi(apiLink);\r\n    }\r\n  }, [detailGet]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n      if (apply.apply.answers.length !== 0) {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.postApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.postApply.fulfilled]);\r\n\r\n};\r\n\r\nexport const useViewProjectApplyStateTs = (): ProjectApplyType => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n\r\n  const fetchGetApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .get(`${api}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPutApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(\r\n        api,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(api, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .delete(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [deleteApply, { run: deleteApplyApi }] = useRequest(fetchDeleteApply);\r\n\r\n  return {\r\n    applyDetail: { getApply, putApply, deleteApply, apply },\r\n    applyDetailAction: {\r\n      deleteApplyApi,\r\n      getApplyApi,\r\n      putApplyApi,\r\n      setApply,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useViewProjectApplyEffectTs = (\r\n  apply: ApplyType,\r\n  applyAction: ApplyActionType,\r\n  open: boolean,\r\n  applyLink: string,\r\n  applySet: Dispatch<SetStateAction<ApplyType[]>>,\r\n  userId: string,\r\n  close: () => void,\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (open) {\r\n      applyAction.getApplyApi(applyLink);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.apply.userName === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"ACCEPT\",\r\n            };\r\n          } else {\r\n            return apply;\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.deleteApply.fulfilled) {\r\n      applySet((value: any) => {\r\n        const filterData = value.map((apply: any) => {\r\n          if (apply.apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"REJECT\",\r\n            };\r\n          }``\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.deleteApply.fulfilled]);\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n  questions: [],\r\n  userName: \"\",\r\n  status: \"\",\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n};\r\n\r\ntype updateStateType = {\r\n    project: CreateProject;\r\n    img: any;\r\n    updateProject: RequestState;\r\n    updateImg: RequestState;\r\n  }\r\n\r\ntype updateActionType = {\r\n    UpdateProjectApi: (projectId: string, data: any) => Promise<void>;\r\n    UpdateImgApi: (projectId: string, data: any) => Promise<void>;\r\n    inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    setImg: Dispatch<SetStateAction<any>>;\r\n    inputProjectMember: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    inputDate: (date: any) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputField: (data: string) => void;\r\n  }\r\n\r\ntype UpdateType = {\r\n  updateState: updateStateType;\r\n  updateAction: updateActionType;\r\n};\r\n\r\nconst useProjectUpdateStateTs = (): UpdateType => {\r\n  const projectDetail = useSelector(\r\n    (state: any) => state.project.projectDetail,\r\n  );\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<any>(projectDetail.img);\r\n\r\n  const fetchPutUpdate = async (\r\n    projectId: string,\r\n    data: any,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .put(\r\n              `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n              data,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: any): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const [updateProject, { run: UpdateProjectApi }] = useRequest(fetchPutUpdate);\r\n  const [updateImg, { run: UpdateImgApi }] = useRequest(fetchImg);\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputDate = (date: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n    const inputField = (data: string) => {\r\n      setProject((value) => {\r\n        return {\r\n          ...value,\r\n          projectField: data,\r\n        };\r\n      });\r\n    };\r\n\r\n  return {\r\n    updateState: { project, img, updateProject, updateImg },\r\n    updateAction: {\r\n      UpdateProjectApi,\r\n      UpdateImgApi,\r\n      inputProject,\r\n      setImg,\r\n      inputProjectMember,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectUpdateEffectTs = (\r\n  updateState: updateStateType,\r\n  updateAction: updateActionType,\r\n  projectId: string,\r\n) => {\r\n  const history = useHistory();\r\n   const { alertAction} = useAlert();\r\n  const originImg = useSelector(\r\n    (state: any) => state.project.projectDetail.img,\r\n  );  \r\n  useEffect(() => {\r\n    if (updateState.updateProject.fulfilled) {\r\n      console.log(typeof updateState.img);\r\n      console.log(updateState.img);\r\n      if (updateState.img.length === originImg)\r\n        updateAction.UpdateImgApi(projectId, updateState.img);\r\n      else history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [updateState.updateProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (updateState.updateProject.rejected) {\r\n        alertAction.open(updateState.updateProject.error.response.data.message);\r\n      console.log(updateState.updateProject.error);\r\n    }\r\n  }, [updateState.updateProject.rejected]);\r\n};\r\n\r\nexport { useProjectUpdateStateTs, useProjectUpdateEffectTs };\r\n","import { useEffect, useState } from \"react\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer:  number;\r\n    planner: number;\r\n    etc: number;\r\n  },\r\n}\r\n\r\ntype CreateStateType = {\r\n    project: CreateProject;\r\n    createProject: RequestState;\r\n    createImg: RequestState;\r\n    img: string;\r\n}\r\n\r\ntype CreateActionType = {\r\n    createProjectApi: (data: CreateProject) => Promise<void>;\r\n    createImgApi: (projectId: string, data: string) => Promise<void>;\r\n    inputProject: (name: string, targetValue: string) => void;\r\n    inputDate: (date: any) => void;\r\n    inputImg: (data: string) => void;\r\n    inputField: (data: string) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputProjectMember: (name: string, memberValue: string) => void;\r\n}\r\n\r\ntype CreateType = {\r\n    createState: CreateStateType;\r\n    createAction: CreateActionType;\r\n}\r\n\r\nconst useProjectCreateStateTS = (): CreateType => {\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<string>(\"\");\r\n\r\n  const fetchPostCreate = async (data: CreateProject): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                  \"Access-Control-Expose-Headers\": \"*\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n    const [\r\n        createProject,\r\n        { run: createProjectApi },\r\n    ] = useRequest(fetchPostCreate);\r\n    const [\r\n        createImg,\r\n        { run: createImgApi },\r\n    ] = useRequest(fetchImg);\r\n\r\n  const inputProject = (name: string, targetValue: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const inputDate = (date: any) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data: string) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (name: string, memberValue: string): void => {\r\n    if(parseInt(memberValue) >= 0){\r\n      setProject((value) => {\r\n        return {\r\n          ...value,\r\n          needMember: {\r\n            ...value.needMember,\r\n            [name]: memberValue,\r\n          },\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const createState: CreateStateType = {\r\n    project,\r\n    createProject,\r\n    createImg,\r\n    img,\r\n  };\r\n  const createAction: CreateActionType = {\r\n    createProjectApi,\r\n    createImgApi,\r\n    inputProject,\r\n    inputImg,\r\n    inputProjectMember,\r\n    inputDate,\r\n    inputQuestion,\r\n    addQuestion,\r\n    deleteQuestion,\r\n    inputField,\r\n  };\r\n\r\n  return { createState, createAction }\r\n};\r\n\r\nconst useProjectCreateEffectTs = (\r\n  createState: CreateStateType,\r\n  createAction: CreateActionType,\r\n) => {\r\n    const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.fulfilled) {\r\n      const projectId = createState.createProject.data.headers.location.split(\r\n        \"/\",\r\n      );\r\n      createAction.createImgApi(projectId[4], createState.img);\r\n    }\r\n  }, [createState.createProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.rejected) {\r\n      alertAction.open(createState.createProject.error.response.data.message);\r\n      console.log(createState.createProject.error);\r\n    }\r\n  }, [createState.createProject.rejected]);\r\n};\r\n\r\nexport { useProjectCreateStateTS, useProjectCreateEffectTs };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../reducers/login\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"./Layout.css\";\r\nimport \"./component.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // useMove 안 쓴 이유 -> 로그인 여부를 가지는 state가 레이아웃 컴포넌트 내부에 없어서 사용하기 애매함,,\r\n  // 일단 직접 useHistory로 구현\r\n  const history = useHistory();\r\n\r\n  // 레이아웃 바에서 로그인 여부를 확인하고, 유저 아이디를 띄울 변수\r\n  const userId = useSelector((state) => state.login.userId);\r\n  const isToken = useSelector((state) => state.login.isToken);\r\n\r\n  // 레이아웃에서 userId클릭하면 이동할 본인 프로필페이지 주소\r\n  const profileUrl = `/profile/${userId}`;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  // 로그아웃\r\n  const handleClick = () => {\r\n    // 세션 스토리지 비우기\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"accessToken\");\r\n    window.sessionStorage.removeItem(\"refreshToken\");\r\n\r\n    // 리덕스 초기화 데이터\r\n    const reduxData = {\r\n      isToken: false,\r\n      userId: null,\r\n    };\r\n\r\n    // 액션 디스패치\r\n    dispatch(setToken(reduxData));\r\n\r\n    // 홈으로\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"\" light expand=\"md\" className=\"nav_header\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          Egluu\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"container-fluid\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/projects\">\r\n                프로젝트 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/peoples\">\r\n                사용자 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            {isToken ? (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to={profileUrl}>\r\n                    {userId} 님\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={handleClick}>로그아웃</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"nav-right\">\r\n                  <NavLink tag={Link} to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <main>\r\n        <div className=\"nav_body\">{children}</div>\r\n      </main>\r\n\r\n      <footer className=\"nav_footer\">\r\n        <hr />\r\n        <div className=\"container-fluid text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mt-md-0 mt-3\">\r\n              <h4 className=\"text-uppercase\">Egluu</h4>\r\n              <br />\r\n              <p>Simple Team Building Platform</p> © 2020 Copyright:\r\n              <a href=\"https://egluuapi.codingnome.dev/\">\r\n                https://egluuapi.codingnome.dev/\r\n              </a>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n            <div className=\"col-md-2 mb-md-0 mb-2\"></div>\r\n            <div className=\"col-md-3 mb-md-0 mb-3\">\r\n              <h5 className=\"text-uppercase\">Links</h5>\r\n              <br />\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Instagram</a>\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  <a href=\"#!\">Github</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useLazyLoading } from \"../../hook\";\r\nfunction Jumbotron() {\r\n  const items = [\r\n    {\r\n      src: \"https://picsum.photos/id/1/1000/480\",\r\n      altText: \"Slide 1\",\r\n      caption: \"Slide 1\",\r\n      header: \"Slide 1 Header\",\r\n      key: \"1\",\r\n    },\r\n    {\r\n      src: \"https://picsum.photos/id/2/1000/480\",\r\n      altText: \"Slide 2\",\r\n      caption: \"Slide 2\",\r\n      header: \"Slide 2 Header\",\r\n      key: \"2\",\r\n    },\r\n    {\r\n      src: \"https://picsum.photos/id/3/1000/480\",\r\n      altText: \"Slide 3\",\r\n      caption: \"Slide 3\",\r\n      header: \"Slide 3 Header\",\r\n      key: \"3\",\r\n    },\r\n    {\r\n      src: \"https://picsum.photos/id/4/1000/480\",\r\n      altText: \"Slide 4\",\r\n      caption: \"Slide 4\",\r\n      header: \"Slide 4 Header\",\r\n      key: \"4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Carousel autoPlay={false}>\r\n      {items.map((item, i) => (\r\n        <Item key={i} item={item} />\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const lazy = useLazyLoading();\r\n\r\n  return (\r\n    <Paper>\r\n      <img\r\n        style={{\r\n          height: \"480px\",\r\n          color: \"#fff\",\r\n          lineHeight: \"480px\",\r\n          textAlign: \"center\",\r\n          background: \"#364d79\",\r\n        }}\r\n        data-src={props.item.src}\r\n        alt={props.item.altText}\r\n        ref={lazy.target}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport const IOSSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    \"&$checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        backgroundColor: \"#52d869\",\r\n        opacity: 1,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    \"&$focusVisible $thumb\": {\r\n      color: \"#52d869\",\r\n      border: \"6px solid #fff\",\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport const AntSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n","import React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction ImgInput({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${img}`}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImgInput2({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://pixabay.com/ko/illustrations/%EC%9C%84%EC%84%B1-%ED%96%89%EC%84%B1-%EA%B3%B5%EA%B0%84-%EC%B2%9C%EB%AC%B8%ED%95%99-1303512/\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={img}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ImgInput2, ImgInput };\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst role = [\"DEVELOPER\", \"DESIGNER\", \"PLANNER\", \"ETC\"];\r\n\r\nconst DropdownRole = (props) => {\r\n  const { dropdownCaret, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n    const handleClick = (event) => {\r\n        setDropdownOpen(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setDropdownOpen(null);\r\n    };\r\n    const handleClickItem = (menu) => {\r\n        action(menu);\r\n        setDropdownOpen(null);\r\n    }\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {caret}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={dropdownOpen}\r\n        keepMounted\r\n        open={dropdownOpen}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={(e) => handleClickItem(\"DEVELOPER\")}>\r\n          DEVELOPER\r\n        </MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"DESIGNER\")}>\r\n          DESIGNER\r\n        </MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"PLANNER\")}>PLANNER</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"ETC\")}>ETC</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownField = (props) => {\r\n  const { dropdownCaret, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  const handleClick = (event) => {\r\n    setDropdownOpen(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setDropdownOpen(null);\r\n  };\r\n  const handleClickItem = (menu) => {\r\n    action(menu);\r\n    setDropdownOpen(null);\r\n  };\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {caret}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={dropdownOpen}\r\n        keepMounted\r\n        open={dropdownOpen}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={(e) => handleClickItem(\"APP\")}>APP</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"WEB\")}>WEB</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"AI\")}>AI</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"HW\")}>HW</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"BLOCKCHAIN\")}>\r\n          BLOCKCHAIN\r\n        </MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"SYSTEM\")}>SYSTEM</MenuItem>\r\n        <MenuItem onClick={(e) => handleClickItem(\"ETC\")}>ETC</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport { DropdownRole, DropdownField };\r\n","import { useEffect } from \"react\";\r\nimport { infoApi } from \"../../hook/api\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfo = (setInfo, userId) => {\r\n  // info 정보 get 하는 api\r\n  const { getInfo } = infoApi();\r\n  const { alertState, alertAction } = useAlert();\r\n\r\n  // info get의 상태변수와 데이터 및 액션 디스패쳐\r\n  const [\r\n    { data: response, fulfilled, pending, rejected, error },\r\n    { run: getInfoApi },\r\n  ] = useRequest(getInfo);\r\n\r\n  // 마운트될 때 액션 디스패치\r\n  useEffect(() => {\r\n    getInfoApi(userId);\r\n  }, [userId]);\r\n\r\n  // info get 성공시\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInfo({\r\n        userName: response.userName,\r\n        role: response.role,\r\n        stacks: response.stacks,\r\n        contact: response.contact,\r\n        area: response.area,\r\n        grade: response.grade,\r\n        introduction: response.introduction,\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // info get 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // get refresh~\r\n  const Refresh = () => {\r\n    Api();\r\n  };\r\n\r\n  return pending;\r\n};\r\n\r\nexport default useProfileInfo;\r\n","import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"../Profile.css\";\r\nimport { useImage } from \"../../../../hook/profile/useImage\";\r\nimport useProfileInfo from \"../../../../hook/profile/useProfileInfo\";\r\n\r\nconst ProfileInfo = ({ info, setInfo, imgState, setImgState, userId }) => {\r\n  // 상태변화에 대한 sideEffect에 쓰일 args\r\n  const infoPending = useProfileInfo(setInfo, userId);\r\n\r\n  const imgPending = useImage(imgState, setImgState, userId);\r\n\r\n  return (\r\n    <div>\r\n      {infoPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <>\r\n          <Alert color=\"secondary\">{info.introduction} </Alert>\r\n          {/* width=\"100%\" 으로 비율유지 \r\n  object-fit=\"contain\" 으로 1/4칸에 딱 맞게 조정 */}\r\n          {imgPending ? (\r\n            <p>로딩중...</p>\r\n          ) : (\r\n            <div className=\"profile-img\">\r\n              <img\r\n                src={imgState.imgUrl}\r\n                width=\"100%\"\r\n                object-fit=\"contain\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          <h3 className=\"profile-info-id\">{userId}</h3>\r\n          <h6 className=\"profile-info-id\">{info.userName}</h6>\r\n          <h6>\r\n            Lev. {info.grade} {info.role}\r\n          </h6>\r\n          <h6>area : {info.area}</h6>\r\n          <p>#ReactJs #Javascript</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nconst ImageModify = ({ state, setState }) => {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        }),\r\n      );\r\n      setState({ imgUrl: imgFile[0], isImgChange: true });\r\n    },\r\n  });\r\n\r\n  const params = {\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      type: \"bullets\",\r\n      clickable: true,\r\n    },\r\n    observer: true,\r\n    spaceBetween: 30,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div {...getRootProps({ className: \"dropzone\" })}>\r\n          <input {...getInputProps()} />\r\n          {state.imgUrl === \"\" ? (\r\n            <img\r\n              src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n              alt=\"이미지 에러\"\r\n              align=\"center\"\r\n              heigth=\"100%\"\r\n              width=\"100%\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              {typeof state.imgUrl !== \"string\" ? (\r\n                <img\r\n                  src={state.imgUrl.url}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={state.imgUrl}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleFile\">File</Label>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n          <FormText color=\"muted\">\r\n            This is some placeholder block-level help text for the above input.\r\n            It's a bit lighter and easily wraps to a new line.\r\n          </FormText>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageModify;\r\n","import { useEffect } from \"react\";\r\nimport { infoApi, imgApi } from \"../api\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfoModify = (\r\n  setModifying,\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n) => {\r\n  const { postInfo } = infoApi();\r\n\r\n  const [\r\n    {\r\n      data: infoResponse,\r\n      fulfilled: infoFulfilled,\r\n      pending: infoPending,\r\n      rejected: infoRejected,\r\n      error: infoError,\r\n    },\r\n    { run: postInfoApi },\r\n  ] = useRequest(postInfo);\r\n\r\n  const { postImg } = imgApi();\r\n\r\n  const [\r\n    {\r\n      data: imgResponse,\r\n      fulfilled: imgFulfilled,\r\n      pending: imgPending,\r\n      rejected: imgRejected,\r\n      error: imgError,\r\n    },\r\n    { run: postImgApi },\r\n  ] = useRequest(postImg);\r\n  const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (imgFulfilled && infoFulfilled) {\r\n      setImgState({\r\n        imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n        isImgChange: false,\r\n      });\r\n      setModifying();\r\n      //console.log(\"둘다 \");\r\n    }\r\n  }, [imgFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (!imgState.isImgChange && infoFulfilled) {\r\n      setModifying();\r\n      //console.log(\"인포메이션만 \");\r\n    }\r\n  }, [infoFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (infoRejected) {\r\n      if (infoError) {\r\n        alertAction.open(infoError.response.data.message);\r\n      }\r\n    }\r\n  }, [infoRejected]);\r\n\r\n  useEffect(() => {\r\n    if (imgRejected) {\r\n      if (imgError) {\r\n        alertAction.open(imgError.response.data.message);\r\n        console.log(imgError);\r\n      }\r\n    }\r\n  }, [imgRejected]);\r\n\r\n  return { postInfoApi, postImgApi };\r\n};\r\nconst useProfileImgModify = () => {};\r\n\r\nexport default useProfileInfoModify;\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport ImageModify from \"../ProfileImage/ImageModify\";\r\nimport useProfileInfoModify from \"../../../../hook/profile/useProfileInfoModify\";\r\n\r\nconst ProfileInfoModify = ({\r\n  setModifying,\r\n\r\n  info,\r\n  setInfo,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n}) => {\r\n  const { postInfoApi, postImgApi } = useProfileInfoModify(\r\n    setModifying,\r\n\r\n    imgState,\r\n    setImgState,\r\n\r\n    userId,\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    // stack은 지금은 무조건 배열상태로 들어가게 임시방편함\r\n    if (e.target.name === \"stacks\") {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: [e.target.value],\r\n      });\r\n    }\r\n    // 나머지는 원래 방식대로\r\n    else {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n    console.log(info);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { grade, ...withOutGrade } = info;\r\n    postInfoApi(userId, withOutGrade);\r\n    if (imgState.isImgChange) {\r\n      postImgApi(userId, imgState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModify state={imgState} setState={setImgState} />\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Name</Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"userName\"\r\n            placeholder=\"name\"\r\n            value={info.userName}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Role</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"role\"\r\n            value={info.role}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEVELOPER\">DEVELOPER</option>\r\n            <option value=\"DESIGNER\">DESIGNER</option>\r\n            <option value=\"LEADER\">LEADER</option>\r\n            <option value=\"ETC\">ETC</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Stack</Label>\r\n          <Input\r\n            type=\"stack\"\r\n            name=\"stacks\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"stack\"\r\n            value={info.stacks}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Email Contact</Label>\r\n          <Input\r\n            type=\"contact\"\r\n            name=\"contact\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"contact\"\r\n            value={info.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Area</Label>\r\n          <Input\r\n            type=\"area\"\r\n            name=\"area\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"area\"\r\n            value={info.area}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">Introduction</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"introduction\"\r\n            id=\"introduction\"\r\n            value={info.introduction}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button onClick={handleSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoModify;\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAlert } from \"../../hook\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  header: {\r\n    \"&::after\": {\r\n      display: \"block\",\r\n      clear: \"both\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  headerText: { float: \"left\", lineHeight: \"30px\" },\r\n  headerBtn: { float: \"right\" },\r\n  closeBtn: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n  },\r\n}));\r\n\r\nconst CenterModal = (props) => {\r\n  const { modalFlag, close } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalFlag}\r\n      onClose={close}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      className={classes.modal}\r\n    >\r\n      <div className={classes.paper}>\r\n        <div className={classes.header}>\r\n          <div className={classes.headerText}>{props.header}</div>\r\n          <div className={classes.headerBtn}>\r\n            <IconButton className={classes.closeBtn} onClick={close}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div>{props.children}</div>\r\n        <div>{props.footer}</div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst AlertModal = (props) => {\r\n  const { alertState, alertAction } = useAlert();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={alertState.isOpen}\r\n      onClose={alertAction.close}\r\n      aria-labelledby=\"spring-modal-title\"\r\n      aria-describedby=\"spring-modal-description\"\r\n      className={classes.modal}\r\n    >\r\n      <div className={classes.paper}>\r\n        <div className={classes.header}>\r\n          <div className={classes.headerText}>알림</div>\r\n          <div className={classes.headerBtn}>\r\n            <IconButton\r\n              className={classes.closeBtn}\r\n              onClick={alertAction.close}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div>{alertState.sentence}</div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { CenterModal, AlertModal };\r\n","import React from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInputUI = withStyles((theme) => ({\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction BootstrapInput(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nfunction InputTemp(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nexport { BootstrapInput, InputTemp };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Progress,\r\n} from \"reactstrap\";\r\nimport \"./Project.css\";\r\nimport dayjs from \"dayjs\";\r\nimport { useLazyLoading } from \"../../hook\";\r\nconst utc = require(\"dayjs/plugin/utc\");\r\nconst timezone = require(\"dayjs/plugin/timezone\"); // dependent on utc plugin\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\ndayjs.tz.setDefault(\"Asia/Seoul\");\r\n\r\nexport default function ProjectBox(props) {\r\n  const staticProjectData = props.data;\r\n  const nowDay = Date.parse(dayjs());\r\n  const lazy = useLazyLoading();\r\n\r\n  const dday = Math.floor(\r\n    (Date.parse(staticProjectData.endDate) - nowDay) / (24 * 3600 * 1000),\r\n  );\r\n  // 0으로 나눌 경우 예외처리!\r\n  const developerPercent =\r\n    staticProjectData.currentMember.developer !== 0\r\n      ? (staticProjectData.currentMember.developer /\r\n          staticProjectData.needMember.developer) *\r\n        100\r\n      : 0;\r\n  const plannerPercent =\r\n    staticProjectData.currentMember.planner !== 0\r\n      ? (staticProjectData.currentMember.planner /\r\n          staticProjectData.needMember.planner) *\r\n        100\r\n      : 0;\r\n\r\n  const designerPercent =\r\n    staticProjectData.currentMember.designer !== 0\r\n      ? (staticProjectData.currentMember.designer /\r\n          staticProjectData.needMember.designer) *\r\n        100\r\n      : 0;\r\n\r\n  const etcPercent =\r\n    staticProjectData.currentMember.etc !== 0\r\n      ? (staticProjectData.currentMember.etc /\r\n          staticProjectData.needMember.etc) *\r\n        100\r\n      : 0;\r\n\r\n  return (\r\n    <div id=\"ProjectBoxCard\">\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`,\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Card>\r\n          <img\r\n            width=\"230px\"\r\n            height=\"180px\"\r\n            data-src={`${process.env.REACT_APP_BASE_URL}projects/image/${staticProjectData.projectId}`}\r\n            alt=\"Card image cap\"\r\n            ref={lazy.target}\r\n          />\r\n          <CardBody>\r\n            <CardTitle>{staticProjectData.projectName}</CardTitle>\r\n            <Row xs=\"12\" id=\"team_dday\">\r\n              <Col xs=\"9\">\r\n                <CardSubtitle>{staticProjectData.teamName}</CardSubtitle>\r\n              </Col>\r\n              <Col xs=\"3\">\r\n                <CardSubtitle>D-{dday}</CardSubtitle>\r\n              </Col>\r\n            </Row>\r\n            <Row xs=\"12\" id=\"member-count\">\r\n              <Col xs=\"6\">\r\n                <CardText>developer</CardText>\r\n                <Progress color=\"#007bff\" value={developerPercent}>\r\n                  {developerPercent}\r\n                </Progress>\r\n                <CardText>planner </CardText>\r\n                <Progress color=\"#007bff\" value={plannerPercent}>\r\n                  {plannerPercent}\r\n                </Progress>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <CardText>designer</CardText>\r\n                <Progress color=\"#007bff\" value={designerPercent}>\r\n                  {designerPercent}\r\n                </Progress>\r\n                <CardText>etc</CardText>\r\n                <Progress color=\"#007bff\" value={etcPercent}>\r\n                  {etcPercent}\r\n                </Progress>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setToken } from \"../../reducers/login\";\r\nimport { useAlert, useMove, useRequest } from \"..\";\r\nimport { loginApi } from \"../../hook/api\";\r\n\r\ntype userType = {\r\n  userId: string;\r\n  password: string;\r\n};\r\n\r\ntype LoginType = {\r\n  loading: boolean;\r\n  user: userType;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n  handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\n\r\nexport function useLoginEffect(): LoginType {\r\n  const dispatch = useDispatch();\r\n  const isToken = useSelector((state: any) => state.login.isToken);\r\n  const { alertAction } = useAlert();\r\n  const [login, { run: postLoginApi }] = useRequest(loginApi().postLogin);\r\n  const [user, setUser] = useState<userType>({\r\n      userId: \"\",\r\n      password: \"\",\r\n    });\r\n\r\n  useMove(isToken && login.fulfilled, \"\");\r\n\r\n  const onFinish = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"Success:\", user);\r\n    postLoginApi(user);\r\n    return false;\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    setUser((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  // 로그인 성공 시 useEffect\r\n  useEffect(() => {\r\n    if (login.fulfilled) {\r\n      // response에서 토큰 추출\r\n      const accessToken = login.data.accessToken;\r\n      const refreshToken = login.data.refreshToken;\r\n      // 세션스토리지에 아이디와 토큰 저장\r\n      window.sessionStorage.setItem(\"id\", user.userId);\r\n      window.sessionStorage.setItem(\"accessToken\", accessToken);\r\n      window.sessionStorage.setItem(\"refreshToken\", refreshToken);\r\n      alertAction.open(\"로그인 성공\");\r\n\r\n      // 리덕스에 디스패치\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: user.userId,\r\n      };\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, [login.fulfilled]);\r\n\r\n  // 로그인 실패시\r\n  useEffect(() => {\r\n    if (login.rejected) {\r\n      if (login.error) {\r\n        // 실패 이유 알림\r\n        alertAction.open(login.error.response.data.message);\r\n      }\r\n    }\r\n  }, [login.rejected]);\r\n\r\n  return {\r\n    loading: login.pending,\r\n    user,\r\n    onFinish,\r\n    onFinishFailed,\r\n    handleInput,\r\n  };\r\n}\r\n\r\n// 세션 스토리지에 아이디와 토큰이 있을 때, 리덕스에 토큰유무와 아이디를 저장\r\n// 레이아웃 바에서 유저아이디를 띄우기 위함\r\nexport function useLoginAuth() {\r\n  const dispatch = useDispatch();\r\n\r\n  // 새로고침시 (최상단 컴포넌트 app이 다시 그려질 시)만 동작\r\n  useEffect(() => {\r\n    // 세션에서 값 받아옴\r\n    let test = null;\r\n    test = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n\r\n    // null값이 아니면\r\n    if (test !== null) {\r\n      // payload 만들어서\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: id,\r\n      };\r\n\r\n      // 액션 디스패치\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, []);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAlert, useMove } from \"..\";\r\nimport { useRequest } from \"../\";\r\nimport { registerApi } from \"../api\";\r\n\r\ntype registerType = {\r\n  userId: string;\r\n  userEmail: string;\r\n  name: string;\r\n  password: string;\r\n};\r\n\r\ntype RegisterType = {\r\n  loading: boolean;\r\n  register: registerType;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n  handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport function useRegisterEffect(): RegisterType {\r\n  const { alertAction } = useAlert();\r\n  const [registerPromiseState, { run: postRegisterFetch }] = useRequest(\r\n    registerApi().postRegister,\r\n  );\r\n    const [register, setRegister] = useState<registerType>({\r\n      userId: \"\",\r\n      userEmail: '',\r\n      name: '',\r\n      password: ''\r\n    });\r\n\r\n  const onFinish = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"Success:\", register);\r\n    postRegisterFetch(register);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    setRegister((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  useMove(registerPromiseState.fulfilled, \"login\");\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.fulfilled) {\r\n      alertAction.open(\"회원가입을 무사히 마쳤습니다. 로그인 부탁드립니다.\");\r\n    }\r\n  }, [registerPromiseState.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.rejected) {\r\n      if (registerPromiseState.error) {\r\n        alertAction.open(registerPromiseState.error.response.data.message);\r\n      }\r\n    }\r\n  }, [registerPromiseState.rejected]);\r\n\r\n  return {\r\n    loading: registerPromiseState.pending,\r\n    register,\r\n    onFinish,\r\n    onFinishFailed,\r\n    handleInput,\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst profileRedux = createSlice({\r\n  name: \"hide\",\r\n  initialState: {\r\n    isHideChange: true\r\n  },\r\n  reducers: {\r\n    setHideChange(state, action) {\r\n      state.isHideChange = action.payload.isHideChange;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setHideChange } = profileRedux.actions;\r\nexport default profileRedux.reducer;\r\n"],"sourceRoot":""}