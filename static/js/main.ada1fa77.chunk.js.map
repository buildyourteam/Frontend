{"version":3,"sources":["components/icon/baseImg.png","components/icon/move.gif","hook/useHook.js","hook/useRequest.ts","reducers/temporary.js","hook/people/usePeopleList.js","hook/auth/refreshToken.js","hook/project/useProjectList.js","hook/project/useProjectDetail.js","hook/project/useProjectCreate.js","hook/project/useProjectUpdate.js","hook/project/useProjectApply.js","reducers/alert.js","hook/useAlert.js","reducers/login.js","components/Layout.js","components/Main/Jumbotron.js","components/Bar/subtitlebar.js","components/Project/ProjectBox.js","hook/api/profileApi.js","hook/profile/useImage.js","components/People/PeopleBox.js","components/Switch/switch.js","components/Image/inputImage.jsx","components/Dropdown/dropdown.jsx","components/Drawer/drawer.jsx","hook/profile/useProfileInfo.js","components/People/Profile/ProfileInfo/ProfileInfo.js","components/People/Profile/ProfileImage/ImageModify.js","hook/profile/useProfileInfoModify.js","components/People/Profile/ProfileInfo/ProfileInfoModify.js","components/Modal/Modal.js","components/Input/Input.jsx","pages/root.jsx","components/List/Sort.js","pages/project/projectList.jsx","reducers/project.js","pages/project/projectDetail.jsx","pages/project/createProject.jsx","pages/project/updateProject.jsx","pages/auth/Register.jsx","hook/api/authApi.js","hook/auth/useRegister.js","hook/profile/useProfileProject.js","reducers/profile.js","hook/profile/useProfileProjectModify.js","components/People/Profile/ProfileProjects/ModifyPlanProjects.js","components/People/Profile/ProfileProjects/RunningProjects.js","components/People/Profile/ProfileProjects/ModifyEndedProjects.js","components/People/Profile/ProfileProjects/EndedProjects.js","components/People/Profile/ProfileProjects/PlanProjects.js","hook/profile/useProfileRecruit.js","components/People/Profile/RecruitModal.js","hook/profile/useInvitation.js","components/People/Profile/Invitation/DetailModal.js","components/People/Profile/Invitation/InvitationBox.js","components/People/Profile/Invitation/InvitationModal.js","pages/Profile.jsx","pages/auth/Login.jsx","hook/auth/useLogin.js","hook/usePageMove.js","pages/PeopleList.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","require","reducer","state","action","type","error","pending","fulfilled","rejected","data","payload","useRequest","asyncTask","options","useReducer","dispatch","run","a","temporaryRedux","createSlice","name","initialState","temporary","reducers","setTemporary","actions","axios","usePeopleListState","useState","staticPeopleData","peopleList","setPeopleList","number","size","totalElements","totalPages","page","setPage","role","setRole","region","setRegion","grade","setGrade","search","setSearch","getPeopleList","pageNumber","params","get","res","getWantedPeopleList","process","useAlert","userId","userName","stacks","area","level","_links","self","href","profileImage","refreshToken","token","window","sessionStorage","getItem","post","setItem","accessToken","useProjectListState","staticProjectData","projectList","setProjectList","stack","setStack","getProjectList","sort","getDeadLineProjectList","projectId","projectName","teamName","endDate","description","dday","status","projectField","currentMember","developer","designer","planner","etc","needMember","leaderId","projectDetail","applyCanFile","questions","apply","recruitDtoList","selfDescription","introduction","projectApply","answers","alertRedux","isOpen","sentence","openAlert","console","log","closeAlert","useDispatch","useSelector","alert","open","close","loginRedux","isToken","setToken","Layout","children","history","useHistory","login","profileUrl","setIsOpen","Navbar","color","light","expand","className","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","removeItem","push","items","src","altText","caption","header","key","Jumbotron","UncontrolledCarousel","SubtitleHeader","props","id","moment","ProjectBox","nowDay","Date","parse","tz","format","Math","floor","developerPercent","plannerPercent","designerPercent","etcPercent","pathname","url","style","textDecoration","Card","CardImg","width","height","alt","CardBody","CardTitle","Row","xs","Col","CardSubtitle","CardText","Progress","value","useInfoApi","getInfo","postInfo","put","headers","Authorization","catch","response","useImgApi","getImg","postImg","image","FormData","append","imgUrl","useEndedProjectApi","getProject","getHideProject","usePlanProjectApi","getAllPlannedProject","myId","res2","totalRes","concat","_embedded","useHideProjectApi","hideProject","delete","displayProject","useImage","imgState","setImgState","getImgApi","useEffect","useStyles","makeStyles","theme","root","display","flexDirection","marginBottom","spacing","fontSize","borderRadius","backgroundColor","PeopleBox","classes","imgPending","card","badgeContent","String","object-fit","pill","IOSSwitch","withStyles","padding","margin","switchBase","transform","palette","common","white","opacity","border","thumb","track","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","primary","main","borderColor","boxShadow","ImgInput","img","saveImg","useDropzone","accept","maxFiles","onDrop","acceptedFiles","imgFile","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","align","heigth","DropdownRole","dropdownCaret","dropdownHeader","pick","dropdownOpen","setDropdownOpen","caret","setCaret","Dropdown","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","e","DropdownField","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","useProfileInfo","setInfo","alertAction","getInfoApi","contact","message","ProfileInfo","info","infoPending","Alert","ImageModify","setState","isImgChange","Form","FormGroup","Label","for","Input","FormText","useProfileInfoModify","setModifying","infoFulfilled","infoRejected","infoError","postInfoApi","imgFulfilled","imgRejected","imgError","postImgApi","ProfileInfoModify","handleChange","target","placeholder","onChange","preventDefault","withOutGrade","CenterModal","modalFlag","Modal","ModalHeader","gridTemplateColumns","alignItems","fontWeight","float","IconButton","ModalFooter","footer","AlertModal","alertData","BootstrapInputUI","input","position","fontFamily","join","fade","InputBase","BootstrapInput","Root","projectlistPromise","getApi","project","projectAction","projectListPromise","undefined","people","peopleAction","peopleListPromise","peoplelistPromise","useWantedPeopleListEffect","index","Pagination","count","formControl","minWidth","selectEmpty","marginTop","ProjectSort","event","getPage","Grid","container","item","sm","FormControl","Select","displayEmpty","MenuItem","disabled","FormHelperText","variant","InputLabel","OutlinedInput","label","PeopleSort","ProjectList","projectListAction","resProjectList","getProjectListFulfilled","getProjectListRejected","getProjectListError","getProjectListApi","projectRedux","memberList","setProject","ReactMarkdown","ProjectDetail","location","useLocation","split","setApply","recruit","setRecruit","reader","applyModal","applyDetail","check","setCheck","pagination","setPagination","fetchGetDetail","resApply","Accept","then","setApplyState","projectApplicantDtoList","setRecruitState","fetchDeleteProject","inputProject","setProjectState","checkSwitch","inputApply","inputRecruit","clickPagination","nextPage","openApply","closeApply","openDelete","closeDelete","openDetailApply","closeDetailApply","useProjectDetailState","resProject","getProjectFulfilled","getProjectPending","fetchDetail","useProjectDetailEffect","updateProject","Typography","applyApi","detailGet","List","ListItem","divider","ListItemText","ListItemSecondaryAction","source","FormControlLabel","control","length","dense","applySet","ApplyProject","api","applied","setApplied","fetchGetApply","fetchPostApply","inputAnswer","i","selectRole","fetchPutApply","useProjectApplyState","applyAction","applyRes","postApply","applyPutRes","putApply","applyGetRes","getApply","applyLink","afterAction","defaultAnaswer","answer","useProjectApplyEffect","InputGroup","InputGroupAddon","addonType","multiline","fullWidth","ApplyDetailProject","fetchDeleteApply","useProjectDetailApplyState","applyDeleteRes","deleteApply","useProjectDetailApplyEffect","ProjectCreate","setImg","fetchPostCreate","targetValue","inputImg","inputProjectMember","memberValue","fetchImg","imgData","inputDate","date","inputQuestion","q","addQuestion","deleteQuestion","filter","inputField","useProjectCreateState","getProjectRejected","getProjectError","createProjectApi","getImgFulfilled","createImgApi","projectImg","useProjectCreateEffect","min","max","step","utils","DateFnsUtils","locale","ko","disableUnderline","disableToolbar","hideTabs","clearable","ampm","questionString","ProjectUpdate","fetchPutUpdate","useProjectUpdateState","UpdateProjectApi","UpdateImgApi","useProjectUpdateEffect","updateData","Register","userEmail","password","postRegister","RegisterFulfilled","RegisterRejected","RegisterError","postRegisterApi","useRegisterEffect","resRegister","RegisterPending","Container","onSubmit","useProfileProject","resGetProject","getProjectApi","setList","hiding","profile","isHideChange","profileRedux","setHideChange","useProfileProjectModify","getHideProjectApi","resHideProject","hideProjectFulfilled","hideProjectRejected","hideProjectError","resDisplayProject","displayProjectFulfilled","displayProjectRejected","displayProjectError","list","hideList","setHideList","moveData","ModifyPlanProjects","hideProjectApi","displayProjectApi","RunningProjects","setHiding","ModifyEndedProjects","EndedProjects","PlanProjects","useProfileRecruit","getProjectData","getProjecsError","postRecruitData","postRecruitFulfilled","postRecruitRejected","postRecruitError","toggleNested","setNestedMessage","plannedProjects","setPlannedProjects","RecruitModal","modal","recruitState","nestedModal","setNestedModal","closeAll","setCloseAll","nestedMessage","postRecruit","postRecruitApi","pj","TextField","rows","onClosed","ModalBody","useInvitationEffect","invitationList","setInvitationList","isError","errorMessage","noList","setNoList","noticeNoList","getInvitationList","getInvitationListApi","useInvitationDetailEffect","pid","invitaionDetail","setInvitaionDetail","activityName","setActivityName","getInvitationDetail","putInvitationAccept","deleteInvitationReject","getInvitationDetailApi","putFulfilled","putInvitationAcceptApi","reject","deleteFulfilled","deleteInvitationRejectApi","handleAccept","handleReject","DetailModal","Badge","body","InvitationBox","detailModal","setDetailModal","detailModalToggle","InvitationModal","invitation","Profile","modifying","modifyToggle","invitationModal","setInvitationModal","invitationToggle","setModal","recruitToggle","activeTab","setActiveTab","tabToggle","tab","tabs","classnames","active","TabContent","TabPane","tabId","Login","postLogin","resLogin","LoginFulfilled","LoginRejected","LoginError","postLoginApi","reduxData","useLoginEffect","LoginPending","condition","destination","useMove","PeopleList","peopleListAction","resPeopleList","getPeopleListFulfilled","getPeopleListRejected","getPeopleListError","getPeopleListApi","App","test","useLoginAuth","basename","exact","path","component","Boolean","hostname","match","combineReducers","temproray","store","configureStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ada1fa77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseImg.c40f4ed9.png\";","module.exports = __webpack_public_path__ + \"static/media/move.272e1d7a.gif\";","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useTemporaryApi() {\r\n  const { temporary } = useSelector(state => state.temproray);\r\n  const getProjectList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const getPeopleList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const postProjectList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n  const postPeopletList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n\r\n  return [\r\n    temporary,\r\n    {\r\n      getProjectList,\r\n      getPeopleList,\r\n      postProjectList,\r\n      postPeopletList\r\n    }\r\n  ];\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nexport type Service<R, P extends any[]> = (...args: P) => Promise<R>;\r\n\r\nexport type RequestState = {\r\n  data: any;\r\n  error: any;\r\n  pending: boolean;\r\n  fulfilled: boolean;\r\n  rejected: boolean;\r\n};\r\n\r\nexport type RequestAction =\r\n  | { type: 'request' }\r\n  | { type: 'success'; payload: any }\r\n  | { type: 'failure'; payload: string };\r\n\r\nfunction reducer(state: RequestState, action: RequestAction): RequestState {\r\n  switch (action.type) {\r\n    case 'request':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: true,\r\n        fulfilled: false,\r\n        rejected: false,\r\n      };\r\n    case 'success':\r\n      return {\r\n        data: action.payload,\r\n        error: null,\r\n        pending: false,\r\n        fulfilled: true,\r\n        rejected: false,\r\n      };\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        fulfilled: false,\r\n        rejected: true,\r\n      };\r\n  }\r\n}\r\n\r\nexport function useRequest<R, P extends any[]>(\r\n  asyncTask: Service<R, P>,\r\n  options?: {\r\n    // autoFirstRun?: boolean;\r\n    // passArgs?: P;\r\n  },\r\n) {\r\n  // const {autoFirstRun = false, passArgs} = options || {};\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    data: null,\r\n    error: null,\r\n    pending: false,\r\n    fulfilled: false,\r\n    rejected: false,\r\n  });\r\n  const requestActions = {\r\n    run: async (...args: P) => {\r\n      dispatch({\r\n        type: 'request',\r\n      });\r\n      try {\r\n        // then 패턴 데신에 await을 쓴 이유는 일반 함수일 경우에도 동작하도록\r\n        const data = await asyncTask(...args);\r\n        dispatch({\r\n          type: 'success',\r\n          payload: data,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: 'failure',\r\n          payload: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return [state, requestActions] as const;\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst temporaryRedux = createSlice({\r\n  name: 'project',\r\n  initialState: {\r\n    temporary: 0,\r\n  },\r\n  reducers: {\r\n    setTemporary(state, action) {\r\n      state.temporary = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setTemporary,\r\n} = temporaryRedux.actions;\r\nexport default temporaryRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { useAlert } from \"../\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function usePeopleListState() {\r\n  const [peopleList, setPeopleList] = useState(staticPeopleData);\r\n  const [page, setPage] = useState({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [grade, setGrade] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const getPeopleList = async (pageNumber, params) => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/people?page=${pageNumber}&size=12${params}`\r\n    );\r\n    return res.data;\r\n  };\r\n  const getWantedPeopleList = async (pageNumber) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}people?page=${pageNumber}&size=6`\r\n    );\r\n    return res.data;\r\n  };\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  return [\r\n    { peopleList, role, region, search, page, grade },\r\n    {\r\n      setPeopleList,\r\n      getPeopleList,\r\n      getWantedPeopleList,\r\n      setPage,\r\n      setRole,\r\n      setRegion,\r\n      setSearch,\r\n      setGrade,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function usePeopleListEffect(\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  getApi,\r\n  setPeopleList,\r\n  setPage\r\n) {\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      if (\"_embedded\" in data) {\r\n        setPeopleList(data._embedded.peopleList);\r\n        setPage(data.page);\r\n      } else {\r\n        setPeopleList([]);\r\n        setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        setPeopleList([]);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n\r\nexport function useWantedPeopleListEffect(\r\n  peoplelistPromise,\r\n  getApi,\r\n  setPeopleList,\r\n  setPage\r\n) {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (peoplelistPromise.fulfilled) {\r\n      setPeopleList(peoplelistPromise.data._embedded.peopleList);\r\n      setPage(peoplelistPromise.data.page);\r\n    } // 임시데이터\r\n  }, [peoplelistPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (peoplelistPromise.rejected) {\r\n      if (peoplelistPromise.error) {\r\n        alertAction.open(peoplelistPromise.error.data.message);\r\n      }\r\n    }\r\n  }, [peoplelistPromise.rejected]);\r\n}\r\n\r\nconst staticPeopleData = [\r\n  {\r\n    userId: \"testUser1\",\r\n    userName: \"User1\",\r\n    stacks: [\"SPRINGBOOT\", \"ReactJS\"],\r\n    area: \"Daegu\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser1\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser4\",\r\n    userName: \"User4\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser4\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser4\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Ilsan\",\r\n    level: 6,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Seoul\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testUser7\",\r\n    userName: \"User7\",\r\n    stacks: [\"SPRINGBOOT\"],\r\n    area: \"Busanl\",\r\n    level: 1,\r\n    _links: {\r\n      self: {\r\n        href: \"/profile/testUser7\",\r\n      },\r\n      profileImage: {\r\n        href: \"https://api.eskiiimo.com/profile/image/testUser7\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import axios from \"axios\";\r\n\r\nconst refreshToken = async () => {\r\n  const token = window.sessionStorage.getItem(\"refreshToken\");\r\n  const res = await axios.post(\r\n    `${process.env.REACT_APP_BASE_URL}auth/refresh`,\r\n    {\r\n      refreshToken: token,\r\n    }\r\n  );\r\n  window.sessionStorage.setItem(\"accessToken\", res.data.accessToken);\r\n  return res.data.accessToken;\r\n};\r\n\r\nexport default refreshToken;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useProjectListState() {\r\n  const [projectList, setProjectList] = useState(staticProjectData);\r\n  const [page, setPage] = useState({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0\r\n  });\r\n  const [role, setRole] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [stack, setStack] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const getProjectList = async (pageNumber, sort) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects?page=${pageNumber}&size=8${sort}`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async pageNumber => {\r\n    let res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return [\r\n    { projectList, role, region, search, page, stack },\r\n    {\r\n      getProjectList,\r\n      setProjectList,\r\n      getDeadLineProjectList,\r\n      setPage,\r\n      setRegion,\r\n      setRole,\r\n      setStack,\r\n      setSearch\r\n    }\r\n  ];\r\n}\r\n\r\nexport function useProjectListEffect(\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  getApi,\r\n  setProjectList,\r\n  setPage\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      if (\"_embedded\" in data) {\r\n        setProjectList(data._embedded.projectList);\r\n        setPage(data.page);\r\n      } else {\r\n        setProjectList([]);\r\n        setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0\r\n        });\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  projectlistPromise,\r\n  getApi,\r\n  setProjectList,\r\n  setPage\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.fulfilled) {\r\n      if (projectlistPromise.data !== undefined) {\r\n        setProjectList(projectlistPromise.data._embedded.projectList);\r\n        setPage(projectlistPromise.data.page);\r\n      }\r\n    }\r\n  }, [projectlistPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.rejected) {\r\n      if (projectlistPromise.error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [projectlistPromise.rejected]);\r\n}\r\n\r\nconst staticProjectData = [\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4\r\n    },\r\n    leaderId: null\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4\r\n    },\r\n    leaderId: null\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4\r\n    },\r\n    leaderId: null\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4\r\n    },\r\n    leaderId: null\r\n  }\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectDetailState = () => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [apply, setApply] = useState([]);\r\n  const [recruit, setRecruit] = useState(recruitDtoList);\r\n  const [alertData, alertAction] = useAlert();\r\n  const [check, setCheck] = useState({\r\n    apply: true,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n    applyDetail: false,\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n  const [teamReader, setTeamReader] = useState(false);\r\n  const fetchGetDetail = async (projectId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply = {\r\n      apply: {},\r\n      recruit: {},\r\n    };\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0]._links.self.href === `/profile/${id}`) {\r\n      token = await refreshToken();\r\n      await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value) => {\r\n          try {\r\n            setApplyState(value.data._embedded.projectApplicantDtoList);\r\n          } catch {\r\n            setApplyState([]);\r\n          }\r\n        })\r\n        .catch(async (error) => {\r\n          throw error;\r\n        });\r\n      await axios\r\n        .get(\r\n          `${process.env.REACT_APP_BASE_URL}/projects/${projectId}/recruits`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          }\r\n        )\r\n        .then((value) => {\r\n          try {\r\n            setRecruitState(value.data._embedded.recruitDtoList);\r\n          } catch {\r\n            setRecruitState([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios\r\n            .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    history.push(\"/projects\");\r\n  };\r\n\r\n  const fetchPutApply = async (userId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    token = await refreshToken();\r\n    await axios\r\n      .put(project._links.apply.href, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        const deleteMember = apply.filter((member) => member.userId !== userId);\r\n        setApplyState(deleteMember);\r\n      })\r\n      .catch(async (error) => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  const setProjectState = (data) => {\r\n    setProject(data);\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setApplyState = (data) => {\r\n    setApply(data);\r\n  };\r\n\r\n  const inputApply = (e) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setRecruitState = (data) => {\r\n    setRecruit(data);\r\n  };\r\n\r\n  const inputRecruit = (e) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const checkSwitch = (name, checked) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name, nextPage) => {\r\n    setPagination((value) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDetailApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDetailApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, check, apply, recruit, pagination },\r\n    {\r\n      fetchGetDetail,\r\n      inputProject,\r\n      setProjectState,\r\n      checkSwitch,\r\n      inputApply,\r\n      setApplyState,\r\n      setRecruitState,\r\n      inputRecruit,\r\n      fetchDeleteProject,\r\n      clickPagination,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n      openDetailApply,\r\n      closeDetailApply,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectDetailEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  fetchDetail,\r\n  projectAction,\r\n  projectId\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    fetchDetail(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      projectAction.setProjectState(data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (data.res.memberList[0]._links.self.href === `/profile/${id}`) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      console.log(error.response);\r\n      alertAction.open(error.response.data.message);\r\n\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nconst useProjectRecruitEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  inputState\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // inputDetail(data);\r\n      inputState(recruitDtoList);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport {\r\n  useProjectDetailState,\r\n  useProjectDetailEffect,\r\n  useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectCreateState = () => {\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(\"\");\r\n  const fetchPostCreate = async (data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        }\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                  \"Access-Control-Expose-Headers\": \"*\",\r\n                },\r\n              }\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPostCreate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectCreateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  createImgApi,\r\n  projectImg\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      const projectId = data.headers.location.split(\"/\");\r\n      createImgApi(projectId[4], projectImg);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectCreateState, useProjectCreateEffect };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectUpdateState = () => {\r\n  const projectDetail = useSelector((state) => state.project.projectDetail);\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(projectDetail.img);\r\n  const fetchPutUpdate = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .put(\r\n              `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n              data,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              }\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        }\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              }\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPutUpdate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectUpdateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  UpdateImgApi,\r\n  projectImg,\r\n  projectId\r\n) => {\r\n  const history = useHistory();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      console.log(typeof projectImg);\r\n      if (typeof projectImg !== \"string\") UpdateImgApi(projectId, projectImg);\r\n      history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectUpdateState, useProjectUpdateEffect };\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const useProjectApplyState = (api) => {\r\n  const [apply, setApply] = useState(projectApply);\r\n  const [applied, setApplied] = useState(false);\r\n  const fetchGetApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .get(`${api}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .post(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios\r\n            .post(api, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios\r\n            .put(api, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const inputApply = (name, data) => {\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a, i) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { apply, applied },\r\n    {\r\n      fetchPostApply,\r\n      inputAnswer,\r\n      setApply,\r\n      inputApply,\r\n      selectRole,\r\n      fetchGetApply,\r\n      fetchPutApply,\r\n      setApplied,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useProjectApplyEffect = (\r\n  questions,\r\n  getApply,\r\n  apply,\r\n  applyAction,\r\n  applyRes,\r\n  applyGetRes,\r\n  applyPutRes,\r\n  detailGet,\r\n  applyLink,\r\n  afterAction\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const defaultAnaswer = questions.map(() => {\r\n      return \"\";\r\n    });\r\n    applyAction.inputApply(\"answers\", defaultAnaswer);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet && applyLink !== \"\") {\r\n      getApply();\r\n    }\r\n  }, [detailGet, applyLink]);\r\n\r\n  useEffect(() => {\r\n    if (applyGetRes.fulfilled) {\r\n      applyAction.setApply(applyGetRes.data);\r\n      if (apply.answer !== \"\") {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [applyGetRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyRes.fulfilled]);\r\n  useEffect(() => {\r\n    if (applyPutRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyPutRes.fulfilled]);\r\n  return \"\";\r\n};\r\n\r\nexport const useProjectDetailApplyState = (api) => {\r\n  const [apply, setApply] = useState(projectApply);\r\n\r\n  const fetchGetApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          res = await axios\r\n            .get(`${api}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPutApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(\r\n        api,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        }\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios\r\n            .put(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(api, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          await axios\r\n            .delete(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  return [\r\n    { apply },\r\n    {\r\n      fetchDeleteApply,\r\n      setApply,\r\n      fetchGetApply,\r\n      fetchPutApply,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useProjectDetailApplyEffect = (\r\n  open,\r\n  getApply,\r\n  apply,\r\n  applyGetRes,\r\n  applyPutRes,\r\n  applyDeleteRes,\r\n  applySet,\r\n  userId,\r\n  close,\r\n  applyAction\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (open) {\r\n      getApply();\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (applyGetRes.fulfilled) {\r\n      applyAction.setApply(applyGetRes.data);\r\n    }\r\n  }, [applyGetRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyPutRes.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"ACCEPT\",\r\n            };\r\n          } else {\r\n            return apply;\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [applyPutRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyDeleteRes.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"REJECT\",\r\n            };\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [applyDeleteRes.fulfilled]);\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst alertRedux = createSlice({\r\n  name: \"alert\",\r\n  initialState: {\r\n    isOpen: false,\r\n    sentence: \"\",\r\n  },\r\n  reducers: {\r\n    openAlert(state, action) {\r\n      state.isOpen = true;\r\n      console.log(action.payload);\r\n      state.sentence = action.payload;\r\n    },\r\n    closeAlert(state, action) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openAlert, closeAlert } = alertRedux.actions;\r\nexport default alertRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openAlert, closeAlert } from \"../reducers/alert\";\r\n\r\nexport default function useAlert() {\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.alert.isOpen);\r\n  const sentence = useSelector((state) => state.alert.sentence);\r\n\r\n  const open = (data) => {\r\n    dispatch(openAlert(data));\r\n  };\r\n\r\n  const close = () => {\r\n    dispatch(closeAlert());\r\n  };\r\n\r\n  return [\r\n    { sentence, isOpen },\r\n    {\r\n      open,\r\n      close,\r\n    },\r\n  ];\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginRedux = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    isToken: false,\r\n    userId: \"\"\r\n  },\r\n  reducers: {\r\n    setToken(state, action) {\r\n      state.isToken = action.payload.isToken;\r\n      state.userId = action.payload.userId;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setToken } = loginRedux.actions;\r\nexport default loginRedux.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLogoutAuth } from \"../hook/auth/useLogin\";\r\nimport { setToken } from \"../reducers/login\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"./Layout.css\";\r\nimport \"./component.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // useMove 안 쓴 이유 -> 로그인 여부를 가지는 state가 레이아웃 컴포넌트 내부에 없어서 사용하기 애매함,,\r\n  // 일단 직접 useHistory로 구현\r\n  const history = useHistory();\r\n\r\n  // 레이아웃 바에서 로그인 여부를 확인하고, 유저 아이디를 띄울 변수\r\n  const userId = useSelector((state) => state.login.userId);\r\n  const isToken = useSelector((state) => state.login.isToken);\r\n\r\n  // 레이아웃에서 userId클릭하면 이동할 본인 프로필페이지 주소\r\n  const profileUrl = `/profile/${userId}`;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  // 로그아웃\r\n  const handleClick = () => {\r\n    // 세션 스토리지 비우기\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"accessToken\");\r\n    window.sessionStorage.removeItem(\"refreshToken\");\r\n\r\n    // 리덕스 초기화 데이터\r\n    const reduxData = {\r\n      isToken: false,\r\n      userId: null,\r\n    };\r\n\r\n    // 액션 디스패치\r\n    dispatch(setToken(reduxData));\r\n\r\n    // 홈으로\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"\" light expand=\"md\" className=\"nav_header\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          Egluu\r\n          {/* <img src={logo} alt=\"menubar\" id=\"menu-img\" width=\"100\" /> */}\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"container-fluid\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/projects\">\r\n                프로젝트 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/peoples\">\r\n                사용자 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            {isToken ? (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to={profileUrl}>\r\n                    {userId} 님\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={handleClick}>로그아웃</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"nav-right\">\r\n                  <NavLink tag={Link} to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <main>\r\n        <div className=\"nav_body\">{children}</div>\r\n      </main>\r\n\r\n      <footer className=\"nav_footer\">\r\n        <hr />\r\n        <div className=\"container-fluid text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mt-md-0 mt-3\">\r\n              <h4 className=\"text-uppercase\">Egluu</h4>\r\n              <br />\r\n              <p>Simple Team Building Platform</p> © 2020 Copyright:\r\n              <a href=\"https://egluuapi.codingnome.dev/\">\r\n                https://egluuapi.codingnome.dev/\r\n              </a>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n            <div className=\"col-md-2 mb-md-0 mb-2\"></div>\r\n            <div className=\"col-md-3 mb-md-0 mb-3\">\r\n              <h5 className=\"text-uppercase\">Links</h5>\r\n              <br />\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Instagram</a>\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  <a href=\"#!\">Github</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { UncontrolledCarousel } from \"reactstrap\";\r\nconst items = [\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\",\r\n    header: \"Slide 1 Header\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\",\r\n    header: \"Slide 2 Header\",\r\n    key: \"2\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\",\r\n    header: \"Slide 3 Header\",\r\n    key: \"3\"\r\n  }\r\n];\r\nconst Jumbotron = () => <UncontrolledCarousel items={items} />;\r\nexport default Jumbotron;","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Bar.css\";\r\nconst SubtitleHeader = props => {\r\n  return (\r\n    <Button onClick={props.onClick} color=\"link\" id=\"subtitleheader\">\r\n      {props.children}\r\n      {\"> \"}\r\n    </Button>\r\n  );\r\n};\r\nexport default SubtitleHeader;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Progress\r\n} from \"reactstrap\";\r\nimport sampleimg from \"../icon/baseImg.png\";\r\nimport \"./Project.css\";\r\nconst moment = require(\"moment-timezone\"); //상단에 선언\r\n\r\nexport default function ProjectBox(props) {\r\n  const staticProjectData = props.data;\r\n  const nowDay = Date.parse(moment().tz(\"Asia/Seoul\").format());\r\n  const dday = Math.floor(\r\n    (Date.parse(staticProjectData.endDate) - nowDay) / (24 * 3600 * 1000)\r\n  );\r\n  // 0으로 나눌 경우 예외처리!\r\n  const developerPercent =\r\n    staticProjectData.currentMember.developer !== 0\r\n      ? (staticProjectData.currentMember.developer /\r\n          staticProjectData.needMember.developer) *\r\n        100\r\n      : 0;\r\n  const plannerPercent =\r\n    staticProjectData.currentMember.planner !== 0\r\n      ? (staticProjectData.currentMember.planner /\r\n          staticProjectData.needMember.planner) *\r\n        100\r\n      : 0;\r\n\r\n  const designerPercent =\r\n    staticProjectData.currentMember.designer !== 0\r\n      ? (staticProjectData.currentMember.designer /\r\n          staticProjectData.needMember.designer) *\r\n        100\r\n      : 0;\r\n\r\n  const etcPercent =\r\n    staticProjectData.currentMember.etc !== 0\r\n      ? (staticProjectData.currentMember.etc /\r\n          staticProjectData.needMember.etc) *\r\n        100\r\n      : 0;\r\n\r\n  return (\r\n    <div id=\"ProjectBoxCard\">\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Card>\r\n          <CardImg\r\n            width=\"240px\"\r\n            height=\"180px\"\r\n            src={`${process.env.REACT_APP_BASE_URL}projects/image/${staticProjectData.projectId}`}\r\n            alt=\"Card image cap\"\r\n          />\r\n          <CardBody>\r\n            <CardTitle>{staticProjectData.projectName}</CardTitle>\r\n            <Row xs=\"12\" id=\"team_dday\">\r\n              <Col xs=\"9\">\r\n                <CardSubtitle>{staticProjectData.teamName}</CardSubtitle>\r\n              </Col>\r\n              <Col xs=\"3\">\r\n                <CardSubtitle>D-{dday}</CardSubtitle>\r\n              </Col>\r\n            </Row>\r\n            <Row xs=\"12\" id=\"member-count\">\r\n              <Col xs=\"6\">\r\n                <CardText>developer</CardText>\r\n                <Progress color=\"#007bff\" value={developerPercent}>\r\n                  {developerPercent}\r\n                </Progress>\r\n                <CardText>planner </CardText>\r\n                <Progress color=\"#007bff\" value={plannerPercent}>\r\n                  {plannerPercent}\r\n                </Progress>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <CardText>designer</CardText>\r\n                <Progress color=\"#007bff\" value={designerPercent}>\r\n                  {designerPercent}\r\n                </Progress>\r\n                <CardText>etc</CardText>\r\n                <Progress color=\"#007bff\" value={etcPercent}>\r\n                  {etcPercent}\r\n                </Progress>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\n\r\n// Profile Page 좌측 Info창에서 사용되는 api\r\nexport function useInfoApi() {\r\n  // get info api\r\n  const getInfo = async userId => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // post info api\r\n  const postInfo = async (userId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .catch(async error => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await refreshToken();\r\n          console.log(token);\r\n          const res = await axios\r\n            .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n              headers: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\",\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            })\r\n            .catch(error => {\r\n              throw error;\r\n            });\r\n          return res;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n  return { getInfo, postInfo };\r\n}\r\nexport function useImgApi() {\r\n  // get Img api\r\n  const getImg = async userId => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`\r\n    );\r\n    //const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    //console.log(res);\r\n    return res.data;\r\n  };\r\n\r\n  const postImg = async (userId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    //console.log(token);\r\n    //console.log(userId);\r\n    let image = new FormData();\r\n    image.append(\"image\", data.imgUrl);\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n      image,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    console.log(res);\r\n    return res;\r\n  };\r\n  return { getImg, postImg };\r\n}\r\nexport function useRunningProjectApi() {\r\n  const getProject = async userId => {\r\n    //const res = await axios.get(`${process.env.REACT_APP_BASE_URL}${userId}`);\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async userId => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function useEndedProjectApi() {\r\n  // 종료된 프로젝트 목록 가져오기\r\n  const getProject = async userId => {\r\n    //const res = await axios.get(`${process.env.REACT_APP_BASE_URL}${userId}`);\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async userId => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function usePlanProjectApi() {\r\n  const getProject = async userId => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan?page=0&size=10&sort=projectName%2CDESC`\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async userId => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 모든 (planned) 프로젝트 목록 가져오기 (recruit modal에서 프로젝트 선택용)\r\n  const getAllPlannedProject = async myId => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n\r\n    // 헤더\r\n    const header = {\r\n      \"Content-type\": \"application/json;charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n    // 일반 plan과 숨겨진 plan 가져오기\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan`,\r\n      {\r\n        headers: header\r\n      }\r\n    );\r\n    const res2 = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan/hidden`,\r\n      {\r\n        headers: header\r\n      }\r\n    );\r\n\r\n    let totalRes = [];\r\n\r\n    // 안에 데이터가 있을 경우 데이터 가져오기\r\n    if (res.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res.data._embedded.projectList);\r\n    }\r\n    if (res2.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res2.data._embedded.projectList);\r\n    }\r\n\r\n    return totalRes;\r\n  };\r\n\r\n  return { getProject, getHideProject, getAllPlannedProject };\r\n}\r\nexport function useHideProjectApi() {\r\n  const hideProject = async (userId, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return { res, projectId };\r\n  };\r\n\r\n  const displayProject = async (userId, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return { res, projectId };\r\n  };\r\n  return { hideProject, displayProject };\r\n}\r\nexport function useSendRecruitPeopleApi() {\r\n  const postRecruit = async (userId, data) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res;\r\n  };\r\n  return { postRecruit };\r\n}\r\nexport function useInvitationListApi() {\r\n  const getInvitationList = async userId => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    // console.log(res);\r\n    return res.data;\r\n  };\r\n  return { getInvitationList };\r\n}\r\nexport function useInvitationDetailApi() {\r\n  const getInvitationDetail = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    console.log(res);\r\n    return res.data;\r\n  };\r\n\r\n  const putInvitationAccept = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const deleteInvitationReject = async (userId, pid) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    return res.data;\r\n  };\r\n  return { getInvitationDetail, putInvitationAccept, deleteInvitationReject };\r\n}\r\n// recruitToPeople\r\n// recruitToProject\r\n","import { useEffect } from \"react\";\r\nimport { useImgApi } from \"../api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nexport const useImage = (\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n) => {\r\n  const { getImg } = useImgApi();\r\n\r\n  const [\r\n    { data, fulfilled, pending, rejected, error },\r\n    { run: getImgApi },\r\n  ] = useRequest(getImg);\r\n\r\n  useEffect(() => {\r\n    getImgApi(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    setImgState({\r\n      ...imgState,\r\n      imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    });\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        // console.log(error.response.data);\r\n        if (error.response.data.error === \"302\") {\r\n          setImgState({\r\n            ...imgState,\r\n            imgUrl:\r\n              \"https://i.pinimg.com/236x/21/88/fd/2188fd41b8d31930acc43b7b197e6dfd.jpg\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [rejected]);\r\n  return pending;\r\n};\r\n\r\nexport default useImage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Badge as Stack } from \"reactstrap\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Level from \"./Level\";\r\nimport \"./People.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useImage } from \"../../hook/profile/useImage\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    \"& .MuiBadge-badge\": {\r\n      height: \"30px\",\r\n      width: \"30px\",\r\n      fontSize: \"1rem\",\r\n      borderRadius: \"15px\",\r\n      color: \"#ffffff\",\r\n      backgroundColor: \"#007bff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function PeopleBox(props) {\r\n  const classes = useStyles();\r\n  const data = props.data;\r\n  const [imgState, setImgState] = useState(\"\");\r\n  const imgPending = useImage(imgState, setImgState, data.userId);\r\n  return (\r\n    <div id=\"PeopleBoxCard\" className={classes.card}>\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Badge badgeContent={String(data.grade)} className={classes.root}>\r\n          <Card>\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              src={`${process.env.REACT_APP_BASE_URL}profile/image/${data.userId}`}\r\n              alt=\"Card image cap\"\r\n            /> */}\r\n            {imgPending ? (\r\n              <p>로딩중...</p>\r\n            ) : (\r\n              <div className=\"people-img\">\r\n                <img\r\n                  src={imgState.imgUrl}\r\n                  width=\"100%\"\r\n                  object-fit=\"contain\"\r\n                ></img>\r\n              </div>\r\n            )}\r\n            <CardBody>\r\n              <div id=\"card-title\">\r\n                <CardTitle>{data.userId}</CardTitle>\r\n              </div>\r\n\r\n              <CardText id=\"card-text\">\r\n                {data.stack === null && \" \"}\r\n                {/* {data.stacks.map(value => {\r\n                  return (\r\n                    <Stack color=\"secondary\" pill>\r\n                      # {value}{\" \"}\r\n                    </Stack>\r\n                  );\r\n                })} */}\r\n                {data.stacks[0] && (\r\n                  <Stack color=\"secondary\" pill>\r\n                    # {data.stacks[0]}{\" \"}\r\n                  </Stack>\r\n                )}\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Badge>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nexport const AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useRef, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst params = {\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    type: \"bullets\",\r\n    clickable: true,\r\n  },\r\n  observer: true,\r\n  spaceBetween: 30,\r\n  lazy: {\r\n    loadPrevNext: true,\r\n  },\r\n};\r\n\r\nfunction ImgInput({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${img}`}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImgInput2({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://pixabay.com/ko/illustrations/%EC%9C%84%EC%84%B1-%ED%96%89%EC%84%B1-%EA%B3%B5%EA%B0%84-%EC%B2%9C%EB%AC%B8%ED%95%99-1303512/\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={img}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ImgInput2, ImgInput };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst role = [\"DEVELOPER\", \"DESIGNER\", \"PLANNER\", \"ETC\"];\r\n\r\nconst DropdownRole = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle caret style={props.style}>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"DEVELOPER\")}>\r\n          DEVELOPER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"DESIGNER\")}>\r\n          DESIGNER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"PLANNER\")}>PLANNER</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst DropdownField = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle style={props.style} caret>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"APP\")}>APP</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"WEB\")}>WEB</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"AI\")}>AI</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"HW\")}>HW</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"BLOCKCHAIN\")}>\r\n          BLOCKCHAIN\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"SYSTEM\")}>SYSTEM</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\nexport { DropdownRole, DropdownField };\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: \"20%\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function HalfDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { anchor, buttonName } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <React.Fragment key={anchor}>\r\n        <Button style={{ fontSize: \"20px\" }} onClick={handleDrawerOpen}>\r\n          {buttonName}\r\n        </Button>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"right\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {props.children}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useInfoApi } from \"../../hook/api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfo = (setInfo, userId) => {\r\n  // info 정보 get 하는 api\r\n  const { getInfo } = useInfoApi();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  // info get의 상태변수와 데이터 및 액션 디스패쳐\r\n  const [\r\n    { data: response, fulfilled, pending, rejected, error },\r\n    { run: getInfoApi },\r\n  ] = useRequest(getInfo);\r\n\r\n  // 마운트될 때 액션 디스패치\r\n  useEffect(() => {\r\n    getInfoApi(userId);\r\n  }, [userId]);\r\n\r\n  // info get 성공시\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInfo({\r\n        userName: response.userName,\r\n        role: response.role,\r\n        stacks: response.stacks,\r\n        contact: response.contact,\r\n        area: response.area,\r\n        grade: response.grade,\r\n        introduction: response.introduction,\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // info get 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // // get refresh~\r\n  // const Refresh = () => {\r\n  //   Api();\r\n  // };\r\n\r\n  return pending;\r\n};\r\n\r\nexport default useProfileInfo;\r\n","import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"../Profile.css\";\r\nimport { useImage } from \"../../../../hook/profile/useImage\";\r\nimport useProfileInfo from \"../../../../hook/profile/useProfileInfo\";\r\n\r\nconst ProfileInfo = ({ info, setInfo, imgState, setImgState, userId }) => {\r\n  // 상태변화에 대한 sideEffect에 쓰일 args\r\n  const infoPending = useProfileInfo(setInfo, userId);\r\n\r\n  const imgPending = useImage(imgState, setImgState, userId);\r\n\r\n  return (\r\n    <div>\r\n      {infoPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <>\r\n          <Alert color=\"secondary\">{info.introduction} </Alert>\r\n          {/* width=\"100%\" 으로 비율유지 \r\n  object-fit=\"contain\" 으로 1/4칸에 딱 맞게 조정 */}\r\n          {imgPending ? (\r\n            <p>로딩중...</p>\r\n          ) : (\r\n            <div className=\"profile-img\">\r\n              <img\r\n                src={imgState.imgUrl}\r\n                width=\"100%\"\r\n                object-fit=\"contain\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          <h3 className=\"profile-info-id\">{userId}</h3>\r\n          <h6 className=\"profile-info-id\">{info.userName}</h6>\r\n          <h6>\r\n            Lev. {info.grade} {info.role}\r\n          </h6>\r\n          <h6>area : {info.area}</h6>\r\n          <p>#ReactJs #Javascript</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nconst ImageModify = ({ state, setState }) => {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: acceptedFiles => {\r\n      const imgFile = acceptedFiles.map(file =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file)\r\n        })\r\n      );\r\n      setState({ imgUrl: imgFile[0], isImgChange: true });\r\n    }\r\n  });\r\n\r\n  const params = {\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      type: \"bullets\",\r\n      clickable: true\r\n    },\r\n    observer: true,\r\n    spaceBetween: 30\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div {...getRootProps({ className: \"dropzone\" })}>\r\n          <input {...getInputProps()} />\r\n          {state.imgUrl === \"\" ? (\r\n            <img\r\n              src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n              alt=\"이미지 에러\"\r\n              align=\"center\"\r\n              heigth=\"100%\"\r\n              width=\"100%\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              {typeof state.imgUrl !== \"string\" ? (\r\n                <img\r\n                  src={state.imgUrl.url}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={state.imgUrl}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleFile\">File</Label>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n          <FormText color=\"muted\">\r\n            This is some placeholder block-level help text for the above input.\r\n            It's a bit lighter and easily wraps to a new line.\r\n          </FormText>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageModify;\r\n","import { useEffect } from \"react\";\r\nimport { useInfoApi, useImgApi } from \"../api/profileApi\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport refreshToken from \"../auth/refreshToken\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfoModify = (\r\n  setModifying,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n) => {\r\n  const { postInfo } = useInfoApi();\r\n\r\n  const [\r\n    {\r\n      data: infoResponse,\r\n      fulfilled: infoFulfilled,\r\n      pending: infoPending,\r\n      rejected: infoRejected,\r\n      error: infoError,\r\n    },\r\n    { run: postInfoApi },\r\n  ] = useRequest(postInfo);\r\n\r\n  const { postImg } = useImgApi();\r\n\r\n  const [\r\n    {\r\n      data: imgResponse,\r\n      fulfilled: imgFulfilled,\r\n      pending: imgPending,\r\n      rejected: imgRejected,\r\n      error: imgError,\r\n    },\r\n    { run: postImgApi },\r\n  ] = useRequest(postImg);\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (imgFulfilled && infoFulfilled) {\r\n      setImgState({\r\n        imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n        isImgChange: false,\r\n      });\r\n      setModifying();\r\n      //console.log(\"둘다 \");\r\n    }\r\n  }, [imgFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (!imgState.isImgChange && infoFulfilled) {\r\n      setModifying();\r\n      //console.log(\"인포메이션만 \");\r\n    }\r\n  }, [infoFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (infoRejected) {\r\n      if (infoError) {\r\n        alertAction.open(infoError.response.data.message);\r\n      }\r\n    }\r\n  }, [infoRejected]);\r\n\r\n  useEffect(() => {\r\n    if (imgRejected) {\r\n      if (imgError) {\r\n        alertAction.open(imgError.response.data.message);\r\n        console.log(imgError);\r\n      }\r\n    }\r\n  }, [imgRejected]);\r\n\r\n  return { postInfoApi, postImgApi };\r\n};\r\nconst useProfileImgModify = () => {};\r\n\r\nexport default useProfileInfoModify;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport ImageModify from \"../ProfileImage/ImageModify\";\r\nimport { useInfoApi, useImgApi } from \"../../../../hook/api/profileApi\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport useProfileInfoModify from \"../../../../hook/profile/useProfileInfoModify\";\r\n\r\nconst ProfileInfoModify = ({\r\n  setModifying,\r\n\r\n  info,\r\n  setInfo,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId\r\n}) => {\r\n  const { postInfoApi, postImgApi } = useProfileInfoModify(\r\n    setModifying,\r\n\r\n    imgState,\r\n    setImgState,\r\n\r\n    userId\r\n  );\r\n\r\n  const handleChange = e => {\r\n    // stack은 지금은 무조건 배열상태로 들어가게 임시방편함\r\n    if (e.target.name === \"stacks\") {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: [e.target.value]\r\n      });\r\n    }\r\n    // 나머지는 원래 방식대로\r\n    else {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n    console.log(info);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { grade, ...withOutGrade } = info;\r\n    postInfoApi(userId, withOutGrade);\r\n    if (imgState.isImgChange) {\r\n      postImgApi(userId, imgState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModify state={imgState} setState={setImgState} />\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Name</Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"userName\"\r\n            placeholder=\"name\"\r\n            value={info.userName}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Role</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"role\"\r\n            value={info.role}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEVELOPER\">DEVELOPER</option>\r\n            <option value=\"DESIGNER\">DESIGNER</option>\r\n            <option value=\"LEADER\">LEADER</option>\r\n            <option value=\"ETC\">ETC</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Stack</Label>\r\n          <Input\r\n            type=\"stack\"\r\n            name=\"stacks\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"stack\"\r\n            value={info.stacks}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Email Contact</Label>\r\n          <Input\r\n            type=\"contact\"\r\n            name=\"contact\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"contact\"\r\n            value={info.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Area</Label>\r\n          <Input\r\n            type=\"area\"\r\n            name=\"area\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"area\"\r\n            value={info.area}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">Introduction</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"introduction\"\r\n            id=\"introduction\"\r\n            value={info.introduction}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button onClick={handleSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoModify;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useAlert } from \"../../hook\";\r\n\r\nconst CenterModal = (props) => {\r\n  const { modalFlag, close } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modalFlag}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>{props.header}</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {props.children}\r\n        <ModalFooter>{props.footer}</ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AlertModal = (props) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={alertData.isOpen}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>알림</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={alertAction.close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {alertData.sentence}\r\n        {/* <ModalFooter>{props.footer}</ModalFooter> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CenterModal, AlertModal };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInputUI = withStyles((theme) => ({\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction BootstrapInput(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nfunction InputTemp(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nexport { BootstrapInput, InputTemp };\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport {\r\n  useDeadlineProjectListEffect,\r\n  useWantedPeopleListEffect,\r\n  usePeopleListState,\r\n  useProjectListState,\r\n  useRequest,\r\n} from \"../hook\";\r\nimport {\r\n  Button,\r\n  Layout,\r\n  Jumbotron,\r\n  SubtitleHeader,\r\n  ProjectBox,\r\n  PeopleBox,\r\n} from \"../components\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./main.css\";\r\n\r\nexport default function Root() {\r\n  const [project, projectAction] = useProjectListState();\r\n  const [projectListPromise, { run: getProjectList }] = useRequest(\r\n    projectAction.getDeadLineProjectList\r\n  );\r\n  useDeadlineProjectListEffect(\r\n    projectListPromise,\r\n    getProjectList,\r\n    projectAction.setProjectList,\r\n    projectAction.setPage\r\n  );\r\n\r\n  const [people, peopleAction] = usePeopleListState();\r\n  const [peopleListPromise, { run: getPeopleList }] = useRequest(\r\n    peopleAction.getWantedPeopleList\r\n  );\r\n  useWantedPeopleListEffect(\r\n    peopleListPromise,\r\n    getPeopleList,\r\n    peopleAction.setPeopleList,\r\n    peopleAction.setPage\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Jumbotron />\r\n        <SubtitleHeader>마감임박 프로젝트 </SubtitleHeader>\r\n        <Row xs=\"12\">\r\n          {project.projectList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"3\" key={index}>\r\n                <ProjectBox\r\n                  data={value}\r\n                  url={`/projectDetail/${value.projectId}`}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            id=\"pagination\"\r\n            count={project.totalPages}\r\n            onChange={(e, page) => {\r\n              getProjectList(page - 1);\r\n            }}\r\n          />\r\n        </div>\r\n        <SubtitleHeader> 프로젝트를 찾는 사람들 </SubtitleHeader>\r\n        <Row xs=\"12\">\r\n          {people.peopleList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"2\" key={index}>\r\n                <PeopleBox data={value} url={`/profile/${value.userId}`} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            id=\"pagination\"\r\n            count={people.page.totalPages}\r\n            onChange={(e, page) => {\r\n              getPeopleList(page - 1);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(1),\r\n    width: \"30ch\",\r\n  },\r\n}));\r\nexport function ProjectSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  stack,\r\n  setStack,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setStack(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, stack) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (stack !== \"\") params += `&stack=${stack}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"Seoul\">서울</MenuItem>\r\n              <MenuItem value=\"Gunggi\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"stack\"\r\n              value={stack}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                기술스택\r\n              </MenuItem>\r\n              <MenuItem value=\"ReactJS\">ReactJS</MenuItem>\r\n              <MenuItem value=\"SPRINGBOOT\">SPRINGBOOT</MenuItem>\r\n              <MenuItem value=\"PHP\">PHP</MenuItem>\r\n            </Select>\r\n            <FormHelperText>stack</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outlined\"\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button\r\n            style={{ height: \"auto\" }}\r\n            onClick={() => getPage(role, region, stack)}\r\n          >\r\n            search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function PeopleSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  grade,\r\n  setGrade,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setGrade(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, grade) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (grade !== \"\") params += `&grade=${grade}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"LEADER\">leader</MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"grade\"\r\n              value={grade}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                레벨\r\n              </MenuItem>\r\n              <MenuItem value=\"0\">0</MenuItem>\r\n              <MenuItem value=\"1\">1</MenuItem>\r\n              <MenuItem value=\"2\">2</MenuItem>\r\n            </Select>\r\n            <FormHelperText>grade</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"SEOUL\">서울</MenuItem>\r\n              <MenuItem value=\"GYEONGGI\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button onClick={() => getPage(role, region, grade)}>search</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  useProjectListState,\r\n  useProjectListEffect,\r\n  useRequest,\r\n} from \"../../hook\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, ProjectBox } from \"../../components\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { ProjectSort } from \"../../components/List/Sort\";\r\nimport { Button, Alert } from \"reactstrap\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function ProjectList() {\r\n  const [projectList, projectListAction] = useProjectListState();\r\n  const [\r\n    {\r\n      data: resProjectList,\r\n      fulfilled: getProjectListFulfilled,\r\n      pending: getProjectListPending,\r\n      rejected: getProjectListRejected,\r\n      error: getProjectListError,\r\n    },\r\n    { run: getProjectListApi },\r\n  ] = useRequest(projectListAction.getProjectList);\r\n  useProjectListEffect(\r\n    resProjectList,\r\n    getProjectListFulfilled,\r\n    getProjectListRejected,\r\n    getProjectListError,\r\n    getProjectListApi,\r\n    projectListAction.setProjectList,\r\n    projectListAction.setPage\r\n  );\r\n  const isToken = useSelector((state) => state.login.isToken);\r\n\r\n  return (\r\n    <Layout>\r\n      <hr />\r\n      <ProjectSort\r\n        role={projectList.role}\r\n        setRole={projectListAction.setRole}\r\n        region={projectList.region}\r\n        setRegion={projectListAction.setRegion}\r\n        stack={projectList.stack}\r\n        setStack={projectListAction.setStack}\r\n        search={projectList.search}\r\n        setSearch={projectListAction.setSearch}\r\n        getApi={getProjectListApi}\r\n      />\r\n\r\n      <hr />\r\n      {isToken && (\r\n        <Alert color=\"success\">\r\n          프로젝트 생성을 원하신다면 <Link to=\"/createProject\">여기</Link>를\r\n          눌러주세요.\r\n        </Alert>\r\n      )}\r\n\r\n      <Row xs=\"12\">\r\n        {projectList.projectList.map((value, index) => {\r\n          return (\r\n            <Col xs=\"3\" key={index}>\r\n              <ProjectBox\r\n                url={`/projectDetail/${value.projectId}`}\r\n                data={value}\r\n                // onClick={() => handleClickProject(projectId)}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <div id=\"pagination_div\">\r\n        <Pagination\r\n          id=\"pagination\"\r\n          count={projectList.page.totalPages}\r\n          onChange={(e, page) => {\r\n            let params = \"\";\r\n            if (projectList.role !== \"\") params += `&role=${projectList.role}`;\r\n            if (projectList.region !== \"\")\r\n              params += `&region=${projectList.region}`;\r\n            if (projectList.stack !== \"\")\r\n              params += `&stack=${projectList.stack}`;\r\n            getProjectListApi(page - 1, params);\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst projectDetail = {\r\n    projectName: \"\",\r\n    teamName: \"\",\r\n    endDate: \"2020-10-30T23:59:00\",\r\n    introduction: \"\",\r\n    state: 'RECRUTING',\r\n    projectField: \"\",\r\n    applyCanFile: true,\r\n    needMember: {\r\n        developer: 0,\r\n        designer: 0,\r\n        planner: 0,\r\n        etc: 0\r\n    },\r\n    questions: [],\r\n    currentMember: null,\r\n    memberList: null,\r\n    img: []\r\n}\r\n\r\nconst projectRedux = createSlice({\r\n    name: \"project\",\r\n    initialState: {\r\n        projectDetail,\r\n    },\r\n    reducers: {\r\n        setProject(state, action) {\r\n            state.projectDetail = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setProject } = projectRedux.actions;\r\nexport default projectRedux.reducer;\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  useProjectDetailState,\r\n  useProjectDetailEffect,\r\n  useRequest,\r\n  useProjectApplyState,\r\n  useProjectApplyEffect,\r\n  useProjectDetailApplyState,\r\n  useProjectDetailApplyEffect,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  IOSSwitch,\r\n  DropdownRole,\r\n  HalfDrawer,\r\n  CenterModal,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  FormControlLabel,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setProject } from \"../../reducers/project\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport \"./projectDetail.css\";\r\nconst ReactMarkdown = require(\"react-markdown\");\r\n\r\nexport default function ProjectDetail() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const [project, projectAction] = useProjectDetailState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(projectAction.fetchGetDetail);\r\n\r\n  useProjectDetailEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n    projectAction,\r\n    url[2]\r\n  );\r\n\r\n  const handleClickUpdate = () => {\r\n    const updateProject = {\r\n      img: [`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`],\r\n      ...project.project,\r\n    };\r\n    dispatch(setProject(updateProject));\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    projectAction.fetchDeleteProject(projectId);\r\n  };\r\n\r\n  console.log(project.apply);\r\n  return (\r\n    <Layout>\r\n      {getProjectPending ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            {project.check.reader ? (\r\n              <div id=\"button\">\r\n                <Link to={`/projectUpdate/${url[2]}`}>\r\n                  <Button onClick={handleClickUpdate}>수정하기</Button>\r\n                </Link>\r\n                <Button\r\n                  onClick={projectAction.openDelete}\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  color=\"danger\"\r\n                >\r\n                  삭제하기\r\n                </Button>\r\n                <CenterModal\r\n                  header=\"삭제하기\"\r\n                  modalFlag={project.check.delete}\r\n                  close={projectAction.closeDelete}\r\n                  footer={\r\n                    <div className=\"full_div\">\r\n                      <div id=\"button\">\r\n                        <Button color=\"danger\" onClick={handleClickDelete}>\r\n                          삭제하기\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div style={{ height: \"12px\" }} />\r\n                  <Typography variant=\"h6\">정말로 삭제하시겠습니까?</Typography>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </CenterModal>\r\n              </div>\r\n            ) : (\r\n              <div id=\"button\">\r\n                <Button onClick={projectAction.openApply}>지원서</Button>\r\n                <CenterModal\r\n                  header=\"지원하기\"\r\n                  modalFlag={project.check.applyModal}\r\n                  close={projectAction.closeApply}\r\n                >\r\n                  <ApplyProject\r\n                    questions={project.project.questions}\r\n                    projectId={projectId}\r\n                    applyApi={project.project._links}\r\n                    detailGet={getProjectFulfilled}\r\n                    close={projectAction.closeApply}\r\n                  />\r\n                </CenterModal>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <div className=\"half_div_left\">\r\n              <img\r\n                id=\"cover\"\r\n                src={`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`}\r\n                alt=\"temp\"\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              {/* <div id=\"tag_case\"> */}\r\n              <div>\r\n                <span id=\"tag\">{project.project.projectField}</span>\r\n              </div>\r\n              <Typography variant=\"h1\">\r\n                {project.project.projectName}\r\n              </Typography>\r\n              <Typography variant=\"h4\">{project.project.teamName}</Typography>\r\n              <Typography>마감일 : {project.project.endDate}</Typography>\r\n              <div id=\"list\">\r\n                <div className=\"half_div_left\">\r\n                  <List>\r\n                    <ListItem divider>\r\n                      <ListItemText primary=\"현재 인원\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.developer < 1}\r\n                    >\r\n                      <ListItemText primary=\"개발자\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.developer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.designer < 1}\r\n                    >\r\n                      <ListItemText primary=\"디자이너\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.designer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.currentMember.planner < 1}\r\n                    >\r\n                      <ListItemText primary=\"기획자\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.planner}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.currentMember.etc < 1}>\r\n                      <ListItemText primary=\"기타\" />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.currentMember.etc}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </List>\r\n                </div>\r\n                <div className=\"half_div_right\">\r\n                  <List>\r\n                    <ListItem divider>\r\n                      <ListItemText primary=\"모집 인원\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.needMember.developer < 1}\r\n                    >\r\n                      <ListItemText primary={`개발자`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.developer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem\r\n                      disabled={project.project.needMember.designer < 1}\r\n                    >\r\n                      <ListItemText primary={`디자이너`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.designer}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.needMember.planner < 1}>\r\n                      <ListItemText primary={`기획자`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.planner}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem disabled={project.project.needMember.etc < 1}>\r\n                      <ListItemText primary={`기타`} />\r\n                      <ListItemSecondaryAction>\r\n                        {project.project.needMember.etc}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </List>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>소개</div>\r\n          <ReactMarkdown source={project.project.introduction} />\r\n          {project.check.reader && (\r\n            <div>\r\n              <FormControlLabel\r\n                style={{ margin: \"0px -20px 0px 0px\", padding: \"0px\" }}\r\n                control={\r\n                  <IOSSwitch\r\n                    name=\"apply\"\r\n                    checked={project.check.apply}\r\n                    onChange={(e) =>\r\n                      projectAction.checkSwitch(e.target.name, e.target.checked)\r\n                    }\r\n                    value=\"apply\"\r\n                  />\r\n                }\r\n              />\r\n              {project.check.apply &&\r\n                (project.apply.length === 0 ? (\r\n                  <div>지원자가 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List\r\n                      dense\r\n                      style={{\r\n                        backgroundColor:\r\n                          project.apply[project.pagination.apply].state ===\r\n                          \"REJECT\"\r\n                            ? \"#eeeeee\"\r\n                            : project.apply[project.pagination.apply].state ===\r\n                              \"ACCEPT\"\r\n                            ? \"rgb(212, 237, 218, 0.3)\"\r\n                            : \"#ffffff\",\r\n                      }}\r\n                    >\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`이름 : ${\r\n                            project.apply[project.pagination.apply].userName\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`역할 : ${\r\n                            project.apply[project.pagination.apply].role\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                      <Button onClick={projectAction.openDetailApply}>\r\n                        상세보기\r\n                      </Button>\r\n                      <Button\r\n                        disabled={project.pagination.apply === 0}\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", -1)\r\n                        }\r\n                      >\r\n                        이전\r\n                      </Button>\r\n                      <Button\r\n                        disabled={\r\n                          project.apply.length - project.pagination.apply < 2\r\n                        }\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", 1)\r\n                        }\r\n                      >\r\n                        다음\r\n                      </Button>\r\n                    </List>\r\n                    <CenterModal\r\n                      header=\"지원자 상세 정보\"\r\n                      modalFlag={project.check.applyDetail}\r\n                      close={projectAction.closeDetailApply}\r\n                    >\r\n                      <ApplyDetailProject\r\n                        open={project.check.applyDetail}\r\n                        close={projectAction.closeDetailApply}\r\n                        applyApi={\r\n                          project.apply[project.pagination.apply]._links.self\r\n                            .href\r\n                        }\r\n                        applySet={projectAction.setApplyState}\r\n                        userId={project.apply[project.pagination.apply].userId}\r\n                        setPagination={() =>\r\n                          projectAction.clickPagination(\"apply\", 0)\r\n                        }\r\n                      />\r\n                    </CenterModal>\r\n                  </div>\r\n                ))}\r\n              <br />\r\n              <FormControlLabel\r\n                style={{ margin: \"0px -20px 0px 0px\", padding: \"0px\" }}\r\n                control={\r\n                  <IOSSwitch\r\n                    name=\"recruit\"\r\n                    checked={project.check.recruit}\r\n                    onChange={(e) =>\r\n                      projectAction.checkSwitch(e.target.name, e.target.checked)\r\n                    }\r\n                    value=\"recruit\"\r\n                  />\r\n                }\r\n              />\r\n              {project.check.recruit &&\r\n                (project.recruit.length === 0 ? (\r\n                  <div>요청이 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List dense>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`이름 : ${\r\n                            project.recruit[project.pagination.recruit].userName\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`역할 : ${\r\n                            project.recruit[project.pagination.recruit].role\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`자기소개 : ${\r\n                            project.recruit[project.pagination.recruit]\r\n                              .introduction\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={`상태 : ${\r\n                            project.recruit[project.pagination.recruit].state\r\n                          }`}\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                    <Button\r\n                      disabled={project.pagination.recruit === 0}\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", -1)\r\n                      }\r\n                    >\r\n                      이전\r\n                    </Button>\r\n                    <Button\r\n                      disabled={\r\n                        project.recruit.length - project.pagination.recruit < 2\r\n                      }\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", 1)\r\n                      }\r\n                    >\r\n                      다음\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst ApplyProject = (props) => {\r\n  const { questions, projectId, applyApi, detailGet, close } = props;\r\n  const [apply, applyAction] = useProjectApplyState(applyApi.apply.href);\r\n  const [applyRes, { run: postApply }] = useRequest(applyAction.fetchPostApply);\r\n  const [applyPutRes, { run: putApply }] = useRequest(\r\n    applyAction.fetchPutApply\r\n  );\r\n  const [applyGetRes, { run: getApply }] = useRequest(\r\n    applyAction.fetchGetApply\r\n  );\r\n\r\n  useProjectApplyEffect(\r\n    questions,\r\n    getApply,\r\n    apply,\r\n    applyAction,\r\n    applyRes,\r\n    applyGetRes,\r\n    applyPutRes,\r\n    detailGet,\r\n    applyApi.apply.href,\r\n    close\r\n  );\r\n\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {apply.apply.answers.map((a, i) => (\r\n        <div>\r\n          <Typography variant=\"h6\">\r\n            {i + 1}번 질문 : {questions[i]}\r\n          </Typography>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">답변</InputGroupAddon>\r\n            <Input\r\n              name=\"answer\"\r\n              onChange={(e) => applyAction.inputAnswer(e.target.value, i)}\r\n              value={a}\r\n            />\r\n          </InputGroup>\r\n          <div style={{ height: \"12px\" }} />\r\n        </div>\r\n      ))}\r\n      <Label for=\"exampleEmail\" style={{ marginBottom: \"0px\" }}>\r\n        자기 소개\r\n      </Label>\r\n      <BootstrapInput\r\n        multiline\r\n        name=\"introduction\"\r\n        onChange={(e) => applyAction.inputApply(e.target.name, e.target.value)}\r\n        value={apply.apply.introduction}\r\n        fullWidth\r\n      />\r\n      <div style={{ height: \"12px\" }} />\r\n      <DropdownRole\r\n        style={{ width: \"100%\" }}\r\n        dropdownCaret=\"역할 선택\"\r\n        action={applyAction.selectRole}\r\n        pick={apply.apply.role}\r\n      />\r\n      <div style={{ height: \"12px\" }} />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          {apply.applied ? (\r\n            <Button\r\n              onClick={() => {\r\n                putApply(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  projectId\r\n                );\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                postApply(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  projectId\r\n                );\r\n              }}\r\n            >\r\n              지원하기\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"12px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ApplyDetailProject = (props) => {\r\n  const { open, close, applyApi, applySet, userId, setPagination } = props;\r\n  const [apply, applyAction] = useProjectDetailApplyState(applyApi);\r\n  console.log(applyAction);\r\n  const [applyGetRes, { run: getApply }] = useRequest(\r\n    applyAction.fetchGetApply\r\n  );\r\n  const [applyPutRes, { run: putApply }] = useRequest(\r\n    applyAction.fetchPutApply\r\n  );\r\n  const [applyDeleteRes, { run: deleteApply }] = useRequest(\r\n    applyAction.fetchDeleteApply\r\n  );\r\n\r\n  useProjectDetailApplyEffect(\r\n    open,\r\n    getApply,\r\n    apply,\r\n    applyGetRes,\r\n    applyPutRes,\r\n    applyDeleteRes,\r\n    applySet,\r\n    userId,\r\n    close,\r\n    applyAction,\r\n    setPagination\r\n  );\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {apply.apply.answers.map((a, i) => (\r\n        <div>\r\n          <Typography variant=\"h6\">\r\n            {i + 1}번 질문 : {apply.apply.questions[i]}\r\n          </Typography>\r\n          <Typography variant=\"h6\">{a}</Typography>\r\n          <div style={{ height: \"12px\" }} />\r\n        </div>\r\n      ))}\r\n      <Label for=\"exampleEmail\" style={{ marginBottom: \"0px\" }}>\r\n        자기 소개\r\n      </Label>\r\n      <Typography variant=\"h6\">{apply.apply.introduction}</Typography>\r\n      <div style={{ height: \"12px\" }} />\r\n      <Typography variant=\"h6\">지원 분야 : {apply.apply.role}</Typography>\r\n      <div style={{ height: \"12px\" }} />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          <Button\r\n            onClick={() => {\r\n              putApply();\r\n            }}\r\n          >\r\n            수락\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              deleteApply();\r\n            }}\r\n          >\r\n            거절\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"12px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n<MuiDateTimePicker\r\n    name=\"endDate\"\r\n    value={project.endDate}\r\n    onChange={setStartDate}\r\n    format=\"yy.MM.dd HH:mm\"\r\n    placeholder=\"종료일\"\r\n    variant=\"dialog\"\r\n    disableUnderline\r\n    disableToolbar={false}\r\n    hideTabs\r\n    clearable\r\n    ampm\r\n    style={{\r\n        borderLeft: '1px solid #cdcecd',\r\n    }}\r\n/>\r\n</MuiPickersUtilsProvider> */\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport {\r\n  useProjectCreateState,\r\n  useProjectCreateEffect,\r\n  useRequest,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport tempimg from \"../../components/icon/move.gif\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\n\r\nexport default function ProjectCreate() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const [project, projectAction] = useProjectCreateState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: createProjectApi },\r\n  ] = useRequest(projectAction.fetchPostCreate);\r\n  const [\r\n    { fulfilled: getImgFulfilled, pending: getImgPending },\r\n    { run: createImgApi },\r\n  ] = useRequest(projectAction.fetchImg);\r\n  useProjectCreateEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    createImgApi,\r\n    project.img\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (getImgFulfilled) {\r\n      console.log(\"이미지업로드완료\");\r\n      const projectId = resProject.headers.location.split(\"/\");\r\n      history.push(`/projectDetail/${projectId[4]}`);\r\n    }\r\n  }, [getImgFulfilled]);\r\n\r\n  const handleClickCreate = () => {\r\n    createProjectApi(project.project);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {false ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button onClick={handleClickCreate}>Make Project</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={project.img} saveImg={projectAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <Label for=\"exampleEmail\">Project Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              value={project.project.projectName}\r\n              onChange={projectAction.inputProject}\r\n            />\r\n            <Label for=\"exampleEmail\">Team Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <Label for=\"exampleEmail\">Recruit People</Label>\r\n              <br />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Developer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"developer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.developer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Designer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"designer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.designer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Planner\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"planner\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.planner}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Etc\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"etc\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.etc}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <Label for=\"exampleEmail\">End Date</Label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={project.project.endDate}\r\n                  onChange={projectAction.inputDate}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableUnderline\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Label for=\"exampleEmail\">Role</Label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={projectAction.inputField}\r\n                pick={project.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Label for=\"exampleEmail\">Introduction</Label>\r\n            <BootstrapInput\r\n              multiline\r\n              type=\"name\"\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={project.project.introduction}\r\n              onChange={projectAction.inputProject}\r\n              fullWidth\r\n            />\r\n            <Label for=\"exampleEmail\">Questions</Label>\r\n            {project.project.questions.map((value, index) => {\r\n              const questionString = `Question ${index + 1}`;\r\n              return (\r\n                <div>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      {questionString}\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"question\"\r\n                      name=\"questions\"\r\n                      onChange={(e) =>\r\n                        projectAction.inputQuestion(e.target.value, index)\r\n                      }\r\n                      value={value}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        onClick={() => projectAction.deleteQuestion(index)}\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={projectAction.addQuestion}\r\n              >\r\n                Add Questions\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  useProjectUpdateState,\r\n  useRequest,\r\n  useProjectUpdateEffect,\r\n} from \"../../hook\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport MultiInput from \"@material-ui/core/Input\";\r\n\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nexport default function ProjectUpdate() {\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const [project, projectAction] = useProjectUpdateState();\r\n  const [\r\n    {\r\n      data: resProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: UpdateProjectApi },\r\n  ] = useRequest(projectAction.fetchPutUpdate);\r\n  const [\r\n    {\r\n      data: resImg,\r\n      fulfilled: getImgFulfilled,\r\n      pending: getImgPending,\r\n      rejected: getImgRejected,\r\n      error: getImgError,\r\n    },\r\n    { run: UpdateImgApi },\r\n  ] = useRequest(projectAction.fetchImg);\r\n  useProjectUpdateEffect(\r\n    resProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    UpdateImgApi,\r\n    project.img,\r\n    url[2]\r\n  );\r\n  const handleClickUpdate = () => {\r\n    const updateData = {\r\n      projectName: project.project.projectName,\r\n      teamName: project.project.teamName,\r\n      endDate: project.project.endDate,\r\n      introduction: project.project.introduction,\r\n      state: project.project.state,\r\n      projectField: project.project.projectField,\r\n      applyCanFile: project.project.applyCanFile,\r\n      needMember: {\r\n        developer: project.project.needMember.developer,\r\n        designer: project.project.needMember.designer,\r\n        planner: project.project.needMember.planner,\r\n        etc: project.project.needMember.etc,\r\n      },\r\n      questions: project.project.questions,\r\n    };\r\n    UpdateProjectApi(projectId, updateData);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {false ? (\r\n        <div>로딩중...</div>\r\n      ) : (\r\n        <div id=\"root\">\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button onClick={handleClickUpdate}>Update Project</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={project.img} saveImg={projectAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <Label for=\"exampleEmail\">Project Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.projectName}\r\n            />\r\n            <Label for=\"exampleEmail\">Team Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={projectAction.inputProject}\r\n              value={project.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <Label for=\"exampleEmail\">Recruit People</Label>\r\n              <br />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Developer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"developer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.developer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Designer\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"designer\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.designer}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Planner\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"planner\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.planner}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ height: \"12px\" }} />\r\n              <InputGroup>\r\n                <InputGroupAddon id=\"input-group-half\" addonType=\"prepend\">\r\n                  Etc\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"0\"\r\n                  min={0}\r\n                  max={100}\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  name=\"etc\"\r\n                  onChange={projectAction.inputProjectMember}\r\n                  value={project.project.needMember.etc}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <Label for=\"exampleEmail\">End Date</Label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={project.project.endDate}\r\n                  onChange={projectAction.inputDate}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableUnderline\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Label for=\"exampleEmail\">Role</Label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={projectAction.inputField}\r\n                pick={project.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Label for=\"exampleEmail\">Introduction</Label>\r\n            <BootstrapInput\r\n              multiline\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={project.project.introduction}\r\n              onChange={projectAction.inputProject}\r\n              fullWidth\r\n            />\r\n            <Label for=\"exampleEmail\">Questions</Label>\r\n            {project.project.questions.map((value, index) => {\r\n              const questionString = `Question ${index + 1}`;\r\n              return (\r\n                <div>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      {questionString}\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"question\"\r\n                      name=\"questions\"\r\n                      onChange={(e) =>\r\n                        projectAction.inputQuestion(e.target.value, index)\r\n                      }\r\n                      value={value}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        onClick={() => projectAction.deleteQuestion(index)}\r\n                      >\r\n                        delete\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  <div style={{ height: \"12px\" }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"full_div\">\r\n            <div id=\"button\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={projectAction.addQuestion}\r\n              >\r\n                Add Questions\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Layout } from \"../../components\";\r\nimport { useRequest } from \"../../hook\";\r\nimport { useRegisterApi } from \"../../hook/api/authApi\";\r\nimport { useRegisterEffect } from \"../../hook/auth/useRegister\";\r\nimport \"./Login.css\";\r\n\r\nconst Register = () => {\r\n  const [state, setState] = useState({\r\n    userId: \"\",\r\n    userEmail: \"\",\r\n    password: \"\",\r\n    name: \"\"\r\n  });\r\n\r\n  //1. api를 가져온다.\r\n  const { postRegister } = useRegisterApi();\r\n\r\n  //2. api와 상태변수들을 useRequest로 연동한다.\r\n  const [\r\n    {\r\n      data: resRegister,\r\n      fulfilled: RegisterFulfilled,\r\n      pending: RegisterPending,\r\n      rejected: RegisterRejected,\r\n      error: RegisterError\r\n    },\r\n    //여기서 postRegisterApi는 액션 생성 함수\r\n    { run: postRegisterApi }\r\n  ] = useRequest(postRegister);\r\n\r\n  //3.해당 hook에 상태변수들을 넣어준다.\r\n  useRegisterEffect(\r\n    resRegister,\r\n    RegisterFulfilled,\r\n    RegisterPending,\r\n    RegisterRejected,\r\n    RegisterError\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postRegisterApi(state);\r\n    setState({ userId: \"\", userEmail: \"\", password: \"\", name: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row xs=\"3\">\r\n          <Col></Col>\r\n          <Col className=\"loginBox\">\r\n            <h3 className=\"loginHeader\">Create your Account</h3>\r\n            <br />\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"id\">UserId</Label>\r\n                <Input\r\n                  type=\"id\"\r\n                  name=\"userId\"\r\n                  id=\"userId\"\r\n                  placeholder=\"userId\"\r\n                  value={state.userId}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"userEmail\"\r\n                  id=\"exampleEmail\"\r\n                  placeholder=\"email\"\r\n                  value={state.userEmail}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"examplePassword\"\r\n                  placeholder=\"password placeholder\"\r\n                  value={state.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"id\">Name</Label>\r\n                <Input\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"name\"\r\n                  value={state.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <div className=\"loginSubmit\">\r\n                <Button>Submit</Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function useRegisterApi() {\r\n  const postRegister = async (data) => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signup`,\r\n      data\r\n    );\r\n    console.log(res);\r\n    return res.data;\r\n  };\r\n  return { postRegister };\r\n}\r\n\r\nexport function useLoginApi() {\r\n  const postLogin = async (data) => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signin`,\r\n      data\r\n    );\r\n    // console.log(res);\r\n    return res.data;\r\n  };\r\n  return { postLogin };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"../\";\r\n\r\nexport function useRegisterEffect(data, fulfilled, pending, rejected, error) {\r\n  const history = useHistory();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      alertAction.open(\r\n        \"회원가입을 무사히 마쳤습니다,, \\n 가서 로그인해 인간아!!\"\r\n      );\r\n      history.push(\"/login\");\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        // console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useProfileProject = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getProjectApi,\r\n\r\n  setList,\r\n  hiding,\r\n\r\n  userId\r\n) => {\r\n  const check = useSelector(state => state.profile.isHideChange);\r\n\r\n  // hide 변경사항이 있으면 다시 get요청\r\n  useEffect(() => {\r\n    if (check) {\r\n      getProjectApi(userId);\r\n    }\r\n  }, [check, userId]);\r\n\r\n  // 요청 성공시\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProject;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst profileRedux = createSlice({\r\n  name: \"hide\",\r\n  initialState: {\r\n    isHideChange: true\r\n  },\r\n  reducers: {\r\n    setHideChange(state, action) {\r\n      state.isHideChange = action.payload.isHideChange;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setHideChange } = profileRedux.actions;\r\nexport default profileRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useProfileProjectModify = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getHideProjectApi,\r\n\r\n  resHideProject,\r\n  hideProjectFulfilled,\r\n  hideProjectRejected,\r\n  hideProjectError,\r\n\r\n  resDisplayProject,\r\n  displayProjectFulfilled,\r\n  displayProjectRejected,\r\n  displayProjectError,\r\n\r\n  userId,\r\n\r\n  list,\r\n  setList,\r\n\r\n  hideList,\r\n  setHideList\r\n) => {\r\n  // 처음 로딩 시 숨겨진 프로젝트 목록 불러오기\r\n  useEffect(() => {\r\n    getHideProjectApi(userId);\r\n  }, []);\r\n\r\n  // 불러오기 성공시 , 불러온 내부에 프로젝트 데이터가 있으면 숨김 state에 저장\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setHideList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  // 숨기기 요청 성공시\r\n  useEffect(() => {\r\n    if (hideProjectFulfilled) {\r\n      let moveData = {};\r\n      // 일반 state list에서 선택한 project 제거\r\n      setList(\r\n        list.filter(a => {\r\n          if (a.projectId === resHideProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n\r\n      // 숨김 state list에서 위에서 선택된 project 추가\r\n      setHideList(hideList => {\r\n        const newList = hideList.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [hideProjectFulfilled]);\r\n\r\n  // 보여주기 요청 성공시\r\n  useEffect(() => {\r\n    if (displayProjectFulfilled) {\r\n      let moveData = {};\r\n      // 숨김 state list에서 선택한 project 제거\r\n      setHideList(\r\n        hideList.filter(a => {\r\n          if (a.projectId === resDisplayProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n      // 일반 state list에 선택된 프로젝트 추가\r\n      setList(list => {\r\n        const newList = list.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [displayProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProjectModify;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport {\r\n  usePlanProjectApi,\r\n  useHideProjectApi,\r\n} from \"../../../../hook/api/profileApi\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyPlanProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = usePlanProjectApi();\r\n  const { hideProject, displayProject } = useHideProjectApi();\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getHideProjectApi },\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError,\r\n    },\r\n    { run: hideProjectApi },\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError,\r\n    },\r\n    { run: displayProjectApi },\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList\r\n  );\r\n\r\n  const handleHide = (id) => {\r\n    hideProjectApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = (id) => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyPlanProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { useRunningProjectApi } from \"../../../../hook/api/profileApi\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyRunningProjects from \"./ModifyPlanProjects\";\r\n\r\nconst RunningProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n  const { getProject } = useRunningProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyRunningProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunningProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport {\r\n  useEndedProjectApi,\r\n  useHideProjectApi,\r\n} from \"../../../../hook/api/profileApi\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyEndedProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = useEndedProjectApi();\r\n  const { hideProject, displayProject } = useHideProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getHideProjectApi },\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError,\r\n    },\r\n    { run: hideProjectApi },\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError,\r\n    },\r\n    { run: displayProjectApi },\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList\r\n  );\r\n\r\n  const handleHide = (id) => {\r\n    hideProjectApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = (id) => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyEndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { useEndedProjectApi } from \"../../../../hook/api/profileApi\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"./profileProject.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyEndedProjects from \"./ModifyEndedProjects\";\r\n\r\nconst EndedProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = useEndedProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyEndedProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { usePlanProjectApi } from \"../../../../hook/api/profileApi\";\r\n// 잠시 ended 훅을 공유해서 써보자\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyPlanProjects from \"./ModifyPlanProjects\";\r\n\r\nconst PlanProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = usePlanProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyPlanProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanProjects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useAlert from \"../useAlert\";\r\n\r\nconst useProfileRecruit = (\r\n  getProjectData,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjecsError,\r\n  getProjectApi,\r\n\r\n  postRecruitData,\r\n  postRecruitFulfilled,\r\n  postRecruitRejected,\r\n  postRecruitError,\r\n\r\n  toggleNested,\r\n  setNestedMessage\r\n) => {\r\n  const [plannedProjects, setPlannedProjects] = useState([]);\r\n  const myId = useSelector(state => state.login.userId);\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (myId) {\r\n      getProjectApi(myId);\r\n    }\r\n  }, [myId]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      // console.log(getProjectData);\r\n      setPlannedProjects(getProjectData);\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectRejected) {\r\n      if (getProjecsError) {\r\n        alertAction.open(getProjecsError.response.data.message);\r\n        console.log(getProjecsError);\r\n      }\r\n    }\r\n  }, [getProjectRejected]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitFulfilled) {\r\n      setNestedMessage({\r\n        status: true,\r\n        message: \"영입 메시지를 성공적으로 전달했습니다!\"\r\n      });\r\n      toggleNested();\r\n    }\r\n  }, [postRecruitFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitRejected) {\r\n      if (postRecruitError) {\r\n        console.log(postRecruitError);\r\n        setNestedMessage({\r\n          status: false,\r\n          message: \"오류가 발생했습니다. 다시 시도해주세요.\"\r\n        });\r\n        toggleNested();\r\n      }\r\n    }\r\n  }, [postRecruitRejected]);\r\n  return { plannedProjects };\r\n};\r\n\r\nexport default useProfileRecruit;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport {\r\n  usePlanProjectApi,\r\n  useSendRecruitPeopleApi\r\n} from \"../../../hook/api/profileApi\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Profile.css\";\r\nimport { useRequest } from \"../../../hook\";\r\nimport useProfileRecruit from \"../../../hook/profile/useProfileRecruit\";\r\n\r\nconst RecruitModal = ({ modal, toggle, userId }) => {\r\n  // 내부 State\r\n  const [recruitState, setRecruitState] = useState({\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectId: \"\"\r\n  });\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n  const [nestedMessage, setNestedMessage] = useState({\r\n    status: false,\r\n    message: \"\"\r\n  });\r\n\r\n  // 내부 모달 띄우기\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n\r\n  // Recruit 요청 실패시, 내부 모달창만 닫기 + 내부 state 유지\r\n  // Recruit 요청 성공시, 모든 모달창 닫기 + 내부 state 초기화\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    if (nestedMessage.status) {\r\n      setCloseAll(true);\r\n      setRecruitState({\r\n        introduction: \"\",\r\n        role: \"\",\r\n        projectId: \"\"\r\n      });\r\n    } else {\r\n      setCloseAll(false);\r\n    }\r\n  };\r\n\r\n  const { getAllPlannedProject } = usePlanProjectApi();\r\n  const { postRecruit } = useSendRecruitPeopleApi();\r\n\r\n  const [\r\n    {\r\n      data: getProjectData,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError\r\n    },\r\n    { run: getProjectApi }\r\n  ] = useRequest(getAllPlannedProject);\r\n\r\n  const [\r\n    {\r\n      data: postRecruitData,\r\n      fulfilled: postRecruitFulfilled,\r\n      pending: postRecruitPending,\r\n      rejected: postRecruitRejected,\r\n      error: postRecruitError\r\n    },\r\n    { run: postRecruitApi }\r\n  ] = useRequest(postRecruit);\r\n\r\n  const { plannedProjects } = useProfileRecruit(\r\n    getProjectData,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    postRecruitData,\r\n    postRecruitFulfilled,\r\n    postRecruitRejected,\r\n    postRecruitError,\r\n\r\n    toggleNested,\r\n    setNestedMessage\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setRecruitState({\r\n      ...recruitState,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    postRecruitApi(userId, recruitState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>프로젝트 선택</InputLabel>\r\n          <Select\r\n            value={recruitState.projectId}\r\n            name=\"projectId\"\r\n            onChange={handleChange}\r\n          >\r\n            {plannedProjects &&\r\n              plannedProjects.map((pj, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={pj.projectId}>\r\n                    {pj.projectName}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>제안할 역할</InputLabel>\r\n          <Select value={recruitState.role} name=\"role\" onChange={handleChange}>\r\n            <MenuItem value={\"DEVELOPER\"}>DEVELOPER</MenuItem>\r\n            <MenuItem value={\"DESIGNER\"}>DESIGNER</MenuItem>\r\n            <MenuItem value={\"LEADER\"}>LEADER</MenuItem>\r\n            <MenuItem value={\"ETC\"}>ETC</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n\r\n        <TextField\r\n          label=\"영입 제안 메시지를 입력하세요.\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          name=\"introduction\"\r\n          value={recruitState.introduction}\r\n          onChange={handleChange}\r\n        />\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleSubmit}>\r\n            Send\r\n          </Button>\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalBody>{nestedMessage.message}</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecruitModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useInvitationListApi } from \"../api/profileApi\";\r\nimport { useInvitationDetailApi } from \"../api/profileApi\";\r\n\r\nexport const useInvitationEffect = userId => {\r\n  const [invitationList, setInvitationList] = useState([]);\r\n  const [noList, setNoList] = useState({ isError: false, errorMessage: \"\" });\r\n\r\n  const noticeNoList = message => {\r\n    setNoList({\r\n      isError: true,\r\n      errorMessage: message\r\n    });\r\n  };\r\n\r\n  const { getInvitationList } = useInvitationListApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationListApi }\r\n  ] = useRequest(getInvitationList);\r\n\r\n  useEffect(() => {\r\n    getInvitationListApi(userId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // 데이터가 있을 때\r\n      if (\"_embedded\" in data) {\r\n        setInvitationList(data._embedded.recruitDtoList);\r\n      }\r\n      // 데이터가 없을 때\r\n      else {\r\n        noticeNoList(\"초대 요청이 없습니다.\");\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error && error.response.data.error === \"105\") {\r\n        console.log(\"rej\");\r\n        noticeNoList(error.response.data.message);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  return { pending, invitationList, noList };\r\n};\r\n\r\nexport const useInvitationDetailEffect = (userId, pid, toggleNested) => {\r\n  const [invitaionDetail, setInvitaionDetail] = useState({\r\n    userName: \"\",\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectName: \"\",\r\n    state: \"\"\r\n  });\r\n  const [activityName, setActivityName] = useState(\"\");\r\n\r\n  const handleAccept = () => {\r\n    putInvitationAcceptApi(userId, pid);\r\n  };\r\n\r\n  const handleReject = () => {\r\n    deleteInvitationRejectApi(userId, pid);\r\n  };\r\n\r\n  const {\r\n    getInvitationDetail,\r\n    putInvitationAccept,\r\n    deleteInvitationReject\r\n  } = useInvitationDetailApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationDetailApi }\r\n  ] = useRequest(getInvitationDetail);\r\n\r\n  const [\r\n    {\r\n      data: putData,\r\n      error: putError,\r\n      pending: putPending,\r\n      fulfilled: putFulfilled,\r\n      reject: putRejected\r\n    },\r\n    { run: putInvitationAcceptApi }\r\n  ] = useRequest(putInvitationAccept);\r\n\r\n  const [\r\n    {\r\n      data: deleteData,\r\n      error: deleteError,\r\n      pending: deletePending,\r\n      fulfilled: deleteFulfilled,\r\n      reject: deleteRejected\r\n    },\r\n    { run: deleteInvitationRejectApi }\r\n  ] = useRequest(deleteInvitationReject);\r\n\r\n  useEffect(() => {\r\n    getInvitationDetailApi(userId, pid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInvitaionDetail({\r\n        userName: data.userName,\r\n        introduction: data.introduction,\r\n        projectName: data.projectName,\r\n        role: data.role,\r\n        state: data.state\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (putFulfilled) {\r\n      setActivityName(\"수락\");\r\n      toggleNested();\r\n    }\r\n  }, [putFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (deleteFulfilled) {\r\n      setActivityName(\"거절\");\r\n      toggleNested();\r\n    }\r\n  }, [deleteFulfilled]);\r\n\r\n  return [\r\n    {\r\n      invitaionDetail,\r\n      activityName\r\n    },\r\n    {\r\n      handleAccept,\r\n      handleReject\r\n    }\r\n  ];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  CardText\r\n} from \"reactstrap\";\r\nimport { useInvitationDetailEffect } from \"../../../../hook/profile/useInvitation\";\r\n\r\nconst DetailModal = ({ pid, userId, modal, toggle }) => {\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(true);\r\n  };\r\n\r\n  const [\r\n    { invitaionDetail, activityName },\r\n    { handleAccept, handleReject }\r\n  ] = useInvitationDetailEffect(userId, pid, toggleNested);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>{invitaionDetail.projectName}</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <Row xs=\"2\">\r\n            <Col>\r\n              <div>\r\n                <Badge color=\"info\" pill>\r\n                  {invitaionDetail.role}\r\n                </Badge>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <p> status : {invitaionDetail.state}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card body style={{ height: \"200px\" }}>\r\n            <CardText>{invitaionDetail.introduction}</CardText>\r\n          </Card>\r\n          <div> {invitaionDetail.userName}</div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {invitaionDetail.state === \"READ\" && (\r\n            <>\r\n              <Button color=\"primary\" onClick={handleAccept}>\r\n                Accept\r\n              </Button>\r\n              <Button color=\"danger\" onClick={handleReject}>\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalHeader>Nested Modal title</ModalHeader>\r\n            <ModalBody>{activityName}이 완료되었습니다.</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, CardTitle, CardText, Row, Col, Badge } from \"reactstrap\";\r\nimport DetailModal from \"./DetailModal\";\r\nconst InvitationBox = ({ data, userId }) => {\r\n  const [detailModal, setDetailModal] = useState(false);\r\n  const detailModalToggle = () => {\r\n    setDetailModal(!detailModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card body onClick={detailModalToggle}>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"8\">\r\n              <CardTitle>{data.projectName}</CardTitle>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Badge color=\"info\" pill>\r\n                {data.role}\r\n              </Badge>\r\n            </Col>\r\n          </Row>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"9\">\r\n              <CardText>{data.introduction}</CardText>\r\n            </Col>\r\n\r\n            <Col>\r\n              <CardText>{data.userName}</CardText>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        {detailModal && (\r\n          <DetailModal\r\n            pid={data.projectId}\r\n            userId={userId}\r\n            modal={detailModal}\r\n            toggle={detailModalToggle}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvitationBox;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useInvitationEffect } from \"../../../../hook/profile/useInvitation\";\r\nimport InvitationBox from \"./InvitationBox\";\r\nimport \"./Invitation.css\";\r\n\r\nconst InvitationModal = ({ modal, toggle, userId }) => {\r\n  const { pending, invitationList, noList } = useInvitationEffect(userId);\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> Invitations </ModalHeader>\r\n        <ModalBody>\r\n          {pending ? (\r\n            <div>로딩중...</div>\r\n          ) : noList.isError ? (\r\n            <div>{noList.errorMessage}</div>\r\n          ) : (\r\n            <div className=\"invitation_list\">\r\n              {invitationList.map((invitation, index) => {\r\n                return (\r\n                  <InvitationBox\r\n                    key={index}\r\n                    data={invitation}\r\n                    userId={userId}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvitationModal;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Layout, ProfileInfo, ProfileInfoModify } from \"../components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport RunningProjects from \"../components/People/Profile/ProfileProjects/RunningProjects\";\r\nimport EndedProjects from \"../components/People/Profile/ProfileProjects/EndedProjects\";\r\nimport PlanProjects from \"../components/People/Profile/ProfileProjects/PlanProjects\";\r\nimport RecruitModal from \"../components/People/Profile/RecruitModal\";\r\nimport InvitationModal from \"../components/People/Profile/Invitation/InvitationModal\";\r\n\r\nconst Profile = () => {\r\n  // url에서 userId 추출\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const userId = url[2];\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  // 컴포넌트 이동을 다룰 변수\r\n  const [modifying, setModifying] = useState(false);\r\n\r\n  // modify창 열고 닫을 토글\r\n  const modifyToggle = () => {\r\n    setModifying(!modifying);\r\n  };\r\n\r\n  const [invitationModal, setInvitationModal] = useState(false);\r\n\r\n  const invitationToggle = () => {\r\n    setInvitationModal(!invitationModal);\r\n  };\r\n\r\n  const [info, setInfo] = useState({\r\n    userName: \"\",\r\n    role: \"\",\r\n    stacks: [\"\"],\r\n    contact: \"\",\r\n    area: \"\",\r\n    grade: 0,\r\n    introduction: \"\"\r\n  });\r\n\r\n  const [imgState, setImgState] = useState({\r\n    imgUrl: \"\",\r\n    isImgChange: false\r\n  });\r\n\r\n  // Recruit modal\r\n  const [modal, setModal] = useState(false);\r\n  const recruitToggle = () => setModal(!modal);\r\n  // console.log(modal);\r\n\r\n  // 우측 탭 상태변수\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  // 탭 토글\r\n  const tabToggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <br />\r\n      <Row xs=\"4\">\r\n        <Col>\r\n          {modifying ? (\r\n            <ProfileInfoModify\r\n              setModifying={modifyToggle}\r\n              info={info}\r\n              setInfo={setInfo}\r\n              imgState={imgState}\r\n              setImgState={setImgState}\r\n              userId={userId}\r\n            />\r\n          ) : (\r\n            <>\r\n              <ProfileInfo\r\n                setModifying={modifyToggle}\r\n                info={info}\r\n                setInfo={setInfo}\r\n                imgState={imgState}\r\n                setImgState={setImgState}\r\n                userId={userId}\r\n              />\r\n\r\n              {myId &&\r\n                (userId === myId ? (\r\n                  <>\r\n                    <Button id=\"modify-button\" onClick={modifyToggle}>\r\n                      Modify\r\n                    </Button>\r\n                    <Button\r\n                      id=\"see-invitation-button\"\r\n                      onClick={invitationToggle}\r\n                    >\r\n                      See Invitations\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Button onClick={recruitToggle}> recruit </Button>\r\n                  </>\r\n                ))}\r\n              {modal && (\r\n                <RecruitModal\r\n                  modal={modal}\r\n                  toggle={recruitToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n              {invitationModal && (\r\n                <InvitationModal\r\n                  modal={invitationModal}\r\n                  toggle={invitationToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs=\"9\">\r\n          <div>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"1\");\r\n                  }}\r\n                >\r\n                  Ended Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"2\");\r\n                  }}\r\n                >\r\n                  Running Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"3\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"3\");\r\n                  }}\r\n                >\r\n                  Plan Projects\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <EndedProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"2\">\r\n                <RunningProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"3\">\r\n                <PlanProjects userId={userId} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Layout } from \"../../components\";\r\nimport { useLoginApi } from \"../../hook/api/authApi\";\r\nimport { useLoginEffect } from \"../../hook/auth/useLogin\";\r\nimport { useRequest, useMove } from \"../../hook\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./Login.css\";\r\nconst Login = () => {\r\n  const isToken = useSelector(state => state.login.isToken);\r\n\r\n  const { postLogin } = useLoginApi();\r\n\r\n  const [\r\n    {\r\n      data: resLogin,\r\n      fulfilled: LoginFulfilled,\r\n      pending: LoginPending,\r\n      rejected: LoginRejected,\r\n      error: LoginError\r\n    },\r\n    { run: postLoginApi }\r\n  ] = useRequest(postLogin);\r\n\r\n  const [state, setState] = useLoginEffect(\r\n    resLogin,\r\n    LoginFulfilled,\r\n    LoginPending,\r\n    LoginRejected,\r\n    LoginError\r\n  );\r\n\r\n  useMove(isToken && LoginFulfilled, \"\");\r\n\r\n  const handleChange = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postLoginApi(state);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row xs=\"3\">\r\n          <Col></Col>\r\n\r\n          <Col className=\"loginBox\">\r\n            <h1 className=\"loginHeader\">Login</h1>\r\n            <br />\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"id\">UserId</Label>\r\n                <Input\r\n                  type=\"id\"\r\n                  name=\"userId\"\r\n                  id=\"userId\"\r\n                  placeholder=\"userId\"\r\n                  value={state.userId}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"examplePassword\"\r\n                  placeholder=\"password placeholder\"\r\n                  value={state.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <br />\r\n              <div className=\"loginSubmit\">\r\n                <Button>Submit</Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../reducers/login\";\r\nimport { useAlert } from \"../\";\r\nexport function useLoginEffect(data, fulfilled, pending, rejected, error) {\r\n  // 로그인 정보 state\r\n  const [state, setState] = useState({\r\n    userId: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [alertData, alertAction] = useAlert();\r\n  // 로그인 성공 시 useEffect\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // response에서 토큰 추출\r\n      const accessToken = data.accessToken;\r\n      const refreshToken = data.refreshToken;\r\n\r\n      // 세션스토리지에 아이디와 토큰 저장\r\n      window.sessionStorage.setItem(\"id\", state.userId);\r\n      window.sessionStorage.setItem(\"accessToken\", accessToken);\r\n      window.sessionStorage.setItem(\"refreshToken\", refreshToken);\r\n      alertAction.open(\"로그인 성공\");\r\n\r\n      // 리덕스에 디스패치\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: state.userId,\r\n      };\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // 로그인 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        console.log(error.response.a);\r\n        // 실패 이유 알림\r\n        alertAction.open(error.response.data.message);\r\n\r\n        // 실패한 아이디는 내버려두고, 비밀번호만 초기화\r\n        setState({\r\n          ...state,\r\n          password: \"\",\r\n        });\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // login page에서 input값 관리에 사용할 수 있게 로그인 정보 state 리턴\r\n  return [state, setState];\r\n}\r\n\r\n// 세션 스토리지에 아이디와 토큰이 있을 때, 리덕스에 토큰유무와 아이디를 저장\r\n// 레이아웃 바에서 유저아이디를 띄우기 위함\r\nexport function useLoginAuth() {\r\n  const dispatch = useDispatch();\r\n\r\n  // 새로고침시 (최상단 컴포넌트 app이 다시 그려질 시)만 동작\r\n  useEffect(() => {\r\n    // 세션에서 값 받아옴\r\n    let test = null;\r\n    test = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n\r\n    // null값이 아니면\r\n    if (test !== null) {\r\n      // payload 만들어서\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: id,\r\n      };\r\n\r\n      // 액션 디스패치\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, []);\r\n}\r\n// export function useLogoutAuth(logout) {\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     // 세션에서 값 받아옴\r\n\r\n//     let test = window.sessionStorage.getItem(\"accessToken\");\r\n//     const id = window.sessionStorage.getItem(\"id\");\r\n\r\n//     // null값이 아니면\r\n//     if (test === null) {\r\n//       // payload 만들어서\r\n//       const reduxData = {\r\n//         isToken: false,\r\n//         userId: null\r\n//       };\r\n\r\n//       // 액션 디스패치\r\n//       dispatch(setToken(reduxData));\r\n//     }\r\n//   }, [logout]);\r\n// }\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function useMove(condition, destination) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (condition) history.push(`./${destination}`);\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      history.push(`./${destination}`);\r\n    }\r\n  }, [condition])\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { usePeopleListState, usePeopleListEffect, useRequest } from \"../hook\";\r\nimport PeopleBox from \"../components/People/PeopleBox\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { PeopleSort } from \"../components/List/Sort\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Layout } from \"../components\";\r\n\r\nexport default function PeopleList() {\r\n  const [peopleList, peopleListAction] = usePeopleListState();\r\n  const [\r\n    {\r\n      data: resPeopleList,\r\n      fulfilled: getPeopleListFulfilled,\r\n      pending: getPeopleListPending,\r\n      rejected: getPeopleListRejected,\r\n      error: getPeopleListError,\r\n    },\r\n    { run: getPeopleListApi },\r\n  ] = useRequest(peopleListAction.getPeopleList);\r\n  usePeopleListEffect(\r\n    resPeopleList,\r\n    getPeopleListFulfilled,\r\n    getPeopleListRejected,\r\n    getPeopleListError,\r\n    getPeopleListApi,\r\n    peopleListAction.setPeopleList,\r\n    peopleListAction.setPage\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <hr />\r\n      <PeopleSort\r\n        role={peopleList.role}\r\n        setRole={peopleList.setRole}\r\n        grade={peopleList.grade}\r\n        setGrade={peopleList.setGrade}\r\n        region={peopleList.region}\r\n        setRegion={peopleList.setRegion}\r\n        search={peopleList.search}\r\n        setSearch={peopleList.setSearch}\r\n        getApi={getPeopleListApi}\r\n      />\r\n      <hr />\r\n\r\n      <Row xs=\"12\">\r\n        {peopleList.peopleList.length !== 0 &&\r\n          peopleList.peopleList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"2\" key={index}>\r\n                <PeopleBox url={`/profile/${value.userId}`} data={value} />\r\n              </Col>\r\n            );\r\n          })}\r\n      </Row>\r\n      <div id=\"pagination_div\">\r\n        <Pagination\r\n          id=\"pagination\"\r\n          count={peopleList.page.totalPages}\r\n          onChange={(e, page) => {\r\n            let params = \"\";\r\n            if (peopleList.role !== \"\") params += `&role=${peopleList.role}`;\r\n            if (peopleList.grade !== \"\") params += `&grade=${peopleList.grade}`;\r\n            if (peopleList.region !== \"\")\r\n              params += `&region=${peopleList.region}`;\r\n            getPeopleListApi(page - 1, params);\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  Root,\r\n  ProjectList,\r\n  Profile,\r\n  Register,\r\n  Login,\r\n  ProjectDetail,\r\n  ProjectCreate,\r\n  ProjectUpdate,\r\n  PeopleList,\r\n} from \"./pages\";\r\nimport { AlertModal } from \"./components\";\r\nimport { useLoginAuth } from \"./hook/auth/useLogin\";\r\n\r\nfunction App() {\r\n  useLoginAuth();\r\n  return (\r\n    <Router basename={\"/egluu\"}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Root} />\r\n        <Route path=\"/projects\" component={ProjectList} />\r\n        <Route path=\"/peoples\" component={PeopleList} />\r\n        <Route path=\"/createProject\" component={ProjectCreate} />\r\n        <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n        <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/profile/:userId\" component={Profile} />\r\n      </Switch>\r\n      <AlertModal />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport temporaryRedux from \"./temporary\";\r\nimport loginRedux from \"./login\";\r\nimport profileRedux from \"./profile\";\r\nimport projectRedux from \"./project\";\r\nimport alertRedux from \"./alert\";\r\n\r\nexport default combineReducers({\r\n  temproray: temporaryRedux,\r\n  login: loginRedux,\r\n  profile: profileRedux,\r\n  project: projectRedux,\r\n  alert: alertRedux,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}