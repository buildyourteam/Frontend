{"version":3,"sources":["components/icon/baseImg.png","reducers/login.js","hook/useHook.js","hook/useRequest.ts","hook/usePageMove.js","hook/api/authApi.ts","hook/api/peopleApi.ts","hook/api/profileApi.ts","hook/auth/useRegister.ts","reducers/alert.ts","hook/useAlert.ts","hook/projectTs/useProjectListTs.ts","hook/projectTs/useProjectDetailTs.ts","hook/projectTs/useProjectApplyTs.ts","hook/projectTs/useProjectUpdateTs.ts","hook/projectTs/useProjectCreateTs.ts","components/Layout.js","components/Project/ProjectBox.js","hook/profile/useImage.js","components/People/PeopleBox.js","components/Switch/switch.js","components/Image/inputImage.jsx","components/Dropdown/dropdown.jsx","components/Drawer/drawer.jsx","hook/profile/useProfileInfo.js","components/People/Profile/ProfileInfo/ProfileInfo.js","components/People/Profile/ProfileImage/ImageModify.js","hook/profile/useProfileInfoModify.js","components/People/Profile/ProfileInfo/ProfileInfoModify.js","components/Modal/Modal.js","components/Input/Input.jsx","hook/peopleTs/usePeopleListTs.ts","pages/rootTs.tsx","components/List/Sort.js","pages/project/projectListTs.tsx","reducers/project.js","pages/project/projectDetailTs.tsx","hook/useImage.tsx","pages/project/createProjectTs.tsx","pages/project/updateProjectTs.tsx","pages/auth/RegisterTs.tsx","hook/profile/useProfileProject.js","reducers/profile.js","hook/profile/useProfileProjectModify.js","components/People/Profile/ProfileProjects/ModifyPlanProjects.js","components/People/Profile/ProfileProjects/RunningProjects.js","components/People/Profile/ProfileProjects/ModifyEndedProjects.js","components/People/Profile/ProfileProjects/EndedProjects.js","components/People/Profile/ProfileProjects/PlanProjects.js","hook/profile/useProfileRecruit.js","components/People/Profile/RecruitModal.js","hook/profile/useInvitation.js","components/People/Profile/Invitation/DetailModal.js","components/People/Profile/Invitation/InvitationBox.js","components/People/Profile/Invitation/InvitationModal.js","pages/Profile.jsx","pages/auth/LoginTs.tsx","hook/auth/useLogin.ts","pages/PeopleList.js","App.js","serviceWorker.js","reducers/temporary.js","reducers/index.ts","index.js"],"names":["module","exports","loginRedux","createSlice","name","initialState","isToken","userId","reducers","setToken","state","action","payload","actions","require","reducer","type","error","pending","fulfilled","rejected","data","useRequest","asyncTask","options","useReducer","dispatch","run","a","useMove","condition","destination","history","useHistory","useEffect","push","loginApi","postLogin","axios","post","process","res","refreshToken","token","window","sessionStorage","getItem","setItem","accessToken","peopleListApi","getPeopleList","pageNumber","params","get","getWantedPeopleList","infoApi","getInfo","postInfo","put","headers","Authorization","catch","response","imgApi","getImg","postImg","image","FormData","append","imgUrl","endedProjectApi","getProject","getHideProject","planProjectApi","getAllPlannedProject","myId","header","res2","totalRes","page","totalElements","concat","_embedded","projectList","hideProjectApi","hideProject","projectId","delete","displayProject","useRegisterEffect","alertAction","useAlert","registerPromiseState","postRegisterFetch","open","message","loading","onFinish","values","console","log","onFinishFailed","errorInfo","alertRedux","isOpen","sentence","openAlert","closeAlert","useDispatch","useSelector","alert","alertState","close","useProjectListStateTs","useState","setProjectList","number","size","totalPages","setPage","role","setRole","region","setRegion","stack","setStack","search","setSearch","getProjectList","sort","getDeadLineProjectList","projectListPromise","getProjectListApi","projectPage","DeadLineProjectListPromise","projectAction","getDeadLineProjectListApi","projectDetail","projectName","teamName","endDate","description","status","projectField","applyCanFile","questions","introduction","needMember","developer","designer","planner","etc","currentMember","_links","self","href","apply","projectApply","answers","userName","Layout","children","login","profileUrl","setIsOpen","Navbar","color","light","expand","className","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","removeItem","moment","ProjectBox","props","staticProjectData","nowDay","Date","parse","tz","format","dday","Math","floor","developerPercent","plannerPercent","designerPercent","etcPercent","id","pathname","url","style","textDecoration","Card","CardImg","width","height","src","alt","CardBody","CardTitle","Row","xs","Col","CardSubtitle","CardText","Progress","value","useImage","imgState","setImgState","getImgApi","useStyles","makeStyles","theme","root","display","flexDirection","marginBottom","spacing","fontSize","borderRadius","backgroundColor","PeopleBox","classes","imgPending","card","badgeContent","String","grade","object-fit","stacks","pill","withStyles","padding","margin","switchBase","transform","palette","common","white","opacity","border","thumb","track","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","primary","main","borderColor","boxShadow","ImgInput","img","saveImg","useDropzone","accept","maxFiles","onDrop","acceptedFiles","imgFile","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","align","heigth","DropdownRole","dropdownCaret","dropdownHeader","pick","dropdownOpen","setDropdownOpen","caret","setCaret","Dropdown","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","e","DropdownField","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","useProfileInfo","setInfo","getInfoApi","contact","area","ProfileInfo","info","infoPending","Alert","ImageModify","setState","isImgChange","Form","FormGroup","Label","for","Input","FormText","useProfileInfoModify","setModifying","infoFulfilled","infoRejected","infoError","postInfoApi","imgFulfilled","imgRejected","imgError","postImgApi","ProfileInfoModify","handleChange","target","placeholder","onChange","preventDefault","withOutGrade","CenterModal","modalFlag","Modal","ModalHeader","gridTemplateColumns","alignItems","fontWeight","float","IconButton","ModalFooter","footer","AlertModal","BootstrapInputUI","input","position","fontFamily","join","fade","InputBase","BootstrapInput","usePeopleListStateTs","peopleList","setPeopleList","setGrade","peopleListPromise","peoplePage","WantedPeopleListPromise","peopleAction","useWantedPeopleListEffectTs","Title","Typography","Root","project","useDeadlineProjectListEffect","autoplay","lineHeight","textAlign","level","grid","gutter","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item","pageSize","current","total","marginTop","formControl","minWidth","selectEmpty","ProjectSort","getApi","event","getPage","Grid","container","FormControl","Select","displayEmpty","MenuItem","disabled","FormHelperText","variant","InputLabel","OutlinedInput","label","PeopleSort","ProjectListPage","useProjectListEffectTs","defaultCurrent","projectRedux","memberList","setProject","ReactMarkdown","ProjectDetail","location","useLocation","split","setApply","recruit","setRecruit","reader","applyModal","applyDetail","check","setCheck","pagination","setPagination","fetchGetDetail","resApply","Accept","then","projectApplicantDtoList","recruitDtoList","fetchDeleteProject","getProjectApi","deleteProject","deleteProjectApi","inputProject","checkSwitch","inputApply","inputRecruit","clickPagination","nextPage","count","openApply","closeApply","openDelete","closeDelete","openDetailApply","closeDetailApply","useProjectDetailStateTs","useProjectDetailEffectTs","needList","title","allList","updateProject","danger","apiLink","detailGet","itemLayout","bordered","key","Meta","source","marginRight","length","applyLink","applySet","ApplyProject","applied","setApplied","fetchGetApply","fetchPostApply","fetchPutApply","getApply","getApplyApi","putApply","putApplyApi","postApply","postApplyApi","applyAction","inputAnswer","i","index","selectRole","useInputProjectApplyStateTs","afterAction","defaultAns","Array","fill","useInputProjectApplyEffectTs","htmlFor","TextArea","autoSize","minRows","maxRows","ViewProjectApply","api","fetchDeleteApply","deleteApply","applyDetailAction","deleteApplyApi","useViewProjectApplyStateTs","useViewProjectApplyEffectTs","useImageSave","nextUrl","fileName","ProjectCreate","setImg","fetchPostCreate","fetchImg","imgData","createProject","createProjectApi","createState","createImg","createAction","createImgApi","targetValue","inputImg","inputProjectMember","memberValue","inputDate","date","inputQuestion","q","addQuestion","deleteQuestion","filter","inputField","useProjectCreateStateTS","useProjectCreateEffectTs","addonBefore","min","max","step","utils","DateFnsUtils","locale","ko","disableToolbar","hideTabs","clearable","ampm","multiline","fullWidth","questionString","addonAfter","ProjectUpdate","fetchPutUpdate","UpdateProjectApi","updateState","updateImg","updateAction","UpdateImgApi","useProjectUpdateStateTs","originImg","useProjectUpdateEffectTs","updateData","layout","labelCol","span","wrapperCol","tailLayout","offset","RegisterPage","rules","required","whitespace","htmlType","useProfileProject","resGetProject","getProjectFulfilled","getProjectRejected","getProjectError","setList","hiding","profile","isHideChange","profileRedux","setHideChange","useProfileProjectModify","getHideProjectApi","resHideProject","hideProjectFulfilled","hideProjectRejected","hideProjectError","resDisplayProject","displayProjectFulfilled","displayProjectRejected","displayProjectError","list","hideList","setHideList","moveData","ModifyPlanProjects","hideProjectFetchApi","displayProjectApi","RunningProjects","setHiding","getProjectPending","ModifyEndedProjects","EndedProjects","PlanProjects","useProfileRecruit","getProjectData","getProjecsError","postRecruitData","postRecruitFulfilled","postRecruitRejected","postRecruitError","toggleNested","setNestedMessage","plannedProjects","setPlannedProjects","RecruitModal","modal","recruitState","setRecruitState","nestedModal","setNestedModal","closeAll","setCloseAll","nestedMessage","postRecruit","postRecruitApi","pj","TextField","rows","onClosed","undefined","ModalBody","useInvitationEffect","invitationList","setInvitationList","isError","errorMessage","noList","setNoList","noticeNoList","getInvitationList","getInvitationListApi","useInvitationDetailEffect","pid","invitaionDetail","setInvitaionDetail","activityName","setActivityName","getInvitationDetail","putInvitationAccept","deleteInvitationReject","getInvitationDetailApi","putFulfilled","putInvitationAcceptApi","reject","deleteFulfilled","deleteInvitationRejectApi","handleAccept","handleReject","DetailModal","Badge","body","InvitationBox","detailModal","setDetailModal","detailModalToggle","InvitationModal","invitation","Profile","modifying","modifyToggle","invitationModal","setInvitationModal","invitationToggle","setModal","recruitToggle","activeTab","setActiveTab","tabToggle","tab","tabs","classnames","active","TabContent","TabPane","tabId","LoginPage","useRef","postLoginApi","reduxData","useLoginEffect","PeopleList","getPeopleListFetch","Pagination","App","test","useLoginAuth","basename","path","component","exact","ProjectList","Boolean","hostname","match","temporaryRedux","temporary","setTemporary","rootReducer","combineReducers","temproray","store","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac7ed121.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseImg.c40f4ed9.png\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginRedux = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    isToken: false,\r\n    userId: \"\"\r\n  },\r\n  reducers: {\r\n    setToken(state, action) {\r\n      state.isToken = action.payload.isToken;\r\n      state.userId = action.payload.userId;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setToken } = loginRedux.actions;\r\nexport default loginRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useTemporaryApi() {\r\n  const { temporary } = useSelector(state => state.temproray);\r\n  const getProjectList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const getPeopleList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const postProjectList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n  const postPeopletList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n\r\n  return [\r\n    temporary,\r\n    {\r\n      getProjectList,\r\n      getPeopleList,\r\n      postProjectList,\r\n      postPeopletList\r\n    }\r\n  ];\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nexport type Service<R, P extends any[]> = (...args: P) => Promise<R>;\r\n\r\nexport type RequestState = {\r\n  data: any;\r\n  error: any;\r\n  pending: boolean;\r\n  fulfilled: boolean;\r\n  rejected: boolean;\r\n};\r\n\r\nexport type RequestAction =\r\n  | { type: 'request' }\r\n  | { type: 'success'; payload: any }\r\n  | { type: 'failure'; payload: string };\r\n\r\nfunction reducer(state: RequestState, action: RequestAction): RequestState {\r\n  switch (action.type) {\r\n    case 'request':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: true,\r\n        fulfilled: false,\r\n        rejected: false,\r\n      };\r\n    case 'success':\r\n      return {\r\n        data: action.payload,\r\n        error: null,\r\n        pending: false,\r\n        fulfilled: true,\r\n        rejected: false,\r\n      };\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        fulfilled: false,\r\n        rejected: true,\r\n      };\r\n  }\r\n}\r\n\r\nexport function useRequest<R, P extends any[]>(\r\n  asyncTask: Service<R, P>,\r\n  options?: {\r\n    // autoFirstRun?: boolean;\r\n    // passArgs?: P;\r\n  },\r\n) {\r\n  // const {autoFirstRun = false, passArgs} = options || {};\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    data: null,\r\n    error: null,\r\n    pending: false,\r\n    fulfilled: false,\r\n    rejected: false,\r\n  });\r\n  const requestActions = {\r\n    run: async (...args: P) => {\r\n      dispatch({\r\n        type: 'request',\r\n      });\r\n      try {\r\n        // then 패턴 데신에 await을 쓴 이유는 일반 함수일 경우에도 동작하도록\r\n        const data = await asyncTask(...args);\r\n        dispatch({\r\n          type: 'success',\r\n          payload: data,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: 'failure',\r\n          payload: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return [state, requestActions] as const;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function useMove(condition, destination) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (condition) history.push(`./${destination}`);\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      history.push(`./${destination}`);\r\n    }\r\n  }, [condition])\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport type RegisterState = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\nexport type RegisterLogin = {\r\n  userId: String;\r\n  password: String;\r\n};\r\n\r\n/**\r\n * 회원 가입 api\r\n */\r\nexport const registerApi: any = () => {\r\n  // 회원 가입 정보 등록\r\n  const postRegister = async (data: RegisterState): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signup`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  return { postRegister };\r\n};\r\n\r\n/**\r\n * login 관련 api\r\n */\r\nexport function loginApi(){\r\n  // 로그인\r\n  const postLogin = async (data: RegisterLogin): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signin`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  \r\n  // 토큰 만료 시 refresh\r\n  const refreshToken = async (): Promise<string> => {\r\n    const token = window.sessionStorage.getItem(\"refreshToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/refresh`,\r\n      {\r\n        refreshToken: token,\r\n      },\r\n    );\r\n    window.sessionStorage.setItem(\"accessToken\", res.data.accessToken);\r\n    return res.data.accessToken;\r\n  };\r\n\r\n  return { postLogin, refreshToken };\r\n};\r\n","import axios from \"axios\";\r\nimport { loginApi } from \"./\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\nexport const peopleListApi: any = () => {\r\n   \r\n    // 사람 리스트\r\n  const getPeopleList = async (pageNumber: number, params = \"\"): Promise<object> => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/people?page=${pageNumber}&size=12${params}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  //\r\n  const getWantedPeopleList = async (pageNumber: number): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}people?page=${pageNumber}&size=6`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getPeopleList, getWantedPeopleList };\r\n}\r\n","import axios from \"axios\";\r\nimport { loginApi } from \"./\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\n\r\nexport function infoApi(): any {\r\n  // get info api\r\n  const getInfo = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // post info api\r\n  const postInfo = async (userId: String, data: any): Promise<any> => {\r\n    let token: String | Promise<String> | null = window.sessionStorage.getItem(\r\n      \"accessToken\",\r\n    );\r\n    const res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          const res = await axios\r\n            .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n              headers: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n          return res;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return { getInfo, postInfo };\r\n}\r\n\r\n/**\r\n * img 저장 api\r\n */\r\nexport function imgApi():any {\r\n  // 이미지 불러오기\r\n  const getImg = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 이미지 저장\r\n  const postImg = async (userId: String, data: any): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let image = new FormData();\r\n    image.append(\"image\", data.imgUrl);\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n      image,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    )\r\n    return res;\r\n  };\r\n\r\n  return { getImg, postImg };\r\n}\r\n\r\n/**\r\n * 진행중인 프로젝트\r\n */\r\nexport function runningProjectApi(): any {\r\n  const getProject = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\n\r\nexport function endedProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function planProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 모든 (planned) 프로젝트 목록 가져오기 (recruit modal에서 프로젝트 선택용)\r\n  const getAllPlannedProject = async (myId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    // 헤더\r\n    const header = {\r\n      \"Content-type\": \"application/json;charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    // 일반 plan과 숨겨진 plan 가져오기\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n    const res2 = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan/hidden`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n\r\n    let totalRes: Array<Object> = [];\r\n\r\n    // 안에 데이터가 있을 경우 데이터 가져오기\r\n    if (res.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res.data._embedded.projectList);\r\n    }\r\n    if (res2.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res2.data._embedded.projectList);\r\n    }\r\n\r\n    return totalRes;\r\n  };\r\n\r\n  return { getProject, getHideProject, getAllPlannedProject };\r\n}\r\nexport function hideProjectApi() {\r\n  const hideProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n\r\n  const displayProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n  return { hideProject, displayProject };\r\n}\r\nexport function sendRecruitPeopleApi() {\r\n  const postRecruit = async (userId: String, data: any) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res;\r\n  };\r\n  return { postRecruit };\r\n}\r\nexport function invitationListApi() {\r\n  const getInvitationList = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n  return { getInvitationList };\r\n}\r\nexport function invitationDetailApi() {\r\n  const getInvitationDetail = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const putInvitationAccept = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const deleteInvitationReject = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getInvitationDetail, putInvitationAccept, deleteInvitationReject };\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useAlert, useMove } from \"..\";\r\nimport { useRequest } from \"../\";\r\nimport { registerApi } from \"../api\";\r\n\r\ntype RegisterType = {\r\n  loading: boolean;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n};\r\n\r\nexport function useRegisterEffect(): RegisterType {\r\n  const { alertAction } = useAlert();\r\n  const [registerPromiseState, { run: postRegisterFetch }] = useRequest(\r\n    registerApi().postRegister,\r\n  );\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Success:\", values);\r\n    postRegisterFetch(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  useMove(registerPromiseState.fulfilled, \"login\");\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.fulfilled) {\r\n      alertAction.open(\"회원가입을 무사히 마쳤습니다. 로그인 부탁드립니다.\");\r\n    }\r\n  }, [registerPromiseState.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.rejected) {\r\n      if (registerPromiseState.error) {\r\n        alertAction.open(registerPromiseState.error.response.data.message);\r\n      }\r\n    }\r\n  }, [registerPromiseState.rejected]);\r\n\r\n  return { loading: registerPromiseState.pending, onFinish, onFinishFailed };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst alertRedux = createSlice({\r\n  name: \"alert\",\r\n  initialState: {\r\n    isOpen: false,\r\n    sentence: \"\",\r\n  },\r\n  reducers: {\r\n    openAlert(state, action) {\r\n      state.isOpen = true;\r\n      console.log(action.payload);\r\n      state.sentence = action.payload;\r\n    },\r\n    closeAlert(state) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openAlert, closeAlert } = alertRedux.actions;\r\nexport default alertRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openAlert, closeAlert } from \"../reducers/alert\";\r\nimport { RootState } from '../reducers';\r\n\r\nexport default function useAlert() {\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state: RootState) => state.alert.isOpen);\r\n  const sentence = useSelector((state: RootState) => state.alert.sentence);\r\n\r\n  const open = (data: String) => {\r\n    dispatch(openAlert(data));\r\n  };\r\n\r\n  const close = () => {\r\n    dispatch(closeAlert());\r\n  };\r\n\r\n  return {\r\n    alertState: { sentence, isOpen },\r\n    alertAction: {\r\n      open,\r\n      close,\r\n    },\r\n  };\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRequest } from \"../\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype projectListType = {\r\n  projectId: number;\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  dday: number;\r\n  status: string;\r\n  projectField: object | null;\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  leaderId: string | null;\r\n};\r\n\r\ntype pageType = {\r\n  number: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n};\r\n\r\ntype projectPage = {\r\n  projectList: projectListType[];\r\n  role: string;\r\n  region: string;\r\n  search: string;\r\n  page: pageType;\r\n  stack: string;\r\n  projectListPromise: RequestState;\r\n  DeadLineProjectListPromise: RequestState;\r\n};\r\n\r\ntype projectAction = {\r\n  setProjectList: Dispatch<SetStateAction<projectListType[]>>;\r\n  setPage: Dispatch<\r\n    SetStateAction<{\r\n      number: number;\r\n      size: number;\r\n      totalElements: number;\r\n      totalPages: number;\r\n    }>\r\n  >;\r\n  setRegion: Dispatch<SetStateAction<string>>;\r\n  setRole: Dispatch<SetStateAction<string>>;\r\n  setStack: Dispatch<SetStateAction<string>>;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  getProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n  getDeadLineProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n};\r\n\r\ntype projectState = {\r\n  projectPage: projectPage;\r\n  projectAction: projectAction;\r\n};\r\n\r\nexport function useProjectListStateTs(): projectState {\r\n  const [projectList, setProjectList] = useState<projectListType[] | []>([]);\r\n  const [page, setPage] = useState<pageType>({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [stack, setStack] = useState<string>(\"\");\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const getProjectList = async (\r\n    pageNumber: number,\r\n    sort:string = \"\",\r\n  ): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects?page=${pageNumber}&size=8${sort}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async (\r\n    pageNumber: number,\r\n  ): Promise<object> => {\r\n    let res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const [projectListPromise, { run: getProjectListApi }] = useRequest(\r\n    getProjectList,\r\n  );\r\n\r\n  const [\r\n    DeadLineProjectListPromise,\r\n    { run: getDeadLineProjectListApi },\r\n  ] = useRequest(getDeadLineProjectList);\r\n\r\n  const projectPage: projectPage = {\r\n    projectList,\r\n    role,\r\n    region,\r\n    search,\r\n    page,\r\n    stack,\r\n    projectListPromise,\r\n    DeadLineProjectListPromise,\r\n  };\r\n  const projectAction: projectAction = {\r\n    setProjectList,\r\n    setPage,\r\n    setRegion,\r\n    setRole,\r\n    setStack,\r\n    setSearch,\r\n    getProjectListApi,\r\n    getDeadLineProjectListApi,\r\n  };\r\n\r\n  return { projectPage, projectAction };\r\n}\r\n\r\nexport function useProjectListEffectTs(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.projectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.projectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.projectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.projectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.projectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.projectListPromise.rejected) {\r\n      if (project.projectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.projectListPromise.rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.DeadLineProjectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.DeadLineProjectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.DeadLineProjectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getDeadLineProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.rejected) {\r\n      if (project.DeadLineProjectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.rejected]);\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ProjectDetailType = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  status: string;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\nintroduction: string;\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n    apply: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype RecruitDtoListType = {\r\n  userName: string;\r\n  selfDescription: string;\r\n  role: string;\r\n  status: string;\r\n  projectId: number;\r\n  projectName: string;\r\n  introduction: string;\r\n  state: string;\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype checkType = {\r\n  apply: boolean;\r\n  recruit: boolean;\r\n  reader: boolean;\r\n  applyModal: boolean;\r\n  delete: boolean;\r\n  applyDetail: boolean;\r\n};\r\n\r\ntype pagenationType = {\r\n    apply: number,\r\n    recruit: number,\r\n}\r\n\r\ntype ApplyType = {\r\n    state: string;\r\n    userName: string;\r\n    role: string;\r\n    _links: {\r\n        self: {\r\n            href: string\r\n        }\r\n    };\r\n    userId: string;\r\n    href: string;\r\n}\r\n\r\ntype ProjectType = { \r\n        getProject: RequestState;\r\n        deleteProject: RequestState;\r\n        project: ProjectDetailType;\r\n        check: checkType;\r\n        apply: ApplyType[];\r\n        recruit: RecruitDtoListType[];\r\n        pagination: pagenationType;\r\n    };\r\n\r\ntype ProjectActionType = {\r\n    getProjectApi: (projectId: string) => Promise<void>;\r\n      deleteProjectApi: (projectId: string) => Promise<void>;\r\n      inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      checkSwitch: (name: string, checked: boolean) => void;\r\n      inputApply: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      inputRecruit: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      clickPagination: (name: string, nextPage: number) => void;\r\n      openApply: () => void;\r\n      closeApply: () => void;\r\n      openDelete: () => void;\r\n      closeDelete: () => void;\r\n      openDetailApply: () => void;\r\n      closeDetailApply: () => void;\r\n      setApply: Dispatch<SetStateAction<ApplyType[]>>;\r\n      setProject: Dispatch<SetStateAction<ProjectDetailType>>;\r\n    }\r\n\r\ntype ProjectDetailStateType = {\r\n    project: ProjectType;\r\n    projectAction: ProjectActionType;\r\n}\r\n\r\nconst useProjectDetailStateTs = (): ProjectDetailStateType => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState<ProjectDetailType>(projectDetail);\r\n  const [apply, setApply] = useState<ApplyType[]>([]);\r\n  const [recruit, setRecruit] = useState<RecruitDtoListType[]>([]);\r\n  const [check, setCheck] = useState<checkType>({\r\n    apply: false,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n    applyDetail: false,\r\n  });\r\n  const [pagination, setPagination] = useState<pagenationType>({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n\r\n  const fetchGetDetail = async (projectId: string): Promise<any> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply = {\r\n      apply: {},\r\n      recruit: {},\r\n    };\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        throw error;\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0]._links.self.href === `/profile/${id}`) {\r\n      token = await loginApi().refreshToken();\r\n\r\n      await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value: any) => {\r\n          try {\r\n            setApply(value.data._embedded.projectApplicantDtoList);\r\n          } catch {\r\n            setApply([]);\r\n          }\r\n        })\r\n        .catch(async (error: any) => {\r\n          throw error;\r\n        });\r\n      await axios\r\n        .get(\r\n          `${process.env.REACT_APP_BASE_URL}projects/${projectId}/recruits`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          },\r\n        )\r\n        .then((value: any) => {\r\n          try {\r\n            setRecruit(value.data._embedded.recruitDtoList);\r\n          } catch {\r\n            setRecruit([]);\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          throw error;\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    history.push(\"/projects\");\r\n  };\r\n\r\n  const [getProject, { run: getProjectApi }] = useRequest(fetchGetDetail);\r\n\r\n  const [deleteProject, { run: deleteProjectApi }] = useRequest(\r\n    fetchDeleteProject,\r\n  );\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n    const checkSwitch = (name: string, checked: boolean) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputApply = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputRecruit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name: string, nextPage: number) => {\r\n    setPagination((value: any) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    project: {\r\n      getProject,\r\n      deleteProject,\r\n      project,\r\n      check,\r\n      apply,\r\n      recruit,\r\n      pagination,\r\n    },\r\n    projectAction: {\r\n      getProjectApi,\r\n      deleteProjectApi,\r\n      inputProject,\r\n      checkSwitch,\r\n      inputApply,\r\n      inputRecruit,\r\n      clickPagination,\r\n      setApply,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n      openDetailApply,\r\n      closeDetailApply,\r\n      setProject\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectDetailEffectTs = (\r\n  project: ProjectType,\r\n  projectAction: ProjectActionType,\r\n  projectId: string,\r\n) => {\r\n    const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectApi(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.fulfilled) {\r\n      projectAction.setProject(project.getProject.data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (\r\n        project.getProject.data.res.memberList[0]._links.self.href ===\r\n        `/profile/${id}`\r\n      ) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n      }\r\n    }\r\n  }, [project.getProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.rejected) {\r\n      console.log(project.getProject.error.response);\r\n        alertAction.open(project.getProject.error.response.data.message);\r\n    }\r\n  }, [project.getProject.rejected]);\r\n};\r\n\r\n// const useProjectRecruitEffect = (\r\n//   data,\r\n//   fulfilled,\r\n//   rejected,\r\n//   error,\r\n//   inputState,\r\n// ) => {\r\n// //   const [alertData, alertAction] = useAlert();\r\n\r\n//   useEffect(() => {\r\n//     if (fulfilled) {\r\n//       // inputDetail(data);\r\n//       inputState(recruitDtoList);\r\n//     }\r\n//   }, [fulfilled]);\r\n\r\n//   useEffect(() => {\r\n//     if (rejected) {\r\n//     //   alertAction.open(error.response.data.message);\r\n//       console.log(error);\r\n//     }\r\n//   }, [rejected]);\r\n// };\r\n\r\nexport {\r\n  useProjectDetailStateTs,\r\n  useProjectDetailEffectTs,\r\n  //   useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  introduction: \"\",\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"\",\r\n    selfDescription: \"\",\r\n    role: \"\",\r\n    status: \"\",\r\n    projectId: 0,\r\n    projectName: \"\",\r\n    introduction: \"\",\r\n    state:\"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRequest } from \"../\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ApplyStateType = {\r\n  answers: string[];\r\n  introduction: string;\r\n  role: string;\r\n  questions: string[];\r\n  userName: string;\r\n  status: string;\r\n};\r\n\r\ntype ApplyInputType = {\r\n  apply: ApplyStateType;\r\n  applied: boolean;\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  postApply: RequestState;\r\n};\r\n\r\ntype ApplyInputActionType = {\r\n  getApplyApi: (apiLink: string) => Promise<void>;\r\n  postApplyApi: (data: object, apiLink: string) => Promise<void>;\r\n  putApplyApi: (data: any, apiLink: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n  inputAnswer: (a: string, i: number) => void;\r\n  inputApply: (name: string, data: string[] | string) => void;\r\n  selectRole: (data: string) => void;\r\n  setApplied: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\ntype ApplyType = {\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  deleteApply: RequestState;\r\n  apply: ApplyStateType;\r\n};\r\n\r\ntype ApplyActionType = {\r\n  getApplyApi: (api: string) => Promise<void>;\r\n  putApplyApi: (api: string) => Promise<void>;\r\n  deleteApplyApi: (api: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n};\r\n\r\ntype ProjectApplyType = {\r\n  applyDetail: ApplyType;\r\n  applyDetailAction: ApplyActionType;\r\n};\r\n\r\nexport const useInputProjectApplyStateTs = () => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n  const [applied, setApplied] = useState<boolean>(false);\r\n  const fetchGetApply = async (apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${apiLink}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .get(`${apiLink}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (\r\n    data: object,\r\n    apiLink: string,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    console.log(apiLink);\r\n    await axios\r\n      .post(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .post(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data: any, apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [postApply, { run: postApplyApi }] = useRequest(fetchPostApply);\r\n\r\n  const inputApply = (name: string, data: string[] | string) => {\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a: string, i: number) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data: string) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    apply: { apply, applied, getApply, putApply, postApply },\r\n    applyAction: {\r\n      postApplyApi,\r\n      putApplyApi,\r\n      getApplyApi,\r\n      setApply,\r\n      inputAnswer,\r\n      inputApply,\r\n      selectRole,\r\n      setApplied,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useInputProjectApplyEffectTs = (\r\n  apply: ApplyInputType,\r\n  applyAction: ApplyInputActionType,\r\n  questions: string[],\r\n  detailGet: boolean,\r\n  apiLink: string,\r\n  afterAction: () => void,\r\n) => {\r\n\r\n  useEffect(() => {\r\n    const defaultAns = new Array(questions.length);\r\n    defaultAns.fill(\"\");\r\n    applyAction.inputApply(\"answers\", defaultAns);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet) {\r\n      applyAction.getApplyApi(apiLink);\r\n    }\r\n  }, [detailGet]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n      if (apply.apply.answers.length !== 0) {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.postApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.postApply.fulfilled]);\r\n\r\n};\r\n\r\nexport const useViewProjectApplyStateTs = (): ProjectApplyType => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n\r\n  const fetchGetApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .get(`${api}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPutApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(\r\n        api,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(api, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .delete(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [deleteApply, { run: deleteApplyApi }] = useRequest(fetchDeleteApply);\r\n\r\n  return {\r\n    applyDetail: { getApply, putApply, deleteApply, apply },\r\n    applyDetailAction: {\r\n      deleteApplyApi,\r\n      getApplyApi,\r\n      putApplyApi,\r\n      setApply,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useViewProjectApplyEffectTs = (\r\n  apply: ApplyType,\r\n  applyAction: ApplyActionType,\r\n  open: boolean,\r\n  applyLink: string,\r\n  applySet: Dispatch<SetStateAction<ApplyType[]>>,\r\n  userId: string,\r\n  close: () => void,\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (open) {\r\n      applyAction.getApplyApi(applyLink);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.apply.userName === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"ACCEPT\",\r\n            };\r\n          } else {\r\n            return apply;\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.deleteApply.fulfilled) {\r\n      applySet((value: any) => {\r\n        const filterData = value.map((apply: any) => {\r\n          if (apply.apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"REJECT\",\r\n            };\r\n          }``\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.deleteApply.fulfilled]);\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n  questions: [],\r\n  userName: \"\",\r\n  status: \"\",\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { AxiosError } from \"axios\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n};\r\n\r\ntype updateStateType = {\r\n    project: CreateProject;\r\n    img: any;\r\n    updateProject: RequestState;\r\n    updateImg: RequestState;\r\n  }\r\n\r\ntype updateActionType = {\r\n    UpdateProjectApi: (projectId: string, data: any) => Promise<void>;\r\n    UpdateImgApi: (projectId: string, data: any) => Promise<void>;\r\n    inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    setImg: Dispatch<SetStateAction<any>>;\r\n    inputProjectMember: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    inputDate: (date: any) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputField: (data: string) => void;\r\n  }\r\n\r\ntype UpdateType = {\r\n  updateState: updateStateType;\r\n  updateAction: updateActionType;\r\n};\r\n\r\nconst useProjectUpdateStateTs = (): UpdateType => {\r\n  const projectDetail = useSelector(\r\n    (state: any) => state.project.projectDetail,\r\n  );\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<any>(projectDetail.img);\r\n\r\n  const fetchPutUpdate = async (\r\n    projectId: string,\r\n    data: any,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .put(\r\n              `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n              data,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: any): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const [updateProject, { run: UpdateProjectApi }] = useRequest(fetchPutUpdate);\r\n  const [updateImg, { run: UpdateImgApi }] = useRequest(fetchImg);\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputDate = (date: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n    const inputField = (data: string) => {\r\n      setProject((value) => {\r\n        return {\r\n          ...value,\r\n          projectField: data,\r\n        };\r\n      });\r\n    };\r\n\r\n  return {\r\n    updateState: { project, img, updateProject, updateImg },\r\n    updateAction: {\r\n      UpdateProjectApi,\r\n      UpdateImgApi,\r\n      inputProject,\r\n      setImg,\r\n      inputProjectMember,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectUpdateEffectTs = (\r\n  updateState: updateStateType,\r\n  updateAction: updateActionType,\r\n  projectId: string,\r\n) => {\r\n  const history = useHistory();\r\n   const { alertAction} = useAlert();\r\n  const originImg = useSelector(\r\n    (state: any) => state.project.projectDetail.img,\r\n  );  \r\n  useEffect(() => {\r\n    if (updateState.updateProject.fulfilled) {\r\n      console.log(typeof updateState.img);\r\n      console.log(updateState.img);\r\n      if (updateState.img.length === originImg)\r\n        updateAction.UpdateImgApi(projectId, updateState.img);\r\n      else history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [updateState.updateProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (updateState.updateProject.rejected) {\r\n        alertAction.open(updateState.updateProject.error.response.data.message);\r\n      console.log(updateState.updateProject.error);\r\n    }\r\n  }, [updateState.updateProject.rejected]);\r\n};\r\n\r\nexport { useProjectUpdateStateTs, useProjectUpdateEffectTs };\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer:  number;\r\n    planner: number;\r\n    etc: number;\r\n  },\r\n}\r\n\r\ntype CreateStateType = {\r\n    project: CreateProject;\r\n    createProject: RequestState;\r\n    createImg: RequestState;\r\n    img: string;\r\n}\r\n\r\ntype CreateActionType = {\r\n    createProjectApi: (data: CreateProject) => Promise<void>;\r\n    createImgApi: (projectId: string, data: string) => Promise<void>;\r\n    inputProject: (name: string, targetValue: string) => void;\r\n    inputDate: (date: any) => void;\r\n    inputImg: (data: string) => void;\r\n    inputField: (data: string) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputProjectMember: (name: string, memberValue: string) => void;\r\n}\r\n\r\ntype CreateType = {\r\n    createState: CreateStateType;\r\n    createAction: CreateActionType;\r\n}\r\n\r\nconst useProjectCreateStateTS = (): CreateType => {\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<string>(\"\");\r\n\r\n  const fetchPostCreate = async (data: CreateProject): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                  \"Access-Control-Expose-Headers\": \"*\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n    const [\r\n        createProject,\r\n        { run: createProjectApi },\r\n    ] = useRequest(fetchPostCreate);\r\n    const [\r\n        createImg,\r\n        { run: createImgApi },\r\n    ] = useRequest(fetchImg);\r\n\r\n  const inputProject = (name: string, targetValue: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const inputDate = (date: any) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data: string) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (name: string, memberValue: string): void => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const createState: CreateStateType = {\r\n    project,\r\n    createProject,\r\n    createImg,\r\n    img,\r\n  };\r\n  const createAction: CreateActionType = {\r\n    createProjectApi,\r\n    createImgApi,\r\n    inputProject,\r\n    inputImg,\r\n    inputProjectMember,\r\n    inputDate,\r\n    inputQuestion,\r\n    addQuestion,\r\n    deleteQuestion,\r\n    inputField,\r\n  };\r\n\r\n  return { createState, createAction }\r\n};\r\n\r\nconst useProjectCreateEffectTs = (\r\n  createState: CreateStateType,\r\n  createAction: CreateActionType,\r\n) => {\r\n    const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.fulfilled) {\r\n      const projectId = createState.createProject.data.headers.location.split(\r\n        \"/\",\r\n      );\r\n      createAction.createImgApi(projectId[4], createState.img);\r\n    }\r\n  }, [createState.createProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.rejected) {\r\n      alertAction.open(createState.createProject.error.response.data.message);\r\n      console.log(createState.createProject.error);\r\n    }\r\n  }, [createState.createProject.rejected]);\r\n};\r\n\r\nexport { useProjectCreateStateTS, useProjectCreateEffectTs };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n\r\n// const projectApplicantDtoList = [\r\n//   {\r\n//     userId: \"testApplicant1\",\r\n//     userName: \"테스터\",\r\n//     status: \"UNREAD\",\r\n//     role: \"DEVELOPER\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n//       },\r\n//     },\r\n//   },\r\n//   {\r\n//     userId: \"testApplicant2\",\r\n//     userName: \"테스터\",\r\n//     status: \"UNREAD\",\r\n//     role: \"DEVELOPER\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n//       },\r\n//     },\r\n//   },\r\n// ];\r\n\r\n// const recruitDtoList = [\r\n//   {\r\n//     userName: \"유저01\",\r\n//     selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n//     role: \"DEVELOPER\",\r\n//     status: \"UNREAD\",\r\n//     projectId: 11,\r\n//     projectName: \"project1\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n//       },\r\n//     },\r\n//   },\r\n//   {\r\n//     userName: \"유저02\",\r\n//     selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n//     role: \"DEVELOPER\",\r\n//     status: \"UNREAD\",\r\n//     projectId: 11,\r\n//     projectName: \"project1\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n//       },\r\n//     },\r\n//   },\r\n// ];\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLogoutAuth } from \"../hook/auth/useLogin\";\r\nimport { setToken } from \"../reducers/login\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"./Layout.css\";\r\nimport \"./component.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // useMove 안 쓴 이유 -> 로그인 여부를 가지는 state가 레이아웃 컴포넌트 내부에 없어서 사용하기 애매함,,\r\n  // 일단 직접 useHistory로 구현\r\n  const history = useHistory();\r\n\r\n  // 레이아웃 바에서 로그인 여부를 확인하고, 유저 아이디를 띄울 변수\r\n  const userId = useSelector((state) => state.login.userId);\r\n  const isToken = useSelector((state) => state.login.isToken);\r\n\r\n  // 레이아웃에서 userId클릭하면 이동할 본인 프로필페이지 주소\r\n  const profileUrl = `/profile/${userId}`;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  // 로그아웃\r\n  const handleClick = () => {\r\n    // 세션 스토리지 비우기\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"accessToken\");\r\n    window.sessionStorage.removeItem(\"refreshToken\");\r\n\r\n    // 리덕스 초기화 데이터\r\n    const reduxData = {\r\n      isToken: false,\r\n      userId: null,\r\n    };\r\n\r\n    // 액션 디스패치\r\n    dispatch(setToken(reduxData));\r\n\r\n    // 홈으로\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"\" light expand=\"md\" className=\"nav_header\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          Egluu\r\n          {/* <img src={logo} alt=\"menubar\" id=\"menu-img\" width=\"100\" /> */}\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"container-fluid\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/projects\">\r\n                프로젝트 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/peoples\">\r\n                사용자 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            {isToken ? (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to={profileUrl}>\r\n                    {userId} 님\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={handleClick}>로그아웃</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"nav-right\">\r\n                  <NavLink tag={Link} to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <main>\r\n        <div className=\"nav_body\">{children}</div>\r\n      </main>\r\n\r\n      <footer className=\"nav_footer\">\r\n        <hr />\r\n        <div className=\"container-fluid text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mt-md-0 mt-3\">\r\n              <h4 className=\"text-uppercase\">Egluu</h4>\r\n              <br />\r\n              <p>Simple Team Building Platform</p> © 2020 Copyright:\r\n              <a href=\"https://egluuapi.codingnome.dev/\">\r\n                https://egluuapi.codingnome.dev/\r\n              </a>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n            <div className=\"col-md-2 mb-md-0 mb-2\"></div>\r\n            <div className=\"col-md-3 mb-md-0 mb-3\">\r\n              <h5 className=\"text-uppercase\">Links</h5>\r\n              <br />\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Instagram</a>\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  <a href=\"#!\">Github</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Progress\r\n} from \"reactstrap\";\r\nimport sampleimg from \"../icon/baseImg.png\";\r\nimport \"./Project.css\";\r\nconst moment = require(\"moment-timezone\"); //상단에 선언\r\n\r\nexport default function ProjectBox(props) {\r\n  const staticProjectData = props.data;\r\n  const nowDay = Date.parse(moment().tz(\"Asia/Seoul\").format());\r\n  const dday = Math.floor(\r\n    (Date.parse(staticProjectData.endDate) - nowDay) / (24 * 3600 * 1000)\r\n  );\r\n  // 0으로 나눌 경우 예외처리!\r\n  const developerPercent =\r\n    staticProjectData.currentMember.developer !== 0\r\n      ? (staticProjectData.currentMember.developer /\r\n          staticProjectData.needMember.developer) *\r\n        100\r\n      : 0;\r\n  const plannerPercent =\r\n    staticProjectData.currentMember.planner !== 0\r\n      ? (staticProjectData.currentMember.planner /\r\n          staticProjectData.needMember.planner) *\r\n        100\r\n      : 0;\r\n\r\n  const designerPercent =\r\n    staticProjectData.currentMember.designer !== 0\r\n      ? (staticProjectData.currentMember.designer /\r\n          staticProjectData.needMember.designer) *\r\n        100\r\n      : 0;\r\n\r\n  const etcPercent =\r\n    staticProjectData.currentMember.etc !== 0\r\n      ? (staticProjectData.currentMember.etc /\r\n          staticProjectData.needMember.etc) *\r\n        100\r\n      : 0;\r\n\r\n  return (\r\n    <div id=\"ProjectBoxCard\">\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Card>\r\n          <CardImg\r\n            width=\"240px\"\r\n            height=\"180px\"\r\n            src={`${process.env.REACT_APP_BASE_URL}projects/image/${staticProjectData.projectId}`}\r\n            alt=\"Card image cap\"\r\n          />\r\n          <CardBody>\r\n            <CardTitle>{staticProjectData.projectName}</CardTitle>\r\n            <Row xs=\"12\" id=\"team_dday\">\r\n              <Col xs=\"9\">\r\n                <CardSubtitle>{staticProjectData.teamName}</CardSubtitle>\r\n              </Col>\r\n              <Col xs=\"3\">\r\n                <CardSubtitle>D-{dday}</CardSubtitle>\r\n              </Col>\r\n            </Row>\r\n            <Row xs=\"12\" id=\"member-count\">\r\n              <Col xs=\"6\">\r\n                <CardText>developer</CardText>\r\n                <Progress color=\"#007bff\" value={developerPercent}>\r\n                  {developerPercent}\r\n                </Progress>\r\n                <CardText>planner </CardText>\r\n                <Progress color=\"#007bff\" value={plannerPercent}>\r\n                  {plannerPercent}\r\n                </Progress>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <CardText>designer</CardText>\r\n                <Progress color=\"#007bff\" value={designerPercent}>\r\n                  {designerPercent}\r\n                </Progress>\r\n                <CardText>etc</CardText>\r\n                <Progress color=\"#007bff\" value={etcPercent}>\r\n                  {etcPercent}\r\n                </Progress>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { imgApi } from \"../api\";\r\nimport { useRequest } from \"../useRequest\";\r\nexport const useImage = (\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n) => {\r\n  const { getImg } = imgApi();\r\n\r\n  const [\r\n    { data, fulfilled, pending, rejected, error },\r\n    { run: getImgApi },\r\n  ] = useRequest(getImg);\r\n\r\n  useEffect(() => {\r\n    getImgApi(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    setImgState({\r\n      ...imgState,\r\n      imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    });\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        if (error.response.data.error === \"302\") {\r\n          setImgState({\r\n            ...imgState,\r\n            imgUrl:\r\n              \"https://i.pinimg.com/236x/21/88/fd/2188fd41b8d31930acc43b7b197e6dfd.jpg\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [rejected]);\r\n  return pending;\r\n};\r\n\r\nexport default useImage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Badge as Stack } from \"reactstrap\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Level from \"./Level\";\r\nimport \"./People.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useImage } from \"../../hook/profile/useImage\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    \"& .MuiBadge-badge\": {\r\n      height: \"30px\",\r\n      width: \"30px\",\r\n      fontSize: \"1rem\",\r\n      borderRadius: \"15px\",\r\n      color: \"#ffffff\",\r\n      backgroundColor: \"#007bff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function PeopleBox(props) {\r\n  const classes = useStyles();\r\n  const data = props.data;\r\n  const [imgState, setImgState] = useState(\"\");\r\n  const imgPending = useImage(imgState, setImgState, data.userId);\r\n  return (\r\n    <div id=\"PeopleBoxCard\" className={classes.card}>\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Badge badgeContent={String(data.grade)} className={classes.root}>\r\n          <Card>\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              src={`${process.env.REACT_APP_BASE_URL}profile/image/${data.userId}`}\r\n              alt=\"Card image cap\"\r\n            /> */}\r\n            {imgPending ? (\r\n              <p>로딩중...</p>\r\n            ) : (\r\n              <div className=\"people-img\">\r\n                <img\r\n                  src={imgState.imgUrl}\r\n                  width=\"100%\"\r\n                  object-fit=\"contain\"\r\n                ></img>\r\n              </div>\r\n            )}\r\n            <CardBody>\r\n              <div id=\"card-title\">\r\n                <CardTitle>{data.userId}</CardTitle>\r\n              </div>\r\n\r\n              <CardText id=\"card-text\">\r\n                {data.stack === null && \" \"}\r\n                {/* {data.stacks.map(value => {\r\n                  return (\r\n                    <Stack color=\"secondary\" pill>\r\n                      # {value}{\" \"}\r\n                    </Stack>\r\n                  );\r\n                })} */}\r\n                {data.stacks[0] && (\r\n                  <Stack color=\"secondary\" pill>\r\n                    # {data.stacks[0]}{\" \"}\r\n                  </Stack>\r\n                )}\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Badge>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nexport const AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useRef, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst params = {\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    type: \"bullets\",\r\n    clickable: true,\r\n  },\r\n  observer: true,\r\n  spaceBetween: 30,\r\n  lazy: {\r\n    loadPrevNext: true,\r\n  },\r\n};\r\n\r\nfunction ImgInput({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${img}`}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImgInput2({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://pixabay.com/ko/illustrations/%EC%9C%84%EC%84%B1-%ED%96%89%EC%84%B1-%EA%B3%B5%EA%B0%84-%EC%B2%9C%EB%AC%B8%ED%95%99-1303512/\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={img}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ImgInput2, ImgInput };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst role = [\"DEVELOPER\", \"DESIGNER\", \"PLANNER\", \"ETC\"];\r\n\r\nconst DropdownRole = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle caret style={props.style}>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"DEVELOPER\")}>\r\n          DEVELOPER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"DESIGNER\")}>\r\n          DESIGNER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"PLANNER\")}>PLANNER</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst DropdownField = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle style={props.style} caret>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"APP\")}>APP</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"WEB\")}>WEB</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"AI\")}>AI</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"HW\")}>HW</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"BLOCKCHAIN\")}>\r\n          BLOCKCHAIN\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"SYSTEM\")}>SYSTEM</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\nexport { DropdownRole, DropdownField };\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: \"20%\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function HalfDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { anchor, buttonName } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <React.Fragment key={anchor}>\r\n        <Button style={{ fontSize: \"20px\" }} onClick={handleDrawerOpen}>\r\n          {buttonName}\r\n        </Button>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"right\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {props.children}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { infoApi } from \"../../hook/api\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfo = (setInfo, userId) => {\r\n  // info 정보 get 하는 api\r\n  const { getInfo } = infoApi();\r\n  const { alertState, alertAction } = useAlert();\r\n\r\n  // info get의 상태변수와 데이터 및 액션 디스패쳐\r\n  const [\r\n    { data: response, fulfilled, pending, rejected, error },\r\n    { run: getInfoApi },\r\n  ] = useRequest(getInfo);\r\n\r\n  // 마운트될 때 액션 디스패치\r\n  useEffect(() => {\r\n    getInfoApi(userId);\r\n  }, [userId]);\r\n\r\n  // info get 성공시\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInfo({\r\n        userName: response.userName,\r\n        role: response.role,\r\n        stacks: response.stacks,\r\n        contact: response.contact,\r\n        area: response.area,\r\n        grade: response.grade,\r\n        introduction: response.introduction,\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  // info get 실패시\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        alertAction.open(error.response.data.message);\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  // get refresh~\r\n  const Refresh = () => {\r\n    Api();\r\n  };\r\n\r\n  return pending;\r\n};\r\n\r\nexport default useProfileInfo;\r\n","import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"../Profile.css\";\r\nimport { useImage } from \"../../../../hook/profile/useImage\";\r\nimport useProfileInfo from \"../../../../hook/profile/useProfileInfo\";\r\n\r\nconst ProfileInfo = ({ info, setInfo, imgState, setImgState, userId }) => {\r\n  // 상태변화에 대한 sideEffect에 쓰일 args\r\n  const infoPending = useProfileInfo(setInfo, userId);\r\n\r\n  const imgPending = useImage(imgState, setImgState, userId);\r\n\r\n  return (\r\n    <div>\r\n      {infoPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <>\r\n          <Alert color=\"secondary\">{info.introduction} </Alert>\r\n          {/* width=\"100%\" 으로 비율유지 \r\n  object-fit=\"contain\" 으로 1/4칸에 딱 맞게 조정 */}\r\n          {imgPending ? (\r\n            <p>로딩중...</p>\r\n          ) : (\r\n            <div className=\"profile-img\">\r\n              <img\r\n                src={imgState.imgUrl}\r\n                width=\"100%\"\r\n                object-fit=\"contain\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          <h3 className=\"profile-info-id\">{userId}</h3>\r\n          <h6 className=\"profile-info-id\">{info.userName}</h6>\r\n          <h6>\r\n            Lev. {info.grade} {info.role}\r\n          </h6>\r\n          <h6>area : {info.area}</h6>\r\n          <p>#ReactJs #Javascript</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nconst ImageModify = ({ state, setState }) => {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: acceptedFiles => {\r\n      const imgFile = acceptedFiles.map(file =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file)\r\n        })\r\n      );\r\n      setState({ imgUrl: imgFile[0], isImgChange: true });\r\n    }\r\n  });\r\n\r\n  const params = {\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      type: \"bullets\",\r\n      clickable: true\r\n    },\r\n    observer: true,\r\n    spaceBetween: 30\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div {...getRootProps({ className: \"dropzone\" })}>\r\n          <input {...getInputProps()} />\r\n          {state.imgUrl === \"\" ? (\r\n            <img\r\n              src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n              alt=\"이미지 에러\"\r\n              align=\"center\"\r\n              heigth=\"100%\"\r\n              width=\"100%\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              {typeof state.imgUrl !== \"string\" ? (\r\n                <img\r\n                  src={state.imgUrl.url}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={state.imgUrl}\r\n                  alt=\"이미지 에러\"\r\n                  align=\"center\"\r\n                  heigth=\"100%\"\r\n                  width=\"100%\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleFile\">File</Label>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n          <FormText color=\"muted\">\r\n            This is some placeholder block-level help text for the above input.\r\n            It's a bit lighter and easily wraps to a new line.\r\n          </FormText>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageModify;\r\n","import { useEffect } from \"react\";\r\nimport { infoApi, imgApi } from \"../api\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst useProfileInfoModify = (\r\n  setModifying,\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n) => {\r\n  const { postInfo } = infoApi();\r\n\r\n  const [\r\n    {\r\n      data: infoResponse,\r\n      fulfilled: infoFulfilled,\r\n      pending: infoPending,\r\n      rejected: infoRejected,\r\n      error: infoError,\r\n    },\r\n    { run: postInfoApi },\r\n  ] = useRequest(postInfo);\r\n\r\n  const { postImg } = imgApi();\r\n\r\n  const [\r\n    {\r\n      data: imgResponse,\r\n      fulfilled: imgFulfilled,\r\n      pending: imgPending,\r\n      rejected: imgRejected,\r\n      error: imgError,\r\n    },\r\n    { run: postImgApi },\r\n  ] = useRequest(postImg);\r\n  const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (imgFulfilled && infoFulfilled) {\r\n      setImgState({\r\n        imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n        isImgChange: false,\r\n      });\r\n      setModifying();\r\n      //console.log(\"둘다 \");\r\n    }\r\n  }, [imgFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (!imgState.isImgChange && infoFulfilled) {\r\n      setModifying();\r\n      //console.log(\"인포메이션만 \");\r\n    }\r\n  }, [infoFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (infoRejected) {\r\n      if (infoError) {\r\n        alertAction.open(infoError.response.data.message);\r\n      }\r\n    }\r\n  }, [infoRejected]);\r\n\r\n  useEffect(() => {\r\n    if (imgRejected) {\r\n      if (imgError) {\r\n        alertAction.open(imgError.response.data.message);\r\n        console.log(imgError);\r\n      }\r\n    }\r\n  }, [imgRejected]);\r\n\r\n  return { postInfoApi, postImgApi };\r\n};\r\nconst useProfileImgModify = () => {};\r\n\r\nexport default useProfileInfoModify;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport ImageModify from \"../ProfileImage/ImageModify\";\r\nimport { infoApi, imgApi } from \"../../../../hook/api\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport useProfileInfoModify from \"../../../../hook/profile/useProfileInfoModify\";\r\n\r\nconst ProfileInfoModify = ({\r\n  setModifying,\r\n\r\n  info,\r\n  setInfo,\r\n\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n}) => {\r\n  const { postInfoApi, postImgApi } = useProfileInfoModify(\r\n    setModifying,\r\n\r\n    imgState,\r\n    setImgState,\r\n\r\n    userId,\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    // stack은 지금은 무조건 배열상태로 들어가게 임시방편함\r\n    if (e.target.name === \"stacks\") {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: [e.target.value],\r\n      });\r\n    }\r\n    // 나머지는 원래 방식대로\r\n    else {\r\n      setInfo({\r\n        ...info,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n    console.log(info);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { grade, ...withOutGrade } = info;\r\n    postInfoApi(userId, withOutGrade);\r\n    if (imgState.isImgChange) {\r\n      postImgApi(userId, imgState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModify state={imgState} setState={setImgState} />\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Name</Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"userName\"\r\n            placeholder=\"name\"\r\n            value={info.userName}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Role</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"role\"\r\n            value={info.role}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEVELOPER\">DEVELOPER</option>\r\n            <option value=\"DESIGNER\">DESIGNER</option>\r\n            <option value=\"LEADER\">LEADER</option>\r\n            <option value=\"ETC\">ETC</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Stack</Label>\r\n          <Input\r\n            type=\"stack\"\r\n            name=\"stacks\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"stack\"\r\n            value={info.stacks}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Email Contact</Label>\r\n          <Input\r\n            type=\"contact\"\r\n            name=\"contact\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"contact\"\r\n            value={info.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleEmail\">Area</Label>\r\n          <Input\r\n            type=\"area\"\r\n            name=\"area\"\r\n            //id=\"exampleEmail\"\r\n            placeholder=\"area\"\r\n            value={info.area}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">Introduction</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"introduction\"\r\n            id=\"introduction\"\r\n            value={info.introduction}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button onClick={handleSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoModify;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useAlert } from \"../../hook\";\r\n\r\nconst CenterModal = (props) => {\r\n  const { modalFlag, close } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modalFlag}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>{props.header}</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {props.children}\r\n        <ModalFooter>{props.footer}</ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AlertModal = (props) => {\r\n  const { alertState, alertAction } = useAlert();\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={alertState.isOpen}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>알림</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={alertAction.close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {alertState.sentence}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CenterModal, AlertModal };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInputUI = withStyles((theme) => ({\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction BootstrapInput(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nfunction InputTemp(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nexport { BootstrapInput, InputTemp };\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { peopleListApi } from \"../api\";\r\nimport { useRequest, useAlert } from \"..\";\r\nimport { RequestState } from \"../useRequest\";\r\nconst axios = require(\"axios\");\r\n\r\ntype pageType = {\r\n  number: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n};\r\n\r\ntype peopleListType = {\r\n  userId: String;\r\n  userName: String;\r\n  stacks: Array<String>;\r\n  area: String;\r\n  level: number;\r\n  _links: {\r\n    self: {\r\n      href: String;\r\n    };\r\n    profileImage: {\r\n      href: String;\r\n    };\r\n  };\r\n};\r\n\r\ntype peoplePage = {\r\n  WantedPeopleListPromise: RequestState;\r\n  peopleListPromise: RequestState;\r\n  peopleList: peopleListType[];\r\n  role: string;\r\n  region: string;\r\n  search: string;\r\n  page: pageType;\r\n  grade: string;\r\n};\r\n\r\ntype peopleAction = {\r\n  getPeopleList: (pageNumber: number, params: Object[]) => Promise<void>;\r\n  getWantedPeopleList: (pageNumber: number) => Promise<void>;\r\n  setPeopleList: Dispatch<SetStateAction<peopleListType[]>>;\r\n  setPage: Dispatch<SetStateAction<pageType>>;\r\n  setRole: Dispatch<SetStateAction<string>>;\r\n  setRegion: Dispatch<SetStateAction<string>>;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  setGrade: Dispatch<SetStateAction<string>>;\r\n};\r\n\r\ntype peopleState = {\r\n  peoplePage: peoplePage;\r\n  peopleAction: peopleAction;\r\n};\r\n\r\nexport function usePeopleListStateTs(): peopleState {\r\n  const [peopleList, setPeopleList] = useState<peopleListType[] | []>([]);\r\n  const [page, setPage] = useState<pageType>({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [grade, setGrade] = useState<string>(\"\");\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [peopleListPromise, { run: getPeopleList }] = useRequest(\r\n    peopleListApi().getPeopleList,\r\n  );\r\n\r\n  const [WantedPeopleListPromise, { run: getWantedPeopleList }] = useRequest(\r\n    peopleListApi().getWantedPeopleList,\r\n  );\r\n  const peoplePage: peoplePage = {\r\n    WantedPeopleListPromise,\r\n    peopleListPromise,\r\n    peopleList,\r\n    page,\r\n    role,\r\n    region,\r\n    search,\r\n    grade,\r\n  };\r\n\r\n  const peopleAction: peopleAction = {\r\n    setPeopleList,\r\n    setPage,\r\n    setRole,\r\n    setRegion,\r\n    setSearch,\r\n    setGrade,\r\n    getPeopleList,\r\n    getWantedPeopleList,\r\n  };\r\n\r\n  return { peoplePage, peopleAction };\r\n}\r\n\r\nexport function usePeopleListEffectTs(\r\n  peoplePage: peoplePage,\r\n  peopleAction: peopleAction,\r\n) {\r\n  useEffect(() => {\r\n    if (peoplePage.peopleListPromise.fulfilled) {\r\n      if (\"_embedded\" in peoplePage.peopleListPromise.data) {\r\n        peopleAction.setPeopleList(\r\n          peoplePage.peopleListPromise.data._embedded.peopleList,\r\n        );\r\n      }\r\n    }\r\n  }, [peoplePage.peopleListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (peoplePage.peopleListPromise.rejected) {\r\n      if (peoplePage.peopleListPromise.error) {\r\n        peopleAction.setPeopleList([]);\r\n      }\r\n    }\r\n  }, [peoplePage.peopleListPromise.rejected]);\r\n}\r\n\r\nexport function useWantedPeopleListEffectTs(\r\n  peoplePage: peoplePage,\r\n  peopleAction: peopleAction,\r\n) {\r\n  const { alertAction } = useAlert();\r\n  useEffect(() => {\r\n    if (peoplePage.WantedPeopleListPromise.fulfilled) {\r\n      if (\"_embedded\" in peoplePage.WantedPeopleListPromise.data) {\r\n        peopleAction.setPeopleList(\r\n          peoplePage.WantedPeopleListPromise.data._embedded.peopleList,\r\n        );\r\n      }\r\n    }\r\n  }, [peoplePage.WantedPeopleListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (peoplePage.WantedPeopleListPromise.rejected) {\r\n      if (peoplePage.WantedPeopleListPromise.error) {\r\n        peopleAction.setPeopleList([]);\r\n      }\r\n    }\r\n  }, [peoplePage.WantedPeopleListPromise.rejected]);\r\n\r\n  useEffect(() => {\r\n    peopleAction.getWantedPeopleList(0);\r\n  }, []);\r\n}\r\n","import React from \"react\";\r\nimport { Layout, ProjectBox, PeopleBox } from \"../components\";\r\nimport \"./main.css\";\r\nimport { Pagination, Carousel, List, Typography } from \"antd\";\r\nimport {\r\n  useProjectListStateTs,\r\n  useDeadlineProjectListEffect,\r\n} from \"../hook/projectTs\";\r\nimport {\r\n  usePeopleListStateTs,\r\n  useWantedPeopleListEffectTs,\r\n} from \"../hook/peopleTs\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Root() {\r\n  const { projectPage, projectAction } = useProjectListStateTs();\r\n  useDeadlineProjectListEffect(projectPage, projectAction);\r\n\r\n  const { peoplePage, peopleAction } = usePeopleListStateTs();\r\n  useWantedPeopleListEffectTs(peoplePage, peopleAction);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Carousel autoplay>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/1/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/2/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/3/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/4/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n        </Carousel>\r\n        <Title level={3}>마감임박 프로젝트 </Title>\r\n        <List\r\n          loading={projectPage.DeadLineProjectListPromise.pending}\r\n          grid={{\r\n            gutter: 10,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 4,\r\n            xxl: 4,\r\n          }}\r\n          dataSource={projectPage.projectList}\r\n          renderItem={(item: any) => (\r\n            <List.Item>\r\n              <ProjectBox\r\n                data={item}\r\n                url={`/projectDetail/${item.projectId}`}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            onChange={(page: any) =>\r\n              projectAction.getDeadLineProjectListApi(page - 1)\r\n            }\r\n            pageSize={8}\r\n            current={projectPage.page.number + 1}\r\n            total={projectPage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n        <Title level={3}>프로젝트를 찾는 사람들</Title>\r\n        <List\r\n          loading={peoplePage.WantedPeopleListPromise.pending}\r\n          grid={{\r\n            gutter: 10,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 6,\r\n            lg: 6,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }}\r\n          dataSource={peoplePage.peopleList}\r\n          renderItem={(item: any) => (\r\n            <List.Item>\r\n              <PeopleBox data={item} url={`/profile/${item.userId}`} />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\" style={{ marginTop: \"30px\" }}>\r\n          <Pagination\r\n            onChange={(page: any) => peopleAction.getWantedPeopleList(page - 1)}\r\n            pageSize={8}\r\n            current={peoplePage.page.number + 1}\r\n            total={peoplePage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(1),\r\n    width: \"30ch\",\r\n  },\r\n}));\r\nexport function ProjectSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  stack,\r\n  setStack,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setStack(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, stack) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (stack !== \"\") params += `&stack=${stack}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"Seoul\">서울</MenuItem>\r\n              <MenuItem value=\"Gunggi\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"stack\"\r\n              value={stack}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                기술스택\r\n              </MenuItem>\r\n              <MenuItem value=\"ReactJS\">ReactJS</MenuItem>\r\n              <MenuItem value=\"SPRINGBOOT\">SPRINGBOOT</MenuItem>\r\n              <MenuItem value=\"PHP\">PHP</MenuItem>\r\n            </Select>\r\n            <FormHelperText>stack</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outlined\"\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button\r\n            style={{ height: \"auto\" }}\r\n            onClick={() => getPage(role, region, stack)}\r\n          >\r\n            search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function PeopleSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  grade,\r\n  setGrade,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setGrade(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, grade) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (grade !== \"\") params += `&grade=${grade}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              disabled // tmp\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"LEADER\">leader</MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              disabled // tmp\r\n              name=\"grade\"\r\n              value={grade}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                레벨\r\n              </MenuItem>\r\n              <MenuItem value=\"0\">0</MenuItem>\r\n              <MenuItem value=\"1\">1</MenuItem>\r\n              <MenuItem value=\"2\">2</MenuItem>\r\n            </Select>\r\n            <FormHelperText>grade</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              disabled // tmp\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"SEOUL\">서울</MenuItem>\r\n              <MenuItem value=\"GYEONGGI\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              disabled // tmp\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button\r\n            disabled // tmp\r\n            onClick={() => getPage(role, region, grade)}\r\n          >\r\n            search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Layout, ProjectBox } from \"../../components\";\r\nimport { ProjectSort } from \"../../components/List/Sort\";\r\nimport { Alert, List, Pagination, Typography } from \"antd\";\r\nimport {\r\n  useProjectListStateTs,\r\n  useProjectListEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function ProjectListPage() {\r\n  const { projectPage, projectAction } = useProjectListStateTs();\r\n  useProjectListEffectTs(projectPage, projectAction);\r\n  const isToken = useSelector((state: any) => state.login.isToken);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <ProjectSort\r\n          role={projectPage.role}\r\n          setRole={projectAction.setRole}\r\n          region={projectPage.region}\r\n          setRegion={projectAction.setRegion}\r\n          stack={projectPage.stack}\r\n          setStack={projectAction.setStack}\r\n          search={projectPage.search}\r\n          setSearch={projectAction.setSearch}\r\n          getApi={projectAction.getProjectListApi}\r\n        />\r\n        {isToken && <Link to=\"/createProject\">\r\n          <Alert\r\n            message=\"프로젝트 생성을 원하신다면 여기를\r\n          눌러주세요.\"\r\n            type=\"success\"\r\n          />\r\n        </Link>}\r\n\r\n        <Title level={3}>모집 진행 중 프로젝트 </Title>\r\n        <List\r\n          loading={projectPage.projectListPromise.pending}\r\n          grid={{\r\n            gutter: 8,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 4,\r\n            xxl: 4,\r\n          }}\r\n          dataSource={projectPage.projectList}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <ProjectBox\r\n                data={item}\r\n                url={`/projectDetail/${item.projectId}`}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            onChange={(page, pageSize) =>\r\n              projectAction.getProjectListApi(page - 1)\r\n            }\r\n            defaultCurrent={1}\r\n            current={projectPage.page.number+1}\r\n            pageSize={8}\r\n            total={projectPage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst projectDetail = {\r\n    projectName: \"\",\r\n    teamName: \"\",\r\n    endDate: \"2020-10-30T23:59:00\",\r\n    introduction: \"\",\r\n    state: 'RECRUTING',\r\n    projectField: \"\",\r\n    applyCanFile: true,\r\n    needMember: {\r\n        developer: 0,\r\n        designer: 0,\r\n        planner: 0,\r\n        etc: 0\r\n    },\r\n    questions: [],\r\n    currentMember: null,\r\n    memberList: null,\r\n    img: []\r\n}\r\n\r\nconst projectRedux = createSlice({\r\n    name: \"project\",\r\n    initialState: {\r\n        projectDetail,\r\n    },\r\n    reducers: {\r\n        setProject(state, action) {\r\n            state.projectDetail = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setProject } = projectRedux.actions;\r\nexport default projectRedux.reducer;\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  DropdownRole,\r\n  HalfDrawer,\r\n  CenterModal,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setProject } from \"../../reducers/project\";\r\nimport \"./projectDetail.css\";\r\nimport {\r\n  useProjectDetailStateTs,\r\n  useProjectDetailEffectTs,\r\n  useInputProjectApplyStateTs,\r\n  useInputProjectApplyEffectTs,\r\n  useViewProjectApplyStateTs,\r\n  useViewProjectApplyEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { Button, Switch, List, Typography, Card, Input } from \"antd\";\r\nconst ReactMarkdown = require(\"react-markdown\");\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function ProjectDetail() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const { project, projectAction } = useProjectDetailStateTs();\r\n\r\n  useProjectDetailEffectTs(project, projectAction, url[2]);\r\n\r\n  const handleClickUpdate = () => {\r\n    const updateProject = {\r\n      img: [`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`],\r\n      ...project.project,\r\n    };\r\n    dispatch(setProject(updateProject));\r\n  };\r\n\r\n  const needList = [\r\n    {\r\n      title: \"개발자\",\r\n      number: project.project.currentMember.developer,\r\n    },\r\n    {\r\n      title: \"디자이너\",\r\n      number: project.project.currentMember.designer,\r\n    },\r\n    {\r\n      title: \"기획자\",\r\n      number: project.project.currentMember.planner,\r\n    },\r\n    {\r\n      title: \"기타\",\r\n      number: project.project.currentMember.etc,\r\n    },\r\n  ];\r\n\r\n  const allList = [\r\n    {\r\n      title: \"개발자\",\r\n      number: project.project.needMember.developer,\r\n    },\r\n    {\r\n      title: \"디자이너\",\r\n      number: project.project.needMember.designer,\r\n    },\r\n    {\r\n      title: \"기획자\",\r\n      number: project.project.needMember.planner,\r\n    },\r\n    {\r\n      title: \"기타\",\r\n      number: project.project.needMember.etc,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          {project.check.reader ? (\r\n            <div id=\"button\">\r\n              <Link to={`/projectUpdate/${url[2]}`}>\r\n                <Button onClick={handleClickUpdate}>수정하기</Button>\r\n              </Link>\r\n              <Button\r\n                danger\r\n                onClick={projectAction.openDelete}\r\n                style={{ marginLeft: \"20px\" }}\r\n                color=\"danger\"\r\n              >\r\n                삭제하기\r\n              </Button>\r\n              <CenterModal\r\n                header=\"삭제하기\"\r\n                modalFlag={project.check.delete}\r\n                close={projectAction.closeDelete}\r\n                footer={\r\n                  <div className=\"full_div\">\r\n                    <div id=\"button\">\r\n                      <Button\r\n                        color=\"danger\"\r\n                        onClick={() =>\r\n                          projectAction.deleteProjectApi(projectId)\r\n                        }\r\n                      >\r\n                        삭제하기\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n              >\r\n                <div style={{ height: \"12px\" }} />\r\n                <Title level={3}>정말로 삭제하시겠습니까?</Title>\r\n                <div style={{ height: \"12px\" }} />\r\n              </CenterModal>\r\n            </div>\r\n          ) : (\r\n            <div id=\"button\">\r\n              <Button type=\"primary\" onClick={projectAction.openApply}>\r\n                지원서\r\n              </Button>\r\n              <CenterModal\r\n                header=\"지원하기\"\r\n                modalFlag={project.check.applyModal}\r\n                close={projectAction.closeApply}\r\n              >\r\n                {console.log(project.project._links)}\r\n                <ApplyProject\r\n                  questions={project.project.questions}\r\n                  projectId={projectId}\r\n                  apiLink={project.project._links.apply.href}\r\n                  detailGet={project.getProject.fulfilled}\r\n                  close={projectAction.closeApply}\r\n                />\r\n              </CenterModal>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <img\r\n              id=\"cover\"\r\n              src={`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`}\r\n              alt=\"temp\"\r\n            />\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            {/* <div id=\"tag_case\"> */}\r\n            <div>\r\n              <span id=\"tag\">{project.project.projectField}</span>\r\n            </div>\r\n            <Title level={1}>{project.project.projectName}</Title>\r\n            <Title level={4}>{project.project.teamName}</Title>\r\n            <Title level={5}>마감일 : {project.project.endDate}</Title>\r\n            <div id=\"list\">\r\n              <div className=\"half_div_left\">\r\n                <List\r\n                  className=\"demo-loadmore-list\"\r\n                  itemLayout=\"horizontal\"\r\n                  size=\"large\"\r\n                  header={<div>모집 중 인원</div>}\r\n                  bordered\r\n                  loading={project.getProject.pending}\r\n                  dataSource={needList}\r\n                  renderItem={(item) => {\r\n                    return (\r\n                      <List.Item key={item.title}>\r\n                        <List.Item.Meta title={<div>{item.title}</div>} />\r\n                        <div>{item.number}명</div>\r\n                      </List.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"half_div_right\">\r\n                <List\r\n                  className=\"demo-loadmore-list\"\r\n                  itemLayout=\"horizontal\"\r\n                  size=\"large\"\r\n                  header={<div>전체 인원</div>}\r\n                  bordered\r\n                  loading={project.getProject.pending}\r\n                  dataSource={allList}\r\n                  renderItem={(item) => {\r\n                    return (\r\n                      <List.Item key={item.title}>\r\n                        <List.Item.Meta title={<div>{item.title}</div>} />\r\n                        <div>{item.number}명</div>\r\n                      </List.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Title level={3}>소개</Title>\r\n        <ReactMarkdown\r\n          source={project.project.introduction}\r\n          className=\"introduction\"\r\n        />\r\n        {project.check.reader && (\r\n          <div>\r\n            <div>\r\n              <Title\r\n                level={5}\r\n                style={{\r\n                  lineHeight: \"22px\",\r\n                  marginRight: \"10px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                지원자 목록\r\n              </Title>\r\n              <Switch\r\n                onChange={(checked: boolean) =>\r\n                  projectAction.checkSwitch(\"apply\", checked)\r\n                }\r\n              />\r\n              {project.check.apply &&\r\n                (project.apply.length === 0 ? (\r\n                  <div>지원자가 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List\r\n                      itemLayout=\"vertical\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          project.apply[project.pagination.apply].state ===\r\n                          \"REJECT\"\r\n                            ? \"#eeeeee\"\r\n                            : project.apply[project.pagination.apply].state ===\r\n                              \"ACCEPT\"\r\n                            ? \"rgb(212, 237, 218, 0.3)\"\r\n                            : \"#ffffff\",\r\n                      }}\r\n                      dataSource={project.apply}\r\n                      header={\r\n                        <div>\r\n                          <b>지원 현황</b>\r\n                        </div>\r\n                      }\r\n                      pagination={{\r\n                        onChange: (page) => {\r\n                          console.log(page);\r\n                        },\r\n                        pageSize: 1,\r\n                      }}\r\n                      renderItem={(item) => {\r\n                        return (\r\n                          <List.Item key={item.userName}>{item.role}</List.Item>\r\n                        );\r\n                      }}\r\n                    >\r\n                      {/* <ListItem>\r\n                      <ListItemText\r\n                        primary={`이름 : ${\r\n                          project.apply[project.pagination.apply].userName\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`역할 : ${\r\n                          project.apply[project.pagination.apply].role\r\n                        }`}\r\n                      />\r\n                    </ListItem> */}\r\n                      <Button onClick={projectAction.openDetailApply}>\r\n                        상세보기\r\n                      </Button>\r\n                      <Button\r\n                        disabled={project.pagination.apply === 0}\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", -1)\r\n                        }\r\n                      >\r\n                        이전\r\n                      </Button>\r\n                      <Button\r\n                        disabled={\r\n                          project.apply.length - project.pagination.apply < 2\r\n                        }\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", 1)\r\n                        }\r\n                      >\r\n                        다음\r\n                      </Button>\r\n                    </List>\r\n                    <CenterModal\r\n                      header=\"지원자 상세 정보\"\r\n                      modalFlag={project.check.applyDetail}\r\n                      close={projectAction.closeDetailApply}\r\n                    >\r\n                      <ViewProjectApply\r\n                        open={project.check.applyDetail}\r\n                        close={projectAction.closeDetailApply}\r\n                        applyLink={\r\n                          project.apply[project.pagination.apply]._links.self\r\n                            .href\r\n                        }\r\n                        applySet={projectAction.setApply}\r\n                        userId={project.apply[project.pagination.apply].userId}\r\n                        setPagination={() =>\r\n                          projectAction.clickPagination(\"apply\", 0)\r\n                        }\r\n                      />\r\n                    </CenterModal>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Title\r\n                level={5}\r\n                style={{\r\n                  lineHeight: \"22px\",\r\n                  marginRight: \"10px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                요청 목록\r\n              </Title>\r\n              <Switch\r\n                onChange={(checked: boolean) =>\r\n                  projectAction.checkSwitch(\"recruit\", checked)\r\n                }\r\n              />\r\n              {project.check.recruit &&\r\n                (project.recruit.length === 0 ? (\r\n                  <div>요청이 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List\r\n                      itemLayout=\"vertical\"\r\n                      size=\"large\"\r\n                      header={<div>지원 상태</div>}\r\n                      bordered\r\n                      dataSource={project.recruit}\r\n                      pagination={{\r\n                        onChange: (page) => {\r\n                          console.log(page);\r\n                        },\r\n                        pageSize: 1,\r\n                      }}\r\n                      renderItem={(item) => {\r\n                        return (\r\n                          <List.Item>\r\n                            <Card title={item.userName}>\r\n                              <div>역할: {item.role}</div>\r\n                              <div>자기소개: {item.introduction}</div>\r\n                              <div>상태: {item.state}</div>\r\n                            </Card>\r\n                          </List.Item>\r\n                        );\r\n                      }}\r\n                    />\r\n                    {/* <List dense>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`이름 : ${\r\n                          project.recruit[project.pagination.recruit].userName\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`역할 : ${\r\n                          project.recruit[project.pagination.recruit].role\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`자기소개 : ${\r\n                          project.recruit[project.pagination.recruit]\r\n                            .introduction\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`상태 : ${\r\n                          project.recruit[project.pagination.recruit].state\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                  </List> */}\r\n                    <Button\r\n                      disabled={project.pagination.recruit === 0}\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", -1)\r\n                      }\r\n                    >\r\n                      이전\r\n                    </Button>\r\n                    <Button\r\n                      disabled={\r\n                        project.recruit.length - project.pagination.recruit < 2\r\n                      }\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", 1)\r\n                      }\r\n                    >\r\n                      다음\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst ApplyProject = (props: any) => {\r\n  const { questions, projectId, apiLink, detailGet, close } = props;\r\n  const { apply, applyAction } = useInputProjectApplyStateTs();\r\n  useInputProjectApplyEffectTs(\r\n    apply,\r\n    applyAction,\r\n    questions,\r\n    detailGet,\r\n    apiLink,\r\n    close,\r\n  );\r\n\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {apply.apply.answers.map((a, i) => (\r\n        <div>\r\n          <label htmlFor={`q${i}`} style={{ fontSize: \"15px\" }}>\r\n            {i + 1}번 질문 : {questions[i]}\r\n          </label>\r\n          <Input\r\n            id={`q${i}`}\r\n            placeholder=\"answer\"\r\n            name=\"answer\"\r\n            onChange={(e) => applyAction.inputAnswer(e.target.value, i)}\r\n            value={a}\r\n          />\r\n        </div>\r\n      ))}\r\n      <label\r\n        htmlFor=\"introduction\"\r\n        style={{ marginBottom: \"0px\", marginTop: \"15px\", fontSize: \"16px\" }}\r\n      >\r\n        자기 소개\r\n      </label>\r\n      <Input.TextArea\r\n        id=\"introduction\"\r\n        name=\"introduction\"\r\n        placeholder=\"자기소개\"\r\n        onChange={(e) => applyAction.inputApply(e.target.name, e.target.value)}\r\n        value={apply.apply.introduction}\r\n        autoSize={{ minRows: 3, maxRows: 10 }}\r\n      />\r\n      <DropdownRole\r\n        style={{ width: \"100%\", marginTop: \"12px\" }}\r\n        dropdownCaret=\"역할 선택\"\r\n        action={applyAction.selectRole}\r\n        pick={apply.apply.role}\r\n      />\r\n      <div className=\"full_div\" style={{ marginTop: \"12px\" }}>\r\n        <div id=\"button\">\r\n          {apply.applied ? (\r\n            <Button\r\n              type=\"primary\"\r\n              loading={apply.putApply.pending}\r\n              onClick={() => {\r\n                applyAction.putApplyApi(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  apiLink,\r\n                );\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              loading={apply.postApply.pending}\r\n              onClick={() => {\r\n                applyAction.postApplyApi(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  apiLink,\r\n                );\r\n              }}\r\n            >\r\n              지원하기\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewProjectApply = (props: any) => {\r\n  const { open, close, applyLink, applySet, userId, setPagination } = props;\r\n  const { applyDetail, applyDetailAction } = useViewProjectApplyStateTs();\r\n\r\n  useViewProjectApplyEffectTs(\r\n    applyDetail,\r\n    applyDetailAction,\r\n    open,\r\n    applyLink,\r\n    applySet,\r\n    userId,\r\n    close,\r\n  );\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {applyDetail.apply.answers.map((a: string, i: number) => (\r\n        <div>\r\n          <Title level={5}>\r\n            {\" \"}\r\n            {i + 1}번 질문 : {applyDetail.apply.questions[i]}\r\n          </Title>\r\n          <Title level={5}>{a}</Title>\r\n          <div style={{ height: \"12px\" }} />\r\n        </div>\r\n      ))}\r\n      <label htmlFor=\"exampleEmail\" style={{ marginBottom: \"0px\" }}>\r\n        자기 소개\r\n      </label>\r\n      <Title level={5}>{applyDetail.apply.introduction}</Title>\r\n      <div style={{ height: \"12px\" }} />\r\n      <Title level={5}>지원 분야 : {applyDetail.apply.role}</Title>\r\n      <div style={{ height: \"12px\" }} />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          <Button\r\n            onClick={() => {\r\n              applyDetailAction.putApplyApi(applyLink);\r\n            }}\r\n          >\r\n            수락\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              applyDetailAction.deleteApplyApi(applyLink);\r\n            }}\r\n          >\r\n            거절\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"12px\" }} />\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \".\";\r\nimport { RequestState } from \"./useRequest\";\r\n\r\n\r\nexport const useImageSave = (\r\n  postImg: RequestState,\r\n  nextUrl: string\r\n) => {\r\n    const { alertAction } = useAlert();\r\n    const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (postImg.fulfilled) {\r\n      const projectId = postImg.data.fileName.split(\".\");\r\n      history.push(`${nextUrl}/${projectId[0]}`);\r\n    }\r\n  }, [postImg.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (postImg.rejected) {\r\n        alertAction.open(postImg.error.response.data.message);\r\n      console.log(postImg.error);\r\n    }\r\n  }, [postImg.rejected]);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  useProjectCreateEffectTs,\r\n  useProjectCreateStateTS,\r\n} from \"../../hook/projectTs\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useImageSave } from \"../../hook/useImage\";\r\n\r\nexport default function ProjectCreate() {\r\n  const { createState, createAction } = useProjectCreateStateTS();\r\n  useImageSave(createState.createImg, \"/projectDetail\");\r\n  useProjectCreateEffectTs(createState, createAction);\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button\r\n              loading={\r\n                createState.createProject.pending ||\r\n                createState.createImg.pending\r\n              }\r\n              onClick={() => createAction.createProjectApi(createState.project)}\r\n            >\r\n              Make Project\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={createState.img} saveImg={createAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <label htmlFor=\"exampleEmail\">Project Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"createState name\"\r\n              value={createState.project.projectName}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                createAction.inputProject(e.target.name, e.target.value)\r\n              }\r\n            />\r\n            <label htmlFor=\"exampleEmail\">Team Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                createAction.inputProject(e.target.name, e.target.value)\r\n              }\r\n              value={createState.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <label htmlFor=\"exampleEmail\">Recruit People</label>\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Developer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"developer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.developer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Designer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"designer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.designer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Planner</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"planner\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.planner}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Etc</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"etc\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.etc}\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <label htmlFor=\"exampleEmail\">End Date</label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={createState.project.endDate}\r\n                  onChange={(date) => createAction.inputDate(date)}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n\r\n              <label htmlFor=\"exampleEmail\">Role</label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={createAction.inputField}\r\n                pick={createState.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <label htmlFor=\"exampleEmail\">Introduction</label>\r\n          <BootstrapInput\r\n            multiline\r\n            type=\"name\"\r\n            name=\"introduction\"\r\n            placeholder=\"introduction\"\r\n            value={createState.project.introduction}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              createAction.inputProject(e.target.name, e.target.value)\r\n            }\r\n            fullWidth\r\n          />\r\n          <label htmlFor=\"exampleEmail\">Questions</label>\r\n          {createState.project.questions.map((value, index) => {\r\n            const questionString = `Question ${index + 1}`;\r\n            return (\r\n              <div>\r\n                <Input\r\n                  addonBefore={questionString}\r\n                  addonAfter={\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => createAction.deleteQuestion(index)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                  }\r\n                  placeholder=\"question\"\r\n                  name=\"questions\"\r\n                  onChange={(e) =>\r\n                    createAction.inputQuestion(e.target.value, index)\r\n                  }\r\n                  value={value}\r\n                />\r\n                <div style={{ height: \"12px\" }} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button onClick={createAction.addQuestion}>Add Questions</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  useProjectUpdateStateTs,\r\n  useProjectUpdateEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { useImageSave } from \"../../hook/useImage\";\r\nimport { Button, Input } from \"antd\";\r\n\r\nexport default function ProjectUpdate() {\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const { updateState, updateAction } = useProjectUpdateStateTs();\r\n\r\n  useProjectUpdateEffectTs(updateState, updateAction, url[2]);\r\n\r\n  useImageSave(updateState.updateImg, \"projectDetail\");\r\n  const handleClickUpdate = () => {\r\n    const updateData = {\r\n      projectName: updateState.project.projectName,\r\n      teamName: updateState.project.teamName,\r\n      endDate: updateState.project.endDate,\r\n      introduction: updateState.project.introduction,\r\n      state: updateState.project.state,\r\n      projectField: updateState.project.projectField,\r\n      applyCanFile: updateState.project.applyCanFile,\r\n      needMember: {\r\n        developer: updateState.project.needMember.developer,\r\n        designer: updateState.project.needMember.designer,\r\n        planner: updateState.project.needMember.planner,\r\n        etc: updateState.project.needMember.etc,\r\n      },\r\n      questions: updateState.project.questions,\r\n    };\r\n    updateAction.UpdateProjectApi(projectId, updateData);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button\r\n              loading={\r\n                updateState.updateImg.pending ||\r\n                updateState.updateProject.pending\r\n              }\r\n              onClick={handleClickUpdate}\r\n            >\r\n              Update Project\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={updateState.img} saveImg={updateAction.setImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <label htmlFor=\"exampleEmail\">Project Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              onChange={updateAction.inputProject}\r\n              value={updateState.project.projectName}\r\n            />\r\n            <label htmlFor=\"exampleEmail\">Team Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={updateAction.inputProject}\r\n              value={updateState.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <label htmlFor=\"exampleEmail\">Recruit People</label>\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Developer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"developer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.developer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Designer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"designer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.designer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Planner</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"planner\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.planner}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Etc</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"etc\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.etc}\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <label htmlFor=\"exampleEmail\">End Date</label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={updateState.project.endDate}\r\n                  onChange={(date) => updateAction.inputDate(date)}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <label htmlFor=\"exampleEmail\">Role</label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={updateAction.inputField}\r\n                pick={updateState.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginTop: '20px'}}>\r\n          <div>\r\n            <label htmlFor=\"exampleEmail\">Introduction</label>\r\n            <BootstrapInput\r\n              multiline\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={updateState.project.introduction}\r\n              onChange={updateAction.inputProject}\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <label htmlFor=\"exampleEmail\">Questions</label>\r\n          {updateState.project.questions.map((value: string, index: number) => {\r\n            const questionString = `Question ${index + 1}`;\r\n            return (\r\n              <div>\r\n                <Input\r\n                  addonBefore={questionString}\r\n                  addonAfter={\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => updateAction.deleteQuestion(index)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                  }\r\n                  placeholder=\"question\"\r\n                  name=\"questions\"\r\n                  onChange={(e) =>\r\n                    updateAction.inputQuestion(e.target.value, index)\r\n                  }\r\n                  value={value}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button onClick={updateAction.addQuestion}>Add Questions</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Form, Input, Typography } from \"antd\";\r\nimport { Layout } from \"../../components\";\r\nimport { useRegisterEffect } from \"../../hook/auth\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  const {loading, onFinish, onFinishFailed} = useRegisterEffect();\r\n\r\n  return (\r\n    <Layout>\r\n      <Title level={3} className=\"login_title\">Create your Account</Title>\r\n      <div className=\"login_box\">\r\n        <Form\r\n          {...layout}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          name=\"register\"\r\n        >\r\n          <Form.Item\r\n            label=\"UserId\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"ID를 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"UserEmail\"\r\n            name=\"userEmail\"\r\n            rules={[{ required: true, message: \"Email을 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Name을 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력하셔야 합니다.\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"password\" className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n              회원가입\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useProfileProject = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getProjectApi,\r\n\r\n  setList,\r\n  hiding,\r\n\r\n  userId\r\n) => {\r\n  const check = useSelector(state => state.profile.isHideChange);\r\n\r\n  // hide 변경사항이 있으면 다시 get요청\r\n  useEffect(() => {\r\n    if (check) {\r\n      getProjectApi(userId);\r\n    }\r\n  }, [check, userId]);\r\n\r\n  // 요청 성공시\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProject;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst profileRedux = createSlice({\r\n  name: \"hide\",\r\n  initialState: {\r\n    isHideChange: true\r\n  },\r\n  reducers: {\r\n    setHideChange(state, action) {\r\n      state.isHideChange = action.payload.isHideChange;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setHideChange } = profileRedux.actions;\r\nexport default profileRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useProfileProjectModify = (\r\n  resGetProject,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjectError,\r\n  getHideProjectApi,\r\n\r\n  resHideProject,\r\n  hideProjectFulfilled,\r\n  hideProjectRejected,\r\n  hideProjectError,\r\n\r\n  resDisplayProject,\r\n  displayProjectFulfilled,\r\n  displayProjectRejected,\r\n  displayProjectError,\r\n\r\n  userId,\r\n\r\n  list,\r\n  setList,\r\n\r\n  hideList,\r\n  setHideList\r\n) => {\r\n  // 처음 로딩 시 숨겨진 프로젝트 목록 불러오기\r\n  useEffect(() => {\r\n    getHideProjectApi(userId);\r\n  }, []);\r\n\r\n  // 불러오기 성공시 , 불러온 내부에 프로젝트 데이터가 있으면 숨김 state에 저장\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      if (resGetProject.page.totalElements) {\r\n        setHideList(resGetProject._embedded.projectList);\r\n      }\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  // 숨기기 요청 성공시\r\n  useEffect(() => {\r\n    if (hideProjectFulfilled) {\r\n      let moveData = {};\r\n      // 일반 state list에서 선택한 project 제거\r\n      setList(\r\n        list.filter(a => {\r\n          if (a.projectId === resHideProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n\r\n      // 숨김 state list에서 위에서 선택된 project 추가\r\n      setHideList(hideList => {\r\n        const newList = hideList.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [hideProjectFulfilled]);\r\n\r\n  // 보여주기 요청 성공시\r\n  useEffect(() => {\r\n    if (displayProjectFulfilled) {\r\n      let moveData = {};\r\n      // 숨김 state list에서 선택한 project 제거\r\n      setHideList(\r\n        hideList.filter(a => {\r\n          if (a.projectId === resDisplayProject.projectId) {\r\n            moveData = a;\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n      // 일반 state list에 선택된 프로젝트 추가\r\n      setList(list => {\r\n        const newList = list.concat(moveData);\r\n        return newList;\r\n      });\r\n    }\r\n  }, [displayProjectFulfilled]);\r\n};\r\n\r\nexport default useProfileProjectModify;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { planProjectApi, hideProjectApi } from \"../../../../hook/api\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyPlanProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = planProjectApi();\r\n  const { hideProject, displayProject } = hideProjectApi();\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getHideProjectApi },\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError,\r\n    },\r\n    { run: hideProjectFetchApi },\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError,\r\n    },\r\n    { run: displayProjectApi },\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList,\r\n  );\r\n\r\n  const handleHide = (id) => {\r\n    hideProjectFetchApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = (id) => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyPlanProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { runningProjectApi } from \"../../../../hook/api\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyRunningProjects from \"./ModifyPlanProjects\";\r\n\r\nconst RunningProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n  const { getProject } = runningProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId,\r\n  );\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyRunningProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunningProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { endedProjectApi, hideProjectApi } from \"../../../../hook/api\";\r\nimport useProfileProjectModify from \"../../../../hook/profile/useProfileProjectModify\";\r\nimport \"./profileProject.css\";\r\n\r\nconst ModifyEndedProjects = ({ list, setList, userId }) => {\r\n  const [hideList, setHideList] = useState([]);\r\n  const { getHideProject } = endedProjectApi();\r\n  const { hideProject, displayProject } = hideProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getHideProjectApi },\r\n  ] = useRequest(getHideProject);\r\n\r\n  const [\r\n    {\r\n      data: resHideProject,\r\n      fulfilled: hideProjectFulfilled,\r\n      pending: hideProjectPending,\r\n      rejected: hideProjectRejected,\r\n      error: hideProjectError,\r\n    },\r\n    { run: hideProjectFetchApi },\r\n  ] = useRequest(hideProject);\r\n\r\n  const [\r\n    {\r\n      data: resDisplayProject,\r\n      fulfilled: displayProjectFulfilled,\r\n      pending: displayProjectPending,\r\n      rejected: displayProjectRejected,\r\n      error: displayProjectError,\r\n    },\r\n    { run: displayProjectApi },\r\n  ] = useRequest(displayProject);\r\n\r\n  useProfileProjectModify(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getHideProjectApi,\r\n\r\n    resHideProject,\r\n    hideProjectFulfilled,\r\n    hideProjectRejected,\r\n    hideProjectError,\r\n\r\n    resDisplayProject,\r\n    displayProjectFulfilled,\r\n    displayProjectRejected,\r\n    displayProjectError,\r\n\r\n    userId,\r\n\r\n    list,\r\n    setList,\r\n\r\n    hideList,\r\n    setHideList,\r\n  );\r\n\r\n  const handleHide = (id) => {\r\n    hideProjectFetchApi(userId, id);\r\n  };\r\n\r\n  const handleDisplay = (id) => {\r\n    displayProjectApi(userId, id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-projects\">\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"hide-botton\"\r\n                onClick={() => handleHide(value.projectId)}\r\n              >\r\n                Hide\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"hidden-projects\">\r\n        <Row xs=\"3\">\r\n          {hideList.map((value, index) => (\r\n            <Col key={index}>\r\n              <Button\r\n                className=\"display-botton\"\r\n                onClick={() => handleDisplay(value.projectId)}\r\n              >\r\n                Display\r\n              </Button>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModifyEndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { endedProjectApi } from \"../../../../hook/api\";\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"./profileProject.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyEndedProjects from \"./ModifyEndedProjects\";\r\n\r\nconst EndedProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = endedProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId,\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyEndedProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndedProjects;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { useRequest } from \"../../../../hook/useRequest\";\r\nimport ProjectBox from \"../../../Project/ProjectBox\";\r\nimport { planProjectApi } from \"../../../../hook/api\";\r\n// 잠시 ended 훅을 공유해서 써보자\r\nimport useProfileProject from \"../../../../hook/profile/useProfileProject\";\r\nimport \"../Profile.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHideChange } from \"../../../../reducers/profile\";\r\n\r\nimport ModifyPlanProjects from \"./ModifyPlanProjects\";\r\n\r\nconst PlanProjects = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myId = useSelector((state) => state.login.userId);\r\n\r\n  const [hiding, setHiding] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const hideToggle = () => {\r\n    if (hiding) {\r\n      setHiding(false);\r\n      const reduxData = {\r\n        isHideChange: true,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    } else {\r\n      setHiding(true);\r\n      const reduxData = {\r\n        isHideChange: false,\r\n      };\r\n      dispatch(setHideChange(reduxData));\r\n    }\r\n  };\r\n\r\n  const { getProject } = planProjectApi();\r\n\r\n  const [\r\n    {\r\n      data: resGetProject,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getProject);\r\n\r\n  useProfileProject(\r\n    resGetProject,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    setList,\r\n    hiding,\r\n\r\n    userId,\r\n  );\r\n\r\n  return (\r\n    <div className=\"insideTab\">\r\n      {hiding ? (\r\n        <ModifyPlanProjects list={list} setList={setList} userId={userId} />\r\n      ) : getProjectPending ? (\r\n        <p>로딩중...</p>\r\n      ) : (\r\n        <Row xs=\"3\">\r\n          {list.map((value, index) => (\r\n            <Col key={index}>\r\n              <ProjectBox\r\n                data={value}\r\n                url={`/projectDetail/${value.projectId}`}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      {myId === userId && (\r\n        <div>\r\n          <Button id=\"hide-toggle-button\" onClick={hideToggle}>\r\n            Hide\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanProjects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useAlert from \"../useAlert\";\r\n\r\nconst useProfileRecruit = (\r\n  getProjectData,\r\n  getProjectFulfilled,\r\n  getProjectRejected,\r\n  getProjecsError,\r\n  getProjectApi,\r\n\r\n  postRecruitData,\r\n  postRecruitFulfilled,\r\n  postRecruitRejected,\r\n  postRecruitError,\r\n\r\n  toggleNested,\r\n  setNestedMessage,\r\n) => {\r\n  const [plannedProjects, setPlannedProjects] = useState([]);\r\n  const myId = useSelector((state) => state.login.userId);\r\n  const { alertAction } = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (myId) {\r\n      getProjectApi(myId);\r\n    }\r\n  }, [myId]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectFulfilled) {\r\n      // console.log(getProjectData);\r\n      setPlannedProjects(getProjectData);\r\n    }\r\n  }, [getProjectFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (getProjectRejected) {\r\n      if (getProjecsError) {\r\n        alertAction.open(getProjecsError.response.data.message);\r\n        console.log(getProjecsError);\r\n      }\r\n    }\r\n  }, [getProjectRejected]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitFulfilled) {\r\n      setNestedMessage({\r\n        status: true,\r\n        message: \"영입 메시지를 성공적으로 전달했습니다!\",\r\n      });\r\n      toggleNested();\r\n    }\r\n  }, [postRecruitFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (postRecruitRejected) {\r\n      if (postRecruitError) {\r\n        console.log(postRecruitError);\r\n        setNestedMessage({\r\n          status: false,\r\n          message: \"오류가 발생했습니다. 다시 시도해주세요.\",\r\n        });\r\n        toggleNested();\r\n      }\r\n    }\r\n  }, [postRecruitRejected]);\r\n  return { plannedProjects };\r\n};\r\n\r\nexport default useProfileRecruit;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { planProjectApi, sendRecruitPeopleApi } from \"../../../hook/api\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Profile.css\";\r\nimport { useRequest } from \"../../../hook\";\r\nimport useProfileRecruit from \"../../../hook/profile/useProfileRecruit\";\r\n\r\nconst RecruitModal = ({ modal, toggle, userId }) => {\r\n  // 내부 State\r\n  const [recruitState, setRecruitState] = useState({\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectId: \"\",\r\n  });\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n  const [nestedMessage, setNestedMessage] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  });\r\n\r\n  // 내부 모달 띄우기\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n\r\n  // Recruit 요청 실패시, 내부 모달창만 닫기 + 내부 state 유지\r\n  // Recruit 요청 성공시, 모든 모달창 닫기 + 내부 state 초기화\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    if (nestedMessage.status) {\r\n      setCloseAll(true);\r\n      setRecruitState({\r\n        introduction: \"\",\r\n        role: \"\",\r\n        projectId: \"\",\r\n      });\r\n    } else {\r\n      setCloseAll(false);\r\n    }\r\n  };\r\n\r\n  const { getAllPlannedProject } = planProjectApi();\r\n  const { postRecruit } = sendRecruitPeopleApi();\r\n\r\n  const [\r\n    {\r\n      data: getProjectData,\r\n      fulfilled: getProjectFulfilled,\r\n      pending: getProjectPending,\r\n      rejected: getProjectRejected,\r\n      error: getProjectError,\r\n    },\r\n    { run: getProjectApi },\r\n  ] = useRequest(getAllPlannedProject);\r\n\r\n  const [\r\n    {\r\n      data: postRecruitData,\r\n      fulfilled: postRecruitFulfilled,\r\n      pending: postRecruitPending,\r\n      rejected: postRecruitRejected,\r\n      error: postRecruitError,\r\n    },\r\n    { run: postRecruitApi },\r\n  ] = useRequest(postRecruit);\r\n\r\n  const { plannedProjects } = useProfileRecruit(\r\n    getProjectData,\r\n    getProjectFulfilled,\r\n    getProjectRejected,\r\n    getProjectError,\r\n    getProjectApi,\r\n\r\n    postRecruitData,\r\n    postRecruitFulfilled,\r\n    postRecruitRejected,\r\n    postRecruitError,\r\n\r\n    toggleNested,\r\n    setNestedMessage,\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setRecruitState({\r\n      ...recruitState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    postRecruitApi(userId, recruitState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>프로젝트 선택</InputLabel>\r\n          <Select\r\n            value={recruitState.projectId}\r\n            name=\"projectId\"\r\n            onChange={handleChange}\r\n          >\r\n            {plannedProjects &&\r\n              plannedProjects.map((pj, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={pj.projectId}>\r\n                    {pj.projectName}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n        <FormControl>\r\n          <InputLabel>제안할 역할</InputLabel>\r\n          <Select value={recruitState.role} name=\"role\" onChange={handleChange}>\r\n            <MenuItem value={\"DEVELOPER\"}>DEVELOPER</MenuItem>\r\n            <MenuItem value={\"DESIGNER\"}>DESIGNER</MenuItem>\r\n            <MenuItem value={\"LEADER\"}>LEADER</MenuItem>\r\n            <MenuItem value={\"ETC\"}>ETC</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <br />\r\n\r\n        <TextField\r\n          label=\"영입 제안 메시지를 입력하세요.\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          name=\"introduction\"\r\n          value={recruitState.introduction}\r\n          onChange={handleChange}\r\n        />\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleSubmit}>\r\n            Send\r\n          </Button>\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalBody>{nestedMessage.message}</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecruitModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useRequest } from \"../useRequest\";\r\nimport { invitationListApi } from \"../api\";\r\nimport { invitationDetailApi } from \"../api\";\r\n\r\nexport const useInvitationEffect = (userId) => {\r\n  const [invitationList, setInvitationList] = useState([]);\r\n  const [noList, setNoList] = useState({ isError: false, errorMessage: \"\" });\r\n\r\n  const noticeNoList = (message) => {\r\n    setNoList({\r\n      isError: true,\r\n      errorMessage: message,\r\n    });\r\n  };\r\n\r\n  const { getInvitationList } = invitationListApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationListApi },\r\n  ] = useRequest(getInvitationList);\r\n\r\n  useEffect(() => {\r\n    getInvitationListApi(userId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // 데이터가 있을 때\r\n      if (\"_embedded\" in data) {\r\n        setInvitationList(data._embedded.recruitDtoList);\r\n      }\r\n      // 데이터가 없을 때\r\n      else {\r\n        noticeNoList(\"초대 요청이 없습니다.\");\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error && error.response.data.error === \"105\") {\r\n        console.log(\"rej\");\r\n        noticeNoList(error.response.data.message);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n\r\n  return { pending, invitationList, noList };\r\n};\r\n\r\nexport const useInvitationDetailEffect = (userId, pid, toggleNested) => {\r\n  const [invitaionDetail, setInvitaionDetail] = useState({\r\n    userName: \"\",\r\n    introduction: \"\",\r\n    role: \"\",\r\n    projectName: \"\",\r\n    state: \"\",\r\n  });\r\n  const [activityName, setActivityName] = useState(\"\");\r\n\r\n  const handleAccept = () => {\r\n    putInvitationAcceptApi(userId, pid);\r\n  };\r\n\r\n  const handleReject = () => {\r\n    deleteInvitationRejectApi(userId, pid);\r\n  };\r\n\r\n  const {\r\n    getInvitationDetail,\r\n    putInvitationAccept,\r\n    deleteInvitationReject,\r\n  } = invitationDetailApi();\r\n\r\n  const [\r\n    { data, error, pending, fulfilled, rejected },\r\n    { run: getInvitationDetailApi },\r\n  ] = useRequest(getInvitationDetail);\r\n\r\n  const [\r\n    {\r\n      data: putData,\r\n      error: putError,\r\n      pending: putPending,\r\n      fulfilled: putFulfilled,\r\n      reject: putRejected,\r\n    },\r\n    { run: putInvitationAcceptApi },\r\n  ] = useRequest(putInvitationAccept);\r\n\r\n  const [\r\n    {\r\n      data: deleteData,\r\n      error: deleteError,\r\n      pending: deletePending,\r\n      fulfilled: deleteFulfilled,\r\n      reject: deleteRejected,\r\n    },\r\n    { run: deleteInvitationRejectApi },\r\n  ] = useRequest(deleteInvitationReject);\r\n\r\n  useEffect(() => {\r\n    getInvitationDetailApi(userId, pid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      setInvitaionDetail({\r\n        userName: data.userName,\r\n        introduction: data.introduction,\r\n        projectName: data.projectName,\r\n        role: data.role,\r\n        state: data.state,\r\n      });\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (putFulfilled) {\r\n      setActivityName(\"수락\");\r\n      toggleNested();\r\n    }\r\n  }, [putFulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (deleteFulfilled) {\r\n      setActivityName(\"거절\");\r\n      toggleNested();\r\n    }\r\n  }, [deleteFulfilled]);\r\n\r\n  return [\r\n    {\r\n      invitaionDetail,\r\n      activityName,\r\n    },\r\n    {\r\n      handleAccept,\r\n      handleReject,\r\n    },\r\n  ];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  CardText\r\n} from \"reactstrap\";\r\nimport { useInvitationDetailEffect } from \"../../../../hook/profile/useInvitation\";\r\n\r\nconst DetailModal = ({ pid, userId, modal, toggle }) => {\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [closeAll, setCloseAll] = useState(false);\r\n\r\n  const toggleNested = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(false);\r\n  };\r\n  const toggleAll = () => {\r\n    setNestedModal(!nestedModal);\r\n    setCloseAll(true);\r\n  };\r\n\r\n  const [\r\n    { invitaionDetail, activityName },\r\n    { handleAccept, handleReject }\r\n  ] = useInvitationDetailEffect(userId, pid, toggleNested);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>{invitaionDetail.projectName}</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <Row xs=\"2\">\r\n            <Col>\r\n              <div>\r\n                <Badge color=\"info\" pill>\r\n                  {invitaionDetail.role}\r\n                </Badge>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <p> status : {invitaionDetail.state}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card body style={{ height: \"200px\" }}>\r\n            <CardText>{invitaionDetail.introduction}</CardText>\r\n          </Card>\r\n          <div> {invitaionDetail.userName}</div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {invitaionDetail.state === \"READ\" && (\r\n            <>\r\n              <Button color=\"primary\" onClick={handleAccept}>\r\n                Accept\r\n              </Button>\r\n              <Button color=\"danger\" onClick={handleReject}>\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          <Modal\r\n            isOpen={nestedModal}\r\n            toggle={toggleNested}\r\n            onClosed={closeAll ? toggle : undefined}\r\n          >\r\n            <ModalHeader>Nested Modal title</ModalHeader>\r\n            <ModalBody>{activityName}이 완료되었습니다.</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggleAll}>\r\n                All Done\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, CardTitle, CardText, Row, Col, Badge } from \"reactstrap\";\r\nimport DetailModal from \"./DetailModal\";\r\nconst InvitationBox = ({ data, userId }) => {\r\n  const [detailModal, setDetailModal] = useState(false);\r\n  const detailModalToggle = () => {\r\n    setDetailModal(!detailModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card body onClick={detailModalToggle}>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"8\">\r\n              <CardTitle>{data.projectName}</CardTitle>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Badge color=\"info\" pill>\r\n                {data.role}\r\n              </Badge>\r\n            </Col>\r\n          </Row>\r\n          <Row xs=\"4\">\r\n            <Col xs=\"9\">\r\n              <CardText>{data.introduction}</CardText>\r\n            </Col>\r\n\r\n            <Col>\r\n              <CardText>{data.userName}</CardText>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        {detailModal && (\r\n          <DetailModal\r\n            pid={data.projectId}\r\n            userId={userId}\r\n            modal={detailModal}\r\n            toggle={detailModalToggle}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvitationBox;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useInvitationEffect } from \"../../../../hook/profile/useInvitation\";\r\nimport InvitationBox from \"./InvitationBox\";\r\nimport \"./Invitation.css\";\r\n\r\nconst InvitationModal = ({ modal, toggle, userId }) => {\r\n  const { pending, invitationList, noList } = useInvitationEffect(userId);\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> Invitations </ModalHeader>\r\n        <ModalBody>\r\n          {pending ? (\r\n            <div>로딩중...</div>\r\n          ) : noList.isError ? (\r\n            <div>{noList.errorMessage}</div>\r\n          ) : (\r\n            <div className=\"invitation_list\">\r\n              {invitationList.map((invitation, index) => {\r\n                return (\r\n                  <InvitationBox\r\n                    key={index}\r\n                    data={invitation}\r\n                    userId={userId}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvitationModal;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Layout, ProfileInfo, ProfileInfoModify } from \"../components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport RunningProjects from \"../components/People/Profile/ProfileProjects/RunningProjects\";\r\nimport EndedProjects from \"../components/People/Profile/ProfileProjects/EndedProjects\";\r\nimport PlanProjects from \"../components/People/Profile/ProfileProjects/PlanProjects\";\r\nimport RecruitModal from \"../components/People/Profile/RecruitModal\";\r\nimport InvitationModal from \"../components/People/Profile/Invitation/InvitationModal\";\r\n\r\nconst Profile = () => {\r\n  // url에서 userId 추출\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const userId = url[2];\r\n\r\n  const myId = useSelector(state => state.login.userId);\r\n\r\n  // 컴포넌트 이동을 다룰 변수\r\n  const [modifying, setModifying] = useState(false);\r\n\r\n  // modify창 열고 닫을 토글\r\n  const modifyToggle = () => {\r\n    setModifying(!modifying);\r\n  };\r\n\r\n  const [invitationModal, setInvitationModal] = useState(false);\r\n\r\n  const invitationToggle = () => {\r\n    setInvitationModal(!invitationModal);\r\n  };\r\n\r\n  const [info, setInfo] = useState({\r\n    userName: \"\",\r\n    role: \"\",\r\n    stacks: [\"\"],\r\n    contact: \"\",\r\n    area: \"\",\r\n    grade: 0,\r\n    introduction: \"\"\r\n  });\r\n\r\n  const [imgState, setImgState] = useState({\r\n    imgUrl: \"\",\r\n    isImgChange: false\r\n  });\r\n\r\n  // Recruit modal\r\n  const [modal, setModal] = useState(false);\r\n  const recruitToggle = () => setModal(!modal);\r\n  // console.log(modal);\r\n\r\n  // 우측 탭 상태변수\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  // 탭 토글\r\n  const tabToggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <br />\r\n      <Row xs=\"4\">\r\n        <Col>\r\n          {modifying ? (\r\n            <ProfileInfoModify\r\n              setModifying={modifyToggle}\r\n              info={info}\r\n              setInfo={setInfo}\r\n              imgState={imgState}\r\n              setImgState={setImgState}\r\n              userId={userId}\r\n            />\r\n          ) : (\r\n            <>\r\n              <ProfileInfo\r\n                setModifying={modifyToggle}\r\n                info={info}\r\n                setInfo={setInfo}\r\n                imgState={imgState}\r\n                setImgState={setImgState}\r\n                userId={userId}\r\n              />\r\n\r\n              {myId &&\r\n                (userId === myId ? (\r\n                  <>\r\n                    <Button id=\"modify-button\" onClick={modifyToggle}>\r\n                      Modify\r\n                    </Button>\r\n                    <Button\r\n                      id=\"see-invitation-button\"\r\n                      onClick={invitationToggle}\r\n                    >\r\n                      See Invitations\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Button onClick={recruitToggle}> recruit </Button>\r\n                  </>\r\n                ))}\r\n              {modal && (\r\n                <RecruitModal\r\n                  modal={modal}\r\n                  toggle={recruitToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n              {invitationModal && (\r\n                <InvitationModal\r\n                  modal={invitationModal}\r\n                  toggle={invitationToggle}\r\n                  userId={userId}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs=\"9\">\r\n          <div>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"1\");\r\n                  }}\r\n                >\r\n                  Ended Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"2\");\r\n                  }}\r\n                >\r\n                  Running Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"3\" })}\r\n                  onClick={() => {\r\n                    tabToggle(\"3\");\r\n                  }}\r\n                >\r\n                  Plan Projects\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <EndedProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"2\">\r\n                <RunningProjects userId={userId} />\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"3\">\r\n                <PlanProjects userId={userId} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Button, Form, Input, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Layout } from \"../../components\";\r\nimport \"./Login.css\";\r\nimport { useLoginEffect } from \"../../hook/auth\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction LoginPage() {\r\n  const {loading, onFinish, onFinishFailed} = useLoginEffect();\r\n  return (\r\n    <Layout>\r\n      <Title level={3} className=\"login_title\">\r\n        Login\r\n      </Title>\r\n      <div className=\"login_box\">\r\n        <Form {...layout} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            label=\"UserId\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"ID를 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력하셔야 합니다.\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"password\" className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n              로그인\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setToken } from \"../../reducers/login\";\r\nimport { useAlert, useMove, useRequest } from \"..\";\r\nimport { loginApi } from \"../../hook/api\";\r\n\r\ntype LoginType = {\r\n  loading: boolean;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n};\r\n\r\nexport function useLoginEffect(): LoginType {\r\n  const dispatch = useDispatch();\r\n  const isToken = useSelector((state: any) => state.login.isToken);\r\n\r\n  const userId = useRef(\"\");\r\n  const { alertAction } = useAlert();\r\n  const [login, { run: postLoginApi }] = useRequest(loginApi().postLogin);\r\n\r\n  useMove(isToken && login.fulfilled, \"\");\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Success:\", values);\r\n    userId.current = values.userId;\r\n    postLoginApi(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  // 로그인 성공 시 useEffect\r\n  useEffect(() => {\r\n    if (login.fulfilled) {\r\n      // response에서 토큰 추출\r\n      const accessToken = login.data.accessToken;\r\n      const refreshToken = login.data.refreshToken;\r\n      // 세션스토리지에 아이디와 토큰 저장\r\n      window.sessionStorage.setItem(\"id\", userId.current);\r\n      window.sessionStorage.setItem(\"accessToken\", accessToken);\r\n      window.sessionStorage.setItem(\"refreshToken\", refreshToken);\r\n      alertAction.open(\"로그인 성공\");\r\n\r\n      // 리덕스에 디스패치\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: userId.current,\r\n      };\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, [login.fulfilled]);\r\n\r\n  // 로그인 실패시\r\n  useEffect(() => {\r\n    if (login.rejected) {\r\n      if (login.error) {\r\n        // 실패 이유 알림\r\n        alertAction.open(login.error.response.data.message);\r\n      }\r\n    }\r\n  }, [login.rejected]);\r\n\r\n  return { loading: login.pending, onFinish, onFinishFailed };\r\n}\r\n\r\n// 세션 스토리지에 아이디와 토큰이 있을 때, 리덕스에 토큰유무와 아이디를 저장\r\n// 레이아웃 바에서 유저아이디를 띄우기 위함\r\nexport function useLoginAuth() {\r\n  const dispatch = useDispatch();\r\n\r\n  // 새로고침시 (최상단 컴포넌트 app이 다시 그려질 시)만 동작\r\n  useEffect(() => {\r\n    // 세션에서 값 받아옴\r\n    let test = null;\r\n    test = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n\r\n    // null값이 아니면\r\n    if (test !== null) {\r\n      // payload 만들어서\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: id,\r\n      };\r\n\r\n      // 액션 디스패치\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, []);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PeopleBox from \"../components/People/PeopleBox\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { PeopleSort } from \"../components/List/Sort\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Layout } from \"../components\";\r\nimport {\r\n  usePeopleListStateTs,\r\n  useWantedPeopleListEffectTs,\r\n} from \"../hook/peopleTs\";\r\n\r\nexport default function PeopleList() {\r\n  const { peoplePage, peopleAction } = usePeopleListStateTs();\r\n  useWantedPeopleListEffectTs(peoplePage, peopleAction);\r\n\r\n  return (\r\n    <Layout>\r\n      <hr />\r\n      <PeopleSort\r\n        role={peoplePage.role}\r\n        setRole={peoplePage.setRole}\r\n        grade={peoplePage.grade}\r\n        setGrade={peoplePage.setGrade}\r\n        region={peoplePage.region}\r\n        setRegion={peoplePage.setRegion}\r\n        search={peoplePage.search}\r\n        setSearch={peoplePage.setSearch}\r\n        getApi={peopleAction.getPeopleListFetch}\r\n      />\r\n      <hr />\r\n\r\n      <Row xs=\"12\">\r\n        {peoplePage.peopleList.length !== 0 &&\r\n          peoplePage.peopleList.map((value, index) => {\r\n            return (\r\n              <Col xs=\"2\" key={index}>\r\n                <PeopleBox url={`/profile/${value.userId}`} data={value} />\r\n              </Col>\r\n            );\r\n          })}\r\n      </Row>\r\n      <div id=\"pagination_div\">\r\n        <Pagination\r\n          id=\"pagination\"\r\n          count={peoplePage.page.totalPages}\r\n          onChange={(e, page) => {\r\n            let params = \"\";\r\n            if (peoplePage.role !== \"\") params += `&role=${peoplePage.role}`;\r\n            if (peoplePage.grade !== \"\") params += `&grade=${peoplePage.grade}`;\r\n            if (peoplePage.region !== \"\")\r\n              params += `&region=${peoplePage.region}`;\r\n            peopleAction.getPeopleListFetch(page - 1, params);\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  Root,\r\n  ProjectList,\r\n  Profile,\r\n  ProjectDetail,\r\n  ProjectCreate,\r\n  ProjectUpdate,\r\n  PeopleList,\r\n  LoginPage,\r\n  RegisterPage,\r\n} from \"./pages\";\r\nimport { AlertModal } from \"./components\";\r\nimport { useLoginAuth } from \"./hook/auth/useLogin\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction App() {\r\n  useLoginAuth();\r\n  return (\r\n    <Router basename={\"/\"}>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        <Route exact path=\"/\" component={Root} />\r\n        <Route path=\"/projects\" component={ProjectList} />\r\n        <Route path=\"/createProject\" component={ProjectCreate} />\r\n        <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n        <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n        <Route path=\"/peoples\" component={PeopleList} />\r\n        <Route path=\"/profile/:userId\" component={Profile} />\r\n      </Switch>\r\n      <AlertModal />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst temporaryRedux = createSlice({\r\n  name: 'project',\r\n  initialState: {\r\n    temporary: 0,\r\n  },\r\n  reducers: {\r\n    setTemporary(state, action) {\r\n      state.temporary = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setTemporary,\r\n} = temporaryRedux.actions;\r\nexport default temporaryRedux.reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport temporaryRedux from \"./temporary\";\r\nimport loginRedux from \"./login\";\r\nimport profileRedux from \"./profile\";\r\nimport projectRedux from \"./project\";\r\nimport alertRedux from \"./alert\";\r\n\r\nconst rootReducer = combineReducers({\r\n  temproray: temporaryRedux,\r\n  login: loginRedux,\r\n  profile: profileRedux,\r\n  project: projectRedux,\r\n  alert: alertRedux,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}