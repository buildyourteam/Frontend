{"version":3,"sources":["components/icon/baseImg.png","reducers/login.js","hook/useHook.js","hook/useRequest.ts","hook/usePageMove.js","hook/api/authApi.ts","hook/api/peopleApi.ts","hook/api/profileApi.ts","hook/auth/useRegister.ts","reducers/temporary.js","hook/project/useProjectList.js","reducers/alert.ts","hook/project/useProjectDetail.js","hook/project/useProjectCreate.js","hook/project/useProjectUpdate.js","hook/project/useProjectApply.js","hook/useAlert.ts","hook/projectTs/useProjectListTs.ts","hook/projectTs/useProjectDetailTs.ts","hook/projectTs/useProjectApplyTs.ts","hook/projectTs/useProjectUpdateTs.ts","hook/projectTs/useProjectCreateTs.ts","hook/auth/useLogin.ts","components/Layout.js","components/Project/ProjectBox.js","hook/profile/useImage.js","components/People/PeopleBox.js","components/Switch/switch.js","components/Image/inputImage.jsx","components/Dropdown/dropdown.jsx","components/Drawer/drawer.jsx","components/Modal/Modal.js","components/Input/Input.jsx","hook/peopleTs/usePeopleListTs.ts","pages/rootTs.tsx","components/List/Sort.js","pages/project/projectListTs.tsx","reducers/project.js","pages/project/projectDetailTs.tsx","hook/useImage.tsx","pages/project/createProjectTs.tsx","pages/project/updateProjectTs.tsx","pages/auth/RegisterTs.tsx","reducers/profile.js","pages/auth/LoginTs.tsx","App.js","serviceWorker.js","reducers/index.ts","index.js"],"names":["module","exports","loginRedux","createSlice","name","initialState","isToken","userId","reducers","setToken","state","action","payload","actions","require","reducer","type","error","pending","fulfilled","rejected","data","useRequest","asyncTask","options","useReducer","dispatch","run","a","useMove","condition","destination","history","useHistory","useEffect","push","loginApi","postLogin","axios","post","process","res","refreshToken","token","window","sessionStorage","getItem","setItem","accessToken","peopleListApi","getPeopleList","pageNumber","params","get","getWantedPeopleList","imgApi","getImg","postImg","image","FormData","append","imgUrl","headers","Authorization","useRegisterEffect","alertAction","useAlert","registerPromiseState","postRegisterFetch","open","response","message","loading","onFinish","values","console","log","onFinishFailed","errorInfo","temporaryRedux","temporary","setTemporary","alertRedux","isOpen","sentence","openAlert","closeAlert","useDispatch","useSelector","alert","alertState","close","useProjectListStateTs","useState","projectList","setProjectList","number","size","totalElements","totalPages","page","setPage","role","setRole","region","setRegion","stack","setStack","search","setSearch","getProjectList","sort","getDeadLineProjectList","projectListPromise","getProjectListApi","projectPage","DeadLineProjectListPromise","projectAction","getDeadLineProjectListApi","projectDetail","projectName","teamName","endDate","description","status","projectField","applyCanFile","questions","introduction","needMember","developer","designer","planner","etc","currentMember","_links","self","href","apply","projectApply","answers","userName","useLoginEffect","login","useRef","postLoginApi","current","reduxData","Layout","children","profileUrl","setIsOpen","Navbar","color","light","expand","className","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","removeItem","moment","ProjectBox","props","staticProjectData","nowDay","Date","parse","tz","format","dday","Math","floor","developerPercent","plannerPercent","designerPercent","etcPercent","id","pathname","url","style","textDecoration","Card","CardImg","width","height","src","projectId","alt","CardBody","CardTitle","Row","xs","Col","CardSubtitle","CardText","Progress","value","useImage","imgState","setImgState","getImgApi","useStyles","makeStyles","theme","root","display","flexDirection","marginBottom","spacing","fontSize","borderRadius","backgroundColor","PeopleBox","classes","imgPending","card","badgeContent","String","grade","object-fit","stacks","pill","withStyles","padding","margin","switchBase","transform","palette","common","white","opacity","border","thumb","track","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","primary","main","borderColor","boxShadow","ImgInput","img","saveImg","useDropzone","accept","maxFiles","onDrop","acceptedFiles","imgFile","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","align","heigth","DropdownRole","dropdownCaret","dropdownHeader","pick","dropdownOpen","setDropdownOpen","caret","setCaret","Dropdown","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","e","DropdownField","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","CenterModal","modalFlag","Modal","ModalHeader","gridTemplateColumns","alignItems","fontWeight","header","float","IconButton","ModalFooter","footer","AlertModal","BootstrapInputUI","input","position","fontFamily","join","fade","InputBase","BootstrapInput","Title","Typography","Root","project","_embedded","useDeadlineProjectListEffect","peopleList","setPeopleList","setGrade","peopleListPromise","peoplePage","WantedPeopleListPromise","peopleAction","usePeopleListStateTs","useWantedPeopleListEffectTs","autoplay","lineHeight","textAlign","level","grid","gutter","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item","onChange","pageSize","total","marginTop","formControl","minWidth","selectEmpty","ProjectSort","getApi","handleChange","event","target","getPage","Grid","container","FormControl","Select","displayEmpty","MenuItem","disabled","FormHelperText","variant","InputLabel","OutlinedInput","label","ProjectListPage","useProjectListEffectTs","defaultCurrent","projectRedux","memberList","setProject","ReactMarkdown","ProjectDetail","location","useLocation","split","setApply","recruit","setRecruit","reader","applyModal","delete","applyDetail","check","setCheck","pagination","setPagination","fetchGetDetail","resApply","catch","Accept","then","projectApplicantDtoList","recruitDtoList","fetchDeleteProject","getProject","getProjectApi","deleteProject","deleteProjectApi","inputProject","checkSwitch","inputApply","inputRecruit","clickPagination","nextPage","count","openApply","closeApply","openDelete","closeDelete","openDetailApply","closeDetailApply","useProjectDetailStateTs","useProjectDetailEffectTs","needList","title","allList","updateProject","danger","apiLink","detailGet","itemLayout","bordered","key","Meta","source","marginRight","length","applyLink","applySet","ApplyProject","applied","setApplied","fetchGetApply","fetchPostApply","fetchPutApply","put","getApply","getApplyApi","putApply","putApplyApi","postApply","postApplyApi","applyAction","inputAnswer","i","index","selectRole","useInputProjectApplyStateTs","afterAction","defaultAns","Array","fill","useInputProjectApplyEffectTs","htmlFor","placeholder","TextArea","autoSize","minRows","maxRows","ViewProjectApply","api","fetchDeleteApply","deleteApply","applyDetailAction","deleteApplyApi","useViewProjectApplyStateTs","useViewProjectApplyEffectTs","useImageSave","nextUrl","fileName","ProjectCreate","setImg","fetchPostCreate","fetchImg","imgData","createProject","createProjectApi","createState","createImg","createAction","createImgApi","targetValue","inputImg","inputProjectMember","memberValue","inputDate","date","inputQuestion","q","addQuestion","concat","deleteQuestion","filter","inputField","useProjectCreateStateTS","useProjectCreateEffectTs","addonBefore","min","max","step","utils","DateFnsUtils","locale","ko","disableToolbar","hideTabs","clearable","ampm","multiline","fullWidth","questionString","addonAfter","ProjectUpdate","fetchPutUpdate","UpdateProjectApi","updateState","updateImg","updateAction","UpdateImgApi","useProjectUpdateStateTs","originImg","useProjectUpdateEffectTs","updateData","layout","labelCol","span","wrapperCol","tailLayout","offset","RegisterPage","rules","required","whitespace","htmlType","profileRedux","isHideChange","setHideChange","LoginPage","App","test","useLoginAuth","path","component","exact","ProjectList","Boolean","hostname","match","rootReducer","combineReducers","temproray","profile","store","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAAAA,EAAOC,QAAU,IAA0B,qC,oMCErCC,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZC,SAAS,EACTC,OAAQ,IAEVC,SAAU,CACRC,SADQ,SACCC,EAAOC,GACdD,EAAMJ,QAAUK,EAAOC,QAAQN,QAC/BI,EAAMH,OAASI,EAAOC,QAAQL,WAKrBE,EAAaP,EAAWW,QAAxBJ,SACAP,IAAf,Q,wBCfcY,EAAQ,I,YCetB,SAASC,EAAQL,EAAqBC,GACpC,OAAQA,EAAOK,MACb,IAAK,UACH,OAAO,2BACFN,GADL,IAEEO,MAAO,KACPC,SAAS,EACTC,WAAW,EACXC,UAAU,IAEd,IAAK,UACH,MAAO,CACLC,KAAMV,EAAOC,QACbK,MAAO,KACPC,SAAS,EACTC,WAAW,EACXC,UAAU,GAEd,IAAK,UACH,OAAO,2BACFV,GADL,IAEEO,MAAON,EAAOC,QACdM,SAAS,EACTC,WAAW,EACXC,UAAU,KAKX,SAASE,EACdC,EACAC,GAIA,MAE0BC,qBAAWV,EAAS,CAC5CM,KAAM,KACNJ,MAAO,KACPC,SAAS,EACTC,WAAW,EACXC,UAAU,IAPZ,mBAEOV,EAFP,KAEcgB,EAFd,KA6BA,MAAO,CAAChB,EApBe,CACrBiB,IAAI,WAAD,4BAAE,wCAAAC,EAAA,6DACHF,EAAS,CACPV,KAAM,YAFL,kBAMkBO,EAAS,WAAT,KANlB,OAMKF,EANL,OAODK,EAAS,CACPV,KAAM,UACNJ,QAASS,IATV,gDAYDK,EAAS,CACPV,KAAM,UACNJ,QAAQ,EAAD,KAdR,yDAAF,kDAAC,KC3DO,SAASiB,EAAQC,EAAWC,GACzC,IAAMC,EAAUC,cAEhBC,qBAAU,WACJJ,GAAWE,EAAQG,KAAR,YAAkBJ,MAChC,CAACD,IAEJI,qBAAU,WACJJ,GACFE,EAAQG,KAAR,YAAkBJ,MAEnB,CAACD,I,qBCkBC,SAASM,IAuBd,MAAO,CAAEC,UArBM,uCAAG,WAAOhB,GAAP,eAAAO,EAAA,sEACEU,IAAMC,KAAN,UACbC,+BADa,eAEhBnB,GAHc,cACVoB,EADU,yBAKTA,EAAIpB,MALK,2CAAH,sDAqBKqB,aAZF,uCAAG,8BAAAd,EAAA,6DACbe,EAAQC,OAAOC,eAAeC,QAAQ,gBADzB,SAEDR,IAAMC,KAAN,UACbC,+BADa,gBAEhB,CACEE,aAAcC,IALC,cAEbF,EAFa,OAQnBG,OAAOC,eAAeE,QAAQ,cAAeN,EAAIpB,KAAK2B,aARnC,kBASZP,EAAIpB,KAAK2B,aATG,2CAAH,sDC9Bb,IAAMC,EAAqB,WAkBhC,MAAO,CAAEC,cAfU,uCAAG,WAAOC,GAAP,6BAAAvB,EAAA,6DAA2BwB,EAA3B,+BAAoC,GAApC,SACFd,IAAMe,IAAN,sDAC+BF,EAD/B,mBACoDC,IAFlD,cACdX,EADc,yBAIbA,EAAIpB,MAJS,2CAAH,sDAeKiC,oBAPC,uCAAG,WAAOH,GAAP,eAAAvB,EAAA,sEACRU,IAAMe,IAAN,UACbb,+BADa,uBACgCW,EADhC,YADQ,cACpBV,EADoB,yBAInBA,EAAIpB,MAJe,2CAAH,wDCsCpB,SAASkC,IA2Bd,MAAO,CAAEC,OAzBG,uCAAG,WAAOjD,GAAP,eAAAqB,EAAA,sEACKU,IAAMe,IAAN,UACbb,+BADa,yBACkCjC,IAFvC,cACPkC,EADO,yBAINA,EAAIpB,MAJE,2CAAH,sDAyBKoC,QAjBJ,uCAAG,WAAOlD,EAAgBc,GAAvB,mBAAAO,EAAA,6DACRe,EAAQC,OAAOC,eAAeC,QAAQ,gBACxCY,EAAQ,IAAIC,UACVC,OAAO,QAASvC,EAAKwC,QAHb,SAIIvB,IAAMC,KAAN,UACbC,+BADa,yBACkCjC,GAClDmD,EACA,CACEI,QAAS,CACP,eAAgB,iCAChBC,cAAc,UAAD,OAAYpB,MAVjB,cAIRF,EAJQ,yBAcPA,GAdO,2CAAH,yDC7DR,SAASuB,IAAmC,IACzCC,EAAgBC,IAAhBD,YADwC,EAEW3C,EHMzC,uCAAG,WAAOD,GAAP,eAAAO,EAAA,sEACDU,IAAMC,KAAN,UACbC,+BADa,eAEhBnB,GAHiB,cACboB,EADa,yBAKZA,EAAIpB,MALQ,2CAAH,uDGR8B,mBAEzC8C,EAFyC,KAEZC,EAFY,KAEjBzC,IA6B/B,OAhBAE,EAAQsC,EAAqBhD,UAAW,SAExCe,qBAAU,WACJiC,EAAqBhD,WACvB8C,EAAYI,KAAK,gJAElB,CAACF,EAAqBhD,YAEzBe,qBAAU,WACJiC,EAAqB/C,UACnB+C,EAAqBlD,OACvBgD,EAAYI,KAAKF,EAAqBlD,MAAMqD,SAASjD,KAAKkD,WAG7D,CAACJ,EAAqB/C,WAElB,CAAEoD,QAASL,EAAqBjD,QAASuD,SAzB/B,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBN,EAAkBM,IAuBsCG,eApBnC,SAACC,GACtBH,QAAQC,IAAI,UAAWE,KCrB3B,IAAMC,EAAiB5E,YAAY,CACjCC,KAAM,UACNC,aAAc,CACZ2E,UAAW,GAEbxE,SAAU,CACRyE,aADQ,SACKvE,EAAOC,GAClBD,EAAMsE,UAAYrE,EAAOC,YAQhBmE,GADXA,EAAelE,QADjBoE,aAEaF,EAAf,SCbcjE,EAAQ,IAkHtB,I,QCpHMoE,GCIQpE,EAAQ,ICDRA,EAAQ,ICCRA,EAAQ,I,OCDRA,EAAQ,IJHHX,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZ8E,QAAQ,EACRC,SAAU,IAEZ5E,SAAU,CACR6E,UADQ,SACE3E,EAAOC,GACfD,EAAMyE,QAAS,EACfR,QAAQC,IAAIjE,EAAOC,SACnBF,EAAM0E,SAAWzE,EAAOC,SAE1B0E,WANQ,SAMG5E,GACTA,EAAMyE,QAAS,O,EAKoBD,EAAWrE,QAArCwE,E,EAAAA,UAAWC,E,EAAAA,WACXJ,IAAf,QKhBe,SAAShB,IACtB,IAAMxC,EAAW6D,cACXJ,EAASK,aAAY,SAAC9E,GAAD,OAAsBA,EAAM+E,MAAMN,UAW7D,MAAO,CACLO,WAAY,CAAEN,SAXCI,aAAY,SAAC9E,GAAD,OAAsBA,EAAM+E,MAAML,YAWrCD,UACxBlB,YAAa,CACXI,KAXS,SAAChD,GACZK,EAAS2D,EAAUhE,KAWjBsE,MARU,WACZjE,EAAS4D,QCRb,IAAMhD,EAAQxB,EAAQ,IAyEf,SAAS8E,IAAuC,IAAD,EACdC,mBAAiC,IADnB,mBAC7CC,EAD6C,KAChCC,EADgC,OAE5BF,mBAAmB,CACzCG,OAAQ,EACRC,KAAM,EACNC,cAAe,EACfC,WAAY,IANsC,mBAE7CC,EAF6C,KAEvCC,EAFuC,OAQ5BR,mBAAiB,IARW,mBAQ7CS,EAR6C,KAQvCC,EARuC,OASxBV,mBAAiB,IATO,mBAS7CW,EAT6C,KASrCC,EATqC,OAU1BZ,mBAAiB,IAVS,mBAU7Ca,EAV6C,KAUtCC,EAVsC,OAWxBd,mBAAiB,IAXO,mBAW7Ce,EAX6C,KAWrCC,EAXqC,KAa9CC,EAAc,uCAAG,WACrB3D,GADqB,6BAAAvB,EAAA,6DAErBmF,EAFqB,+BAEP,GAFO,SAIHzE,EAAMe,IAAN,UACbb,+BADa,yBACkCW,EADlC,kBACsD4D,IALnD,cAIftE,EAJe,yBAOdA,EAAIpB,MAPU,2CAAH,sDAUd2F,EAAsB,uCAAG,WAC7B7D,GAD6B,eAAAvB,EAAA,sEAGbU,EAAMe,IAAN,UACXb,+BADW,kCAC6CW,EAD7C,yBAHa,cAGzBV,EAHyB,yBAMtBA,EAAIpB,MANkB,2CAAH,sDAvBwB,EAgCKC,EACvDwF,GAjCkD,mBAgC7CG,EAhC6C,KAgClBC,EAhCkB,KAgCvBvF,IAhCuB,EAuChDL,EAAW0F,GAvCqC,mBA8DpD,MAAO,CAAEG,YArBwB,CAC/BrB,cACAQ,OACAE,SACAI,SACAR,OACAM,QACAO,qBACAG,2BAjDkD,MA8D9BC,cAXe,CACnCtB,iBACAM,UACAI,YACAF,UACAI,WACAE,YACAK,oBACAI,0BA3DkD,KAsChD3F,MC/GN,IAAMW,EAAQxB,EAAQ,IA4ahByG,EAAgB,CACpBC,YAAa,GACbC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,OAAQ,GACRC,aAAc,GACdC,cAAc,EACdC,UAAW,GACXC,aAAc,GACdC,WAAY,CACVC,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,IAAK,GAEPC,cAAe,CACbJ,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,IAAK,GAEPE,OAAQ,CACNC,KAAM,CACJC,KAAM,IAERC,MAAO,CACLD,KAAM,MCvcNnG,EAAQxB,EAAQ,IAwahB6H,EAAe,CACnBC,QAAS,GACTZ,aAAc,GACd1B,KAAM,GACNyB,UAAW,GACXc,SAAU,GACVjB,OAAQ,IC7aJtF,EAAQxB,EAAQ,ICFhBwB,EAAQxB,EAAQ,IAqQhByG,EAAgB,CACpBC,YAAa,GACbC,SAAU,GACVC,QAAS,sBACTM,aAAc,GACdtH,MAAO,KACPmH,aAAc,GACdC,cAAc,EACdC,UAAW,CAAC,IACZE,WAAY,CACVC,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,IAAK,IC5QF,SAASS,IACd,IAAMpH,EAAW6D,cACXjF,EAAUkF,aAAY,SAAC9E,GAAD,OAAgBA,EAAMqI,MAAMzI,WAElDC,EAASyI,iBAAO,IACd/E,EAAgBC,IAAhBD,YALkC,EAMH3C,EAAWc,IAAWC,WANnB,mBAMnC0G,EANmC,KAMrBE,EANqB,KAM1BtH,IAEhBE,EAAQvB,GAAWyI,EAAM5H,UAAW,IA2CpC,OA9BAe,qBAAU,WACR,GAAI6G,EAAM5H,UAAW,CAEnB,IAAM6B,EAAc+F,EAAM1H,KAAK2B,YACzBN,EAAeqG,EAAM1H,KAAKqB,aAEhCE,OAAOC,eAAeE,QAAQ,KAAMxC,EAAO2I,SAC3CtG,OAAOC,eAAeE,QAAQ,cAAeC,GAC7CJ,OAAOC,eAAeE,QAAQ,eAAgBL,GAC9CuB,EAAYI,KAAK,mCAGjB,IAAM8E,EAAY,CAChB7I,SAAS,EACTC,OAAQA,EAAO2I,SAEjBxH,EAASjB,EAAS0I,OAEnB,CAACJ,EAAM5H,YAGVe,qBAAU,WACJ6G,EAAM3H,UACJ2H,EAAM9H,OAERgD,EAAYI,KAAK0E,EAAM9H,MAAMqD,SAASjD,KAAKkD,WAG9C,CAACwE,EAAM3H,WAEH,CAAEoD,QAASuE,EAAM7H,QAASuD,SAzChB,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBnE,EAAO2I,QAAUxE,EAAOnE,OACxB0I,EAAavE,IAsC4BG,eAnCpB,SAACC,GACtBH,QAAQC,IAAI,UAAWE,K,2FCTZ,SAASsE,GAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzB3H,EAAW6D,cAIXvD,EAAUC,cAGV1B,EAASiF,aAAY,SAAC9E,GAAD,OAAWA,EAAMqI,MAAMxI,UAC5CD,EAAUkF,aAAY,SAAC9E,GAAD,OAAWA,EAAMqI,MAAMzI,WAG7CgJ,EAAU,mBAAe/I,GAZY,EAcfsF,oBAAS,GAdM,mBAcpCV,EAdoC,KAc5BoE,EAd4B,KAsC3C,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,GAAGC,OAAK,EAACC,OAAO,KAAKC,UAAU,cAC3C,kBAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,KAA3B,SAIA,kBAACC,EAAA,EAAD,CAAeC,QA7BN,kBAAMX,GAAWpE,MA8B1B,kBAACgF,EAAA,EAAD,CAAUhF,OAAQA,EAAQiF,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKT,UAAU,kBAAkBQ,QAAM,GACrC,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAMC,GAAG,aAAvB,sDAIF,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAMC,GAAG,YAAvB,gDAID1J,EACC,oCACE,kBAACgK,EAAA,EAAD,CAASV,UAAU,WACjB,kBAACW,EAAA,EAAD,CAAST,IAAKC,IAAMC,GAAIV,GACrB/I,EADH,YAIF,kBAAC+J,EAAA,EAAD,KACE,kBAAC,KAAD,CAAQJ,QA/CJ,WAElBtH,OAAOC,eAAe2H,WAAW,MACjC5H,OAAOC,eAAe2H,WAAW,eACjC5H,OAAOC,eAAe2H,WAAW,gBASjC9I,EAASjB,EANS,CAChBH,SAAS,EACTC,OAAQ,QAOVyB,EAAQG,KAAR,OA+Bc,8BAIJ,oCACE,kBAACmI,EAAA,EAAD,CAASV,UAAU,WACjB,kBAACW,EAAA,EAAD,CAAST,IAAKC,IAAMC,GAAG,UAAvB,UAIF,kBAACM,EAAA,EAAD,CAASV,UAAU,aACjB,kBAACW,EAAA,EAAD,CAAST,IAAKC,IAAMC,GAAG,aAAvB,iBAUZ,8BACE,yBAAKJ,UAAU,YAAYP,IAG7B,4BAAQO,UAAU,cAChB,6BACA,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,SACA,6BACA,4DAHF,wBAIE,uBAAGnB,KAAK,oCAAR,qCAIF,wBAAImB,UAAU,kCACd,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,SACA,6BACA,wBAAIA,UAAU,iBACZ,4BACE,uBAAGnB,KAAK,MAAR,cAEF,6BACA,4BACE,uBAAGA,KAAK,MAAR,eAMV,+B,4GC7HFgC,I,cAAS3J,EAAQ,MAER,SAAS4J,GAAWC,GACjC,IAAMC,EAAoBD,EAAMtJ,KAC1BwJ,EAASC,KAAKC,MAAMN,KAASO,GAAG,cAAcC,UAC9CC,EAAOC,KAAKC,OACfN,KAAKC,MAAMH,EAAkBlD,SAAWmD,GAAzC,OAGIQ,EAC0C,IAA9CT,EAAkBtC,cAAcJ,UAC3B0C,EAAkBtC,cAAcJ,UAC/B0C,EAAkB3C,WAAWC,UAC/B,IACA,EACAoD,EACwC,IAA5CV,EAAkBtC,cAAcF,QAC3BwC,EAAkBtC,cAAcF,QAC/BwC,EAAkB3C,WAAWG,QAC/B,IACA,EAEAmD,EACyC,IAA7CX,EAAkBtC,cAAcH,SAC3ByC,EAAkBtC,cAAcH,SAC/ByC,EAAkB3C,WAAWE,SAC/B,IACA,EAEAqD,EACoC,IAAxCZ,EAAkBtC,cAAcD,IAC3BuC,EAAkBtC,cAAcD,IAC/BuC,EAAkB3C,WAAWI,IAC/B,IACA,EAEN,OACE,yBAAKoD,GAAG,kBACN,kBAAC,IAAD,CACEzB,GAAI,CACF0B,SAAS,GAAD,OAAKf,EAAMgB,MAErBC,MAAO,CAAEC,eAAgB,OAAQpC,MAAO,YAExC,kBAACqC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAM,QACNC,OAAO,QACPC,IAAG,UAAK1J,+BAAL,0BAAqDoI,EAAkBuB,WAC1EC,IAAI,mBAEN,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAY1B,EAAkBpD,aAC9B,kBAAC+E,GAAA,EAAD,CAAKC,GAAG,KAAKf,GAAG,aACd,kBAACgB,GAAA,EAAD,CAAKD,GAAG,KACN,kBAACE,GAAA,EAAD,KAAe9B,EAAkBnD,WAEnC,kBAACgF,GAAA,EAAD,CAAKD,GAAG,KACN,kBAACE,GAAA,EAAD,UAAiBxB,KAGrB,kBAACqB,GAAA,EAAD,CAAKC,GAAG,KAAKf,GAAG,gBACd,kBAACgB,GAAA,EAAD,CAAKD,GAAG,KACN,kBAACG,GAAA,EAAD,kBACA,kBAACC,GAAA,EAAD,CAAUnD,MAAM,UAAUoD,MAAOxB,GAC9BA,GAEH,kBAACsB,GAAA,EAAD,iBACA,kBAACC,GAAA,EAAD,CAAUnD,MAAM,UAAUoD,MAAOvB,GAC9BA,IAGL,kBAACmB,GAAA,EAAD,CAAKD,GAAG,KACN,kBAACG,GAAA,EAAD,iBACA,kBAACC,GAAA,EAAD,CAAUnD,MAAM,UAAUoD,MAAOtB,GAC9BA,GAEH,kBAACoB,GAAA,EAAD,YACA,kBAACC,GAAA,EAAD,CAAUnD,MAAM,UAAUoD,MAAOrB,GAC9BA,S,yCC3FZ,IAAMsB,GAAW,SACtBC,EACAC,EAEAzM,GACI,IAAD,EAMCe,EALeiC,IAAXC,QADL,0BAIOrC,GAJP,EAICE,KAJD,EAIOF,WAAWD,EAJlB,EAIkBA,QAASE,EAJ3B,EAI2BA,SAAUH,EAJrC,EAIqCA,MAC/BgM,EALN,KAKCtL,IA2BJ,OAxBAO,qBAAU,WACR+K,EAAU1M,KACT,CAACA,IAEJ2B,qBAAU,WACR8K,EAAY,2BACPD,GADM,IAETlJ,OAAO,GAAD,OAAKrB,+BAAL,yBAAoDjC,QAE3D,CAACY,IAEJe,qBAAU,WACJd,GACEH,GACgC,QAA9BA,EAAMqD,SAASjD,KAAKJ,OACtB+L,EAAY,2BACPD,GADM,IAETlJ,OACE,+EAKT,CAACzC,IACGF,GCpBHgM,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACf,QAAS,CACPC,aAAcJ,EAAMK,QAAQ,IAE9B,oBAAqB,CACnBxB,OAAQ,OACRD,MAAO,OACP0B,SAAU,OACVC,aAAc,OACdlE,MAAO,UACPmE,gBAAiB,gBAKR,SAASC,GAAUlD,GAChC,IAAMmD,EAAUZ,KACV7L,EAAOsJ,EAAMtJ,KAFoB,EAGPwE,mBAAS,IAHF,mBAGhCkH,EAHgC,KAGtBC,EAHsB,KAIjCe,EAAajB,GAASC,EAAUC,EAAa3L,EAAKd,QACxD,OACE,yBAAKkL,GAAG,gBAAgB7B,UAAWkE,EAAQE,MACzC,kBAAC,IAAD,CACEhE,GAAI,CACF0B,SAAS,GAAD,OAAKf,EAAMgB,MAErBC,MAAO,CAAEC,eAAgB,OAAQpC,MAAO,YAExC,kBAAC,KAAD,CAAOwE,aAAcC,OAAO7M,EAAK8M,OAAQvE,UAAWkE,EAAQT,MAC1D,kBAACvB,GAAA,EAAD,KAOGiC,EACC,oDAEA,yBAAKnE,UAAU,cACb,yBACEsC,IAAKa,EAASlJ,OACdmI,MAAM,OACNoC,aAAW,aAIjB,kBAAC/B,GAAA,EAAD,KACE,yBAAKZ,GAAG,cACN,kBAACa,GAAA,EAAD,KAAYjL,EAAKd,SAGnB,kBAACoM,GAAA,EAAD,CAAUlB,GAAG,aACK,OAAfpK,EAAKqF,OAAkB,IAQvBrF,EAAKgN,OAAO,IACX,kBAAC,KAAD,CAAO5E,MAAM,YAAY6E,MAAI,GAA7B,KACKjN,EAAKgN,OAAO,GAAI,W,qCClFdE,cAAW,SAAAnB,GAAK,MAAK,CAC1CC,KAAM,CACFrB,MAAO,GACPC,OAAQ,GACRuC,QAAS,EACTC,OAAQrB,EAAMK,QAAQ,IAE1BiB,WAAY,CACRF,QAAS,EACT,YAAa,CACTG,UAAW,mBACXlF,MAAO2D,EAAMwB,QAAQC,OAAOC,MAC5B,aAAc,CACVlB,gBAAiB,UACjBmB,QAAS,EACTC,OAAQ,SAGhB,wBAAyB,CACrBvF,MAAO,UACPuF,OAAQ,mBAGhBC,MAAO,CACHjD,MAAO,GACPC,OAAQ,IAEZiD,MAAO,CACHvB,aAAc,GACdqB,OAAO,aAAD,OAAe5B,EAAMwB,QAAQO,KAAK,MACxCvB,gBAAiBR,EAAMwB,QAAQO,KAAK,IACpCJ,QAAS,EACTK,WAAYhC,EAAMiC,YAAYC,OAAO,CAAC,mBAAoB,YAE9DC,QAAS,GACTC,aAAc,MAnCOjB,EAoCrB,YAA4B,IAAzBT,EAAwB,EAAxBA,QAAYnD,EAAY,4BAC3B,OACI,kBAAC8E,GAAA,EAAD,eACIC,sBAAuB5B,EAAQ0B,aAC/BG,eAAa,EACb7B,QAAS,CACLT,KAAMS,EAAQT,KACdqB,WAAYZ,EAAQY,WACpBO,MAAOnB,EAAQmB,MACfC,MAAOpB,EAAQoB,MACfK,QAASzB,EAAQyB,UAEjB5E,OAKS4D,cAAW,SAAAnB,GAAK,MAAK,CAC1CC,KAAM,CACFrB,MAAO,GACPC,OAAQ,GACRuC,QAAS,EACTlB,QAAS,QAEboB,WAAY,CACRF,QAAS,EACT/E,MAAO2D,EAAMwB,QAAQO,KAAK,KAC1B,YAAa,CACTR,UAAW,mBACXlF,MAAO2D,EAAMwB,QAAQC,OAAOC,MAC5B,aAAc,CACVC,QAAS,EACTnB,gBAAiBR,EAAMwB,QAAQgB,QAAQC,KACvCC,YAAa1C,EAAMwB,QAAQgB,QAAQC,QAI/CZ,MAAO,CACHjD,MAAO,GACPC,OAAQ,GACR8D,UAAW,QAEfb,MAAO,CACHF,OAAO,aAAD,OAAe5B,EAAMwB,QAAQO,KAAK,MACxCxB,aAAc,EACdoB,QAAS,EACTnB,gBAAiBR,EAAMwB,QAAQC,OAAOC,OAE1CS,QAAS,MA/BYhB,CAgCrBkB,M,QCxEJ,SAASO,GAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAAW,EACMC,aAAY,CAClDC,OAAQ,CAAC,OAAQ,QAAS,QAC1BC,SAAU,EACVC,OAAQ,SAACC,GACP,IAAMC,EAAUD,EAAcE,KAAI,SAACC,GAAD,OAChCC,OAAOC,OAAOF,EAAM,CAClB/E,IAAKkF,IAAIC,gBAAgBJ,QAG7BR,EAAQM,EAAQ,OATZO,EAD0B,EAC1BA,aAAcC,EADY,EACZA,cAatB,OACE,6BACE,wBAASD,EAAa,CAAEnH,UAAW,aACjC,0BAAWoH,KACF,KAARf,EACC,yBACE/D,IAAI,wHACJE,IAAI,kCACJ6E,MAAM,SACNC,OAAO,OACPlF,MAAM,SAGR,6BACqB,kBAAXiE,EAAI,GACV,yBACE/D,IAAK+D,EAAItE,IACTS,IAAI,kCACJ6E,MAAM,SACNC,OAAO,OACPlF,MAAM,SAGR,yBACEE,IAAG,UAAK+D,GACR7D,IAAI,qBACJ6E,MAAM,SACNC,OAAO,OACPlF,MAAM,Y,4CCjDhBmF,GAAe,SAACxG,GAAW,IACvByG,EAAgDzG,EAAhDyG,cAA+BzQ,GAAiBgK,EAAjC0G,eAAiC1G,EAAjBhK,QAAQ2Q,EAAS3G,EAAT2G,KADjB,EAEUzL,oBAAS,GAFnB,mBAEvB0L,EAFuB,KAETC,EAFS,OAGJ3L,mBAASuL,GAHL,mBAGvBK,EAHuB,KAGhBC,EAHgB,KAI9BxP,qBAAU,WACK,KAAToP,GAAaI,EAASJ,KACzB,CAACA,IAEJ,OACE,kBAACK,GAAA,EAAD,CAAUxM,OAAQoM,EAAcK,OAFnB,kBAAMJ,GAAgB,SAACK,GAAD,OAAgBA,OAGjD,kBAACC,GAAA,EAAD,CAAgBL,OAAK,EAAC7F,MAAOjB,EAAMiB,OAChC6F,GAEH,kBAACM,GAAA,EAAD,CAAcnG,MAAOjB,EAAMiB,OACzB,kBAACoG,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,eAArC,aAGA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,cAArC,YAGA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,aAArC,WACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,SAArC,UAMFuR,GAAgB,SAACvH,GAAW,IACxByG,EAAgDzG,EAAhDyG,cAA+BzQ,GAAiBgK,EAAjC0G,eAAiC1G,EAAjBhK,QAAQ2Q,EAAS3G,EAAT2G,KADhB,EAESzL,oBAAS,GAFlB,mBAExB0L,EAFwB,KAEVC,EAFU,OAGL3L,mBAASuL,GAHJ,mBAGxBK,EAHwB,KAGjBC,EAHiB,KAI/BxP,qBAAU,WACK,KAAToP,GAAaI,EAASJ,KACzB,CAACA,IAEJ,OACE,kBAACK,GAAA,EAAD,CAAUxM,OAAQoM,EAAcK,OAFnB,kBAAMJ,GAAgB,SAACK,GAAD,OAAgBA,OAGjD,kBAACC,GAAA,EAAD,CAAgBlG,MAAOjB,EAAMiB,MAAO6F,OAAK,GACtCA,GAEH,kBAACM,GAAA,EAAD,CAAcnG,MAAOjB,EAAMiB,OACzB,kBAACoG,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,SAArC,OACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,SAArC,OACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,QAArC,MACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,QAArC,MACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,gBAArC,cAGA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,YAArC,UACA,kBAACqR,GAAA,EAAD,CAAc9H,QAAS,SAAC+H,GAAD,OAAOtR,EAAO,SAArC,U,yDCpCUwM,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEX6E,OAAQ,CACNnG,MAAM,eAAD,OAPW,IAOX,OACLoG,WARgB,KAUlBC,OAAQ,CACNrG,MAXgB,IAYhBsG,WAAY,GAEdC,YAAa,CACXvG,MAAO,OAGTwG,QAASpF,EAAMqF,OAAOD,QACtBE,QAAS,CACPC,SAAU,EACV/E,gBAAiBR,EAAMwB,QAAQgE,WAAWC,QAC1CrE,QAASpB,EAAMK,QAAQ,Q,wGCrCrBqF,GAAc,SAACnI,GAAW,IACtBoI,EAAqBpI,EAArBoI,UAAWpN,EAAUgF,EAAVhF,MAEnB,OACE,6BACE,kBAACqN,GAAA,EAAD,CAAO7N,OAAQ4N,GACb,kBAACE,GAAA,EAAD,KACE,yBACErH,MAAO,CACLgH,WAAY,QACZtF,QAAS,OACT4F,oBAAqB,WACrBC,WAAY,SACZC,WAAY,OACZpH,MAAO,UAGT,6BAAMrB,EAAM0I,QACZ,yBAAKzH,MAAO,CAAE0H,MAAO,UACnB,kBAACC,GAAA,EAAD,CACE3H,MAAO,CAAEI,MAAO,OAAQC,OAAQ,QAChC/B,QAASvE,GAET,kBAAC,KAAD,UAKPgF,EAAMtB,SACP,kBAACmK,GAAA,EAAD,KAAc7I,EAAM8I,WAMtBC,GAAa,SAAC/I,GAAW,IAAD,EACQzG,IAA5BwB,EADoB,EACpBA,WAAYzB,EADQ,EACRA,YAEpB,OACE,6BACE,kBAAC+O,GAAA,EAAD,CAAO7N,OAAQO,EAAWP,QACxB,kBAAC8N,GAAA,EAAD,KACE,yBACErH,MAAO,CACLgH,WAAY,QACZtF,QAAS,OACT4F,oBAAqB,WACrBC,WAAY,SACZC,WAAY,OACZpH,MAAO,UAGT,6CACA,yBAAKJ,MAAO,CAAE0H,MAAO,UACnB,kBAACC,GAAA,EAAD,CACE3H,MAAO,CAAEI,MAAO,OAAQC,OAAQ,QAChC/B,QAASjG,EAAY0B,OAErB,kBAAC,KAAD,UAKPD,EAAWN,Y,mBC3DduO,GAAmBpF,cAAW,SAACnB,GAAD,MAAY,CAC9CwG,MAAO,CACLjG,aAAc,EACdkG,SAAU,WACVjG,gBAAiBR,EAAMwB,QAAQC,OAAOC,MACtCE,OAAQ,oBACRtB,SAAU,GACV1B,MAAO,OACPwC,QAAS,YACTY,WAAYhC,EAAMiC,YAAYC,OAAO,CAAC,eAAgB,eAEtDwE,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACThE,UAAU,GAAD,OAAKiE,aAAK5G,EAAMwB,QAAQgB,QAAQC,KAAM,KAAtC,iBACTC,YAAa1C,EAAMwB,QAAQgB,QAAQC,UAzBhBtB,CA4BrB0F,MAEJ,SAASC,GAAevJ,GACtB,OAAO,kBAACgJ,GAAqBhJ,G,mDCrCjB7J,EAAQ,I,ICSdqT,GAAUC,KAAVD,MAEO,SAASE,KAAQ,IAAD,EACUzO,IAA/BuB,EADqB,EACrBA,YAAaE,EADQ,EACRA,ejBqKhB,SACLiN,EACAjN,GAEAnF,qBAAU,WACJoS,EAAQlN,2BAA2BjG,YACjC,cAAemT,EAAQlN,2BAA2B/F,MACpDgG,EAActB,eACZuO,EAAQlN,2BAA2B/F,KAAKkT,UAAUzO,aAEpDuB,EAAchB,QAAQiO,EAAQlN,2BAA2B/F,KAAK+E,QAE9DiB,EAActB,eAAe,IAC7BsB,EAAchB,QAAQ,CACpBL,OAAQ,EACRC,KAAM,EACNC,cAAe,EACfC,WAAY,QAIjB,CAACmO,EAAQlN,2BAA2BjG,YAEvCe,qBAAU,WACRmF,EAAcC,0BAA0B,EAAG,MAC1C,IAEHpF,qBAAU,WACJoS,EAAQlN,2BAA2BhG,UACjCkT,EAAQlN,2BAA2BnG,OACrCoG,EAActB,eAAe,MAGhC,CAACuO,EAAQlN,2BAA2BhG,WiBrMvCoT,CAA6BrN,EAAaE,GAFb,MDyCxB,WAA8C,IAAD,EACdxB,mBAAgC,IADlB,mBAC3C4O,EAD2C,KAC/BC,EAD+B,OAE1B7O,mBAAmB,CACzCG,OAAQ,EACRC,KAAM,EACNC,cAAe,EACfC,WAAY,IANoC,mBAE3CC,EAF2C,KAErCC,EAFqC,OAQ1BR,mBAAiB,IARS,mBAQ3CS,EAR2C,KAQrCC,EARqC,OAStBV,mBAAiB,IATK,mBAS3CW,EAT2C,KASnCC,EATmC,OAUxBZ,mBAAiB,IAVO,mBAU3CsI,EAV2C,KAUpCwG,EAVoC,OAWtB9O,mBAAiB,IAXK,mBAW3Ce,EAX2C,KAWnCC,EAXmC,OAYEvF,EAClD2B,IAAgBC,eAbgC,mBAY3C0R,EAZ2C,KAYjB1R,EAZiB,KAYtBvB,IAZsB,EAgBcL,EAC9D2B,IAAgBK,qBAjBgC,mBAyClD,MAAO,CAAEuR,WAtBsB,CAC7BC,wBApBgD,KAqBhDF,oBACAH,aACArO,OACAE,OACAE,SACAI,SACAuH,SAcmB4G,aAXc,CACjCL,gBACArO,UACAE,UACAE,YACAI,YACA8N,WACAzR,gBACAI,oBAtCgD,KAgBhB3B,MCrDGqT,GAA7BH,EAJqB,EAIrBA,WAAYE,EAJS,EAITA,aAGpB,ODqGK,SACLF,EACAE,GAEwB7Q,IAAhBD,YACR/B,qBAAU,WACJ2S,EAAWC,wBAAwB3T,WACjC,cAAe0T,EAAWC,wBAAwBzT,MACpD0T,EAAaL,cACXG,EAAWC,wBAAwBzT,KAAKkT,UAAUE,cAIvD,CAACI,EAAWC,wBAAwB3T,YAEvCe,qBAAU,WACJ2S,EAAWC,wBAAwB1T,UACjCyT,EAAWC,wBAAwB7T,OACrC8T,EAAaL,cAAc,MAG9B,CAACG,EAAWC,wBAAwB1T,WAEvCc,qBAAU,WACR6S,EAAazR,oBAAoB,KAChC,IChIH2R,CAA4BJ,EAAYE,GAGtC,kBAAC,GAAD,KACE,6BACE,kBAAC,KAAD,CAAUG,UAAQ,GAChB,6BACE,yBACEtJ,MAAO,CACLK,OAAQ,QACRxC,MAAO,OACP0L,WAAY,QACZC,UAAW,SACXxC,WAAY,WAEd1G,IAAI,sCACJE,IAAI,WAGR,6BACE,yBACER,MAAO,CACLK,OAAQ,QACRxC,MAAO,OACP0L,WAAY,QACZC,UAAW,SACXxC,WAAY,WAEd1G,IAAI,sCACJE,IAAI,WAGR,6BACE,yBACER,MAAO,CACLK,OAAQ,QACRxC,MAAO,OACP0L,WAAY,QACZC,UAAW,SACXxC,WAAY,WAEd1G,IAAI,sCACJE,IAAI,WAGR,6BACE,yBACER,MAAO,CACLK,OAAQ,QACRxC,MAAO,OACP0L,WAAY,QACZC,UAAW,SACXxC,WAAY,WAEd1G,IAAI,sCACJE,IAAI,YAIV,kBAAC+H,GAAD,CAAOkB,MAAO,GAAd,sDACA,kBAAC,KAAD,CACE7Q,QAAS2C,EAAYC,2BAA2BlG,QAChDoU,KAAM,CACJC,OAAQ,GACR/I,GAAI,EACJgJ,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAY1O,EAAYrB,YACxBgQ,WAAY,SAACC,GAAD,OACV,kBAAC,KAAKC,KAAN,KACE,kBAACtL,GAAD,CACErJ,KAAM0U,EACNpK,IAAG,yBAAoBoK,EAAK5J,iBAKpC,yBAAKV,GAAG,kBACN,kBAAC,KAAD,CACEwK,SAAU,SAAC7P,EAAM8P,GAAP,OACR7O,EAAcC,0BAA0BlB,EAAO,IAEjD8P,SAAU,EACVhN,QAAS/B,EAAYf,KAAKJ,OAAS,EACnCmQ,MAAqC,EAA9BhP,EAAYf,KAAKD,cAG5B,kBAACgO,GAAD,CAAOkB,MAAO,GAAd,kEACA,kBAAC,KAAD,CACE7Q,QAASqQ,EAAWC,wBAAwB5T,QAC5CoU,KAAM,CACJC,OAAQ,GACR/I,GAAI,EACJgJ,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAYhB,EAAWJ,WACvBqB,WAAY,SAACC,GAAD,OACV,kBAAC,KAAKC,KAAN,KACE,kBAACnI,GAAD,CAAWxM,KAAM0U,EAAMpK,IAAG,mBAAcoK,EAAKxV,cAInD,yBAAKkL,GAAG,iBAAiBG,MAAO,CAAEwK,UAAW,SAC3C,kBAAC,KAAD,CACEH,SAAU,SAAC7P,EAAM8P,GAAP,OACRnB,EAAazR,oBAAoB8C,EAAO,IAE1C8P,SAAU,EACVhN,QAAS2L,EAAWzO,KAAKJ,OAAS,EAClCmQ,MAAoC,EAA7BtB,EAAWzO,KAAKD,gB,0EC5H7B+G,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCiJ,YAAa,CACX5H,OAAQrB,EAAMK,QAAQ,GACtB6I,SAAU,KAEZC,YAAa,CACXH,UAAWhJ,EAAMK,QAAQ,IAE3B7G,OAAQ,CACN6H,OAAQrB,EAAMK,QAAQ,GACtBzB,MAAO,YAGJ,SAASwK,GAAT,GAUH,IATFlQ,EASC,EATDA,KACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,OACAC,EAMC,EANDA,UACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,UACA4P,EACC,EADDA,OAEMC,EAAe,SAACC,GACM,SAAtBA,EAAMC,OAAOxW,KACfmG,EAAQoQ,EAAMC,OAAO/J,OACU,WAAtB8J,EAAMC,OAAOxW,KACtBqG,EAAUkQ,EAAMC,OAAO/J,OAEvBlG,EAASgQ,EAAMC,OAAO/J,QAIpBgK,EAAO,uCAAG,WAAOvQ,EAAME,EAAQE,GAArB,eAAA9E,EAAA,6DACVwB,EAAS,GACA,KAATkD,IAAalD,GAAM,gBAAakD,IACrB,KAAXE,IAAepD,GAAM,kBAAeoD,IAC1B,KAAVE,IAActD,GAAM,iBAAcsD,IAJxB,SAKR+P,EAAO,EAAGrT,GALF,2CAAH,0DAWP0K,EAAUZ,KAChB,OACE,oCACE,kBAAC4J,GAAA,EAAD,CAAMC,WAAS,EAACtJ,QAAS,GACvB,kBAACqJ,GAAA,EAAD,CAAMf,MAAI,EAACvJ,GAAI,EAAGgJ,GAAI,GACpB,kBAACwB,GAAA,EAAD,CAAapN,UAAWkE,EAAQuI,aAC9B,kBAACY,GAAA,EAAD,CACE7W,KAAK,OACLyM,MAAOvG,EACP2P,SAAUS,EACVQ,cAAY,GAEZ,kBAACC,GAAA,EAAD,CAAUtK,MAAM,GAAGuK,UAAQ,GAA3B,gBAGA,kBAACD,GAAA,EAAD,CAAUtK,MAAM,aAAhB,aACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,YAAhB,YACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,WAAhB,YACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,OAAhB,SAEF,kBAACwK,GAAA,EAAD,eAGJ,kBAACP,GAAA,EAAD,CAAMf,MAAI,EAACvJ,GAAI,EAAGgJ,GAAI,GACpB,kBAACwB,GAAA,EAAD,CAAapN,UAAWkE,EAAQuI,aAC9B,kBAACY,GAAA,EAAD,CACE7W,KAAK,SACLyM,MAAOrG,EACPyP,SAAUS,EACVQ,cAAY,GAEZ,kBAACC,GAAA,EAAD,CAAUtK,MAAM,GAAGuK,UAAQ,GAA3B,gBAGA,kBAACD,GAAA,EAAD,CAAUtK,MAAM,SAAhB,gBACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,UAAhB,gBACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,SAAhB,iBAEF,kBAACwK,GAAA,EAAD,iBAGJ,kBAACP,GAAA,EAAD,CAAMf,MAAI,EAACvJ,GAAI,EAAGgJ,GAAI,GACpB,kBAACwB,GAAA,EAAD,CAAapN,UAAWkE,EAAQuI,aAC9B,kBAACY,GAAA,EAAD,CACE7W,KAAK,QACLyM,MAAOnG,EACPuP,SAAUS,EACVQ,cAAY,GAEZ,kBAACC,GAAA,EAAD,CAAUtK,MAAM,GAAGuK,UAAQ,GAA3B,4BAGA,kBAACD,GAAA,EAAD,CAAUtK,MAAM,WAAhB,WACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,cAAhB,cACA,kBAACsK,GAAA,EAAD,CAAUtK,MAAM,OAAhB,QAEF,kBAACwK,GAAA,EAAD,gBAGJ,kBAACP,GAAA,EAAD,CAAMf,MAAI,EAACvJ,GAAI,EAAGZ,MAAO,CAAE0B,QAAS,SAClC,kBAAC0J,GAAA,EAAD,CACEpL,MAAO,CAAEI,MAAO,QAChBsL,QAAQ,WACR1N,UAAWkE,EAAQlH,QAEnB,kBAAC2Q,GAAA,EAAD,eACA,kBAACC,GAAA,EAAD,CACE3K,MAAOjG,EACPqP,SAvEe,SAACU,GAC1B9P,EAAU8P,EAAMC,OAAO/J,QAuEb4K,MAAM,aAIZ,kBAACX,GAAA,EAAD,CAAMf,MAAI,EAACvJ,GAAI,EAAGZ,MAAO,CAAE0B,QAAS,SAClC,kBAAC,KAAD,CACE1B,MAAO,CAAEK,OAAQ,QACjB/B,QAAS,kBAAM2M,EAAQvQ,EAAME,EAAQE,KAFvC,a,cCzHFyN,GAAUC,KAAVD,MAEO,SAASuD,KAAmB,IAAD,EACD9R,IAA/BuB,EADgC,EAChCA,YAAaE,EADmB,EACnBA,enBmIhB,SACLiN,EACAjN,GAEAnF,qBAAU,WACJoS,EAAQrN,mBAAmB9F,YACzB,cAAemT,EAAQrN,mBAAmB5F,MAC5CgG,EAActB,eACZuO,EAAQrN,mBAAmB5F,KAAKkT,UAAUzO,aAE5CuB,EAAchB,QAAQiO,EAAQrN,mBAAmB5F,KAAK+E,QAEtDiB,EAActB,eAAe,IAC7BsB,EAAchB,QAAQ,CACpBL,OAAQ,EACRC,KAAM,EACNC,cAAe,EACfC,WAAY,QAIjB,CAACmO,EAAQrN,mBAAmB9F,YAE/Be,qBAAU,WACRmF,EAAcH,kBAAkB,EAAG,MAClC,IAEHhF,qBAAU,WACJoS,EAAQrN,mBAAmB7F,UACzBkT,EAAQrN,mBAAmBhG,OAC7BoG,EAActB,eAAe,MAGhC,CAACuO,EAAQrN,mBAAmB7F,WmBnK/BuW,CAAuBxQ,EAAaE,GACpC,IAAM/G,EAAUkF,aAAY,SAAC9E,GAAD,OAAgBA,EAAMqI,MAAMzI,WAExD,OACE,kBAAC,GAAD,KACE,6BACE,kBAACkW,GAAD,CACElQ,KAAMa,EAAYb,KAClBC,QAASc,EAAcd,QACvBC,OAAQW,EAAYX,OACpBC,UAAWY,EAAcZ,UACzBC,MAAOS,EAAYT,MACnBC,SAAUU,EAAcV,SACxBC,OAAQO,EAAYP,OACpBC,UAAWQ,EAAcR,UACzB4P,OAAQpP,EAAcH,oBAEvB5G,GAAW,kBAAC,IAAD,CAAM0J,GAAG,kBACnB,kBAAC,KAAD,CACEzF,QAAQ,kIAERvD,KAAK,aAIT,kBAAC,GAAD,CAAOqU,MAAO,GAAd,8DACA,kBAAC,KAAD,CACE7Q,QAAS2C,EAAYF,mBAAmB/F,QACxCoU,KAAM,CACJC,OAAQ,EACR/I,GAAI,EACJgJ,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAY1O,EAAYrB,YACxBgQ,WAAY,SAACC,GAAD,OACV,kBAAC,KAAKC,KAAN,KACE,kBAACtL,GAAD,CACErJ,KAAM0U,EACNpK,IAAG,yBAAoBoK,EAAK5J,iBAKpC,yBAAKV,GAAG,kBACN,kBAAC,KAAD,CACEwK,SAAU,SAAC7P,EAAM8P,GAAP,OACR7O,EAAcH,kBAAkBd,EAAO,IAEzCwR,eAAgB,EAChB1O,QAAS/B,EAAYf,KAAKJ,OAAO,EACjCkQ,SAAU,EACVC,MAAqC,EAA9BhP,EAAYf,KAAKD,gBCpEpC,IAoBM0R,GAAe1X,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVkH,cAvBc,CAClBC,YAAa,GACbC,SAAU,GACVC,QAAS,sBACTM,aAAc,GACdtH,MAAO,YACPmH,aAAc,GACdC,cAAc,EACdG,WAAY,CACRC,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,IAAK,GAETN,UAAW,GACXO,cAAe,KACfwP,WAAY,KACZ7H,IAAK,KAQLzP,SAAU,CACNuX,WADM,SACKrX,EAAOC,GACdD,EAAM6G,cAAgB5G,EAAOC,YAK1BmX,GAAeF,GAAahX,QAA5BkX,WACAF,MAAf,Q,iDCZMG,GAAgBlX,EAAQ,KAEtBqT,GAAUC,KAAVD,MAEO,SAAS8D,KACtB,IAAMvW,EAAW6D,cACX2S,EAAWC,cAEXxM,GADU1J,cACJiW,EAASxM,SAAS0M,MAAM,MAC9BjM,EAAYR,EAAI,GALgB,EpB0FR,WACd1J,cAAhB,IAD4D,EAE9B4D,mBAA4B0B,GAFE,mBAErD+M,EAFqD,KAE5CyD,EAF4C,OAGlClS,mBAAsB,IAHY,mBAGrD6C,EAHqD,KAG9C2P,EAH8C,OAI9BxS,mBAA+B,IAJD,mBAIrDyS,EAJqD,KAI5CC,EAJ4C,OAMlC1S,mBAAoB,CAC5C6C,OAAO,EACP4P,SAAS,EACTE,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,aAAa,IAZ6C,mBAMrDC,EANqD,KAM9CC,EAN8C,OAcxBhT,mBAAyB,CAC3D6C,MAAO,EACP4P,QAAS,IAhBiD,mBAcrDQ,EAdqD,KAczCC,EAdyC,OAkBxBlT,oBAAS,GAlBe,mBAoBtDmT,GApBsD,UAoBxC,uCAAG,WAAO7M,GAAP,qBAAAvK,EAAA,6DACjBe,EAAQC,OAAOC,eAAeC,QAAQ,eACtCmW,EAAW,CACbvQ,MAAO,GACP4P,QAAS,IAJU,SAMLhW,EACbe,IADa,UACNb,+BADM,oBACoC2J,IACjD+M,MAFa,+BAAAtX,EAAA,MAEP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAGSL,EAAMe,IAAN,UACPb,+BADO,oBACmC2J,IAJ5C,OAGH1J,EAHG,oCAOGxB,EAPH,4CAFO,uDAYbiY,OAAM,SAACjY,GACN,MAAMA,KAnBW,UAMjBwB,EANiB,OAqBfgJ,EAAK7I,OAAOC,eAAeC,QAAQ,MACrCL,EAAIpB,KAAKyW,WAAW,GAAGvP,OAAOC,KAAKC,OAAnC,mBAAwDgD,GAtBvC,iCAuBLrJ,IAAWM,eAvBN,cAuBnBC,EAvBmB,iBAyBbL,EACHe,IAAIZ,EAAIpB,KAAKkH,OAAOG,MAAMD,KAAM,CAC/B3E,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXC,MAAK,SAACvM,GACL,IACEwL,EAASxL,EAAMxL,KAAKkT,UAAU8E,yBAC9B,SACAhB,EAAS,QAGZa,MAfG,+BAAAtX,EAAA,MAeG,WAAOX,GAAP,SAAAW,EAAA,4DACCX,EADD,2CAfH,uDAzBa,yBA2CbqB,EACHe,IADG,UAECb,+BAFD,oBAE2C2J,EAF3C,aAGF,CACErI,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAIbC,MAAK,SAACvM,GACL,IACE0L,EAAW1L,EAAMxL,KAAKkT,UAAU+E,gBAChC,SACAf,EAAW,QAGdW,OAAM,SAACjY,GACN,MAAMA,KA9DS,eAiErBwB,EAAMA,EAAIpB,KAjEW,kBAkEd,CAAEoB,MAAKwW,aAlEO,4CAAH,uDAqEdM,EAAkB,uCAAG,WAAOpN,GAAP,eAAAvK,EAAA,6DACrBe,EAAQC,OAAOC,eAAeC,QAAQ,eADjB,SAEnBR,EACHoW,OADG,UACOlW,+BADP,oBACiD2J,GAAa,CAChErI,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARG,+BAAAtX,EAAA,MAQG,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAGGL,EACHoW,OADG,UACOlW,+BADP,oBACiD2J,GAAa,CAChErI,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAZP,mCAeGA,EAfH,2CARH,uDAFmB,2CAAH,sDAzFoC,EAwHfK,EAAW0X,GAxHI,mBAwHrDQ,EAxHqD,KAwHlCC,EAxHkC,KAwHvC9X,IAxHuC,EA0HTL,EACjDiY,GA3H0D,mBAkO5D,MAAO,CACLjF,QAAS,CACPkF,aACAE,cArOwD,KAsOxDpF,UACAsE,QACAlQ,QACA4P,UACAQ,cAEFzR,cAAe,CACboS,gBACAE,iBA9OwD,KA0HpChY,IAqHpBiY,aAjHiB,SAAC3H,GACpB8F,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,kBAEGoF,EAAE2E,OAAOxW,KAAO6R,EAAE2E,OAAO/J,YA8G5BgN,YAzGkB,SAACzZ,EAAcmP,GACnCsJ,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,kBAEGzM,EAAOmP,QAsGVuK,WAjGe,SAAC7H,GAClBsG,GAAW,SAAC1L,GACV,OAAO,2BACFA,GADL,kBAEGoF,EAAE2E,OAAOxW,KAAO6R,EAAE2E,OAAO/J,YA8F5BkN,aAzFiB,SAAC9H,GACpBoG,GAAS,SAACxL,GACR,OAAO,2BACFA,GADL,kBAEGoF,EAAE2E,OAAOxW,KAAO6R,EAAE2E,OAAO/J,YAsF5BmN,gBAjFoB,SAAC5Z,EAAc6Z,GACrClB,GAAc,SAAClM,GACb,IAAMqN,EAAQrN,EAAMzM,GAAQ6Z,EAC5B,OAAO,2BACFpN,GADL,kBAEGzM,EAAO8Z,QA6EV7B,WACA8B,UAzEc,WAChBtB,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE4L,YAAY,QAsEd2B,WAjEe,WACjBvB,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE4L,YAAY,QA8Dd4B,WAvCe,WACjBxB,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE6L,QAAQ,QAoCV4B,YA/BgB,WAClBzB,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE6L,QAAQ,QA4BV6B,gBA3DoB,WACtB1B,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE8L,aAAa,QAwDf6B,iBAnDqB,WACvB3B,GAAS,SAAChM,GACR,OAAO,2BACFA,GADL,IAEE8L,aAAa,QAgDfZ,eoB/U+B0C,GAA3BnG,EAN8B,EAM9BA,QAASjN,EANqB,EAMrBA,epBoVc,SAC/BiN,EACAjN,EACA8E,GAIAjK,qBAAU,WACRmF,EAAcoS,cAActN,KAC3B,IAEHjK,qBAAU,WACR,GAAIoS,EAAQkF,WAAWrY,UAAW,CAChCkG,EAAc0Q,WAAWzD,EAAQkF,WAAWnY,KAAKoB,KACjD,IAAMgJ,EAAK7I,OAAOC,eAAeC,QAAQ,MAEvCwR,EAAQkF,WAAWnY,KAAKoB,IAAIqV,WAAW,GAAGvP,OAAOC,KAAKC,OAAtD,mBACYgD,IAEZpE,EAAcwS,YAAY,UAAU,MAGvC,CAACvF,EAAQkF,WAAWrY,YAEvBe,qBAAU,WACJoS,EAAQkF,WAAWpY,UACrBuD,QAAQC,IAAI0P,EAAQkF,WAAWvY,MAAMqD,YAGtC,CAACgQ,EAAQkF,WAAWpY,WoB/WvBsZ,CAAyBpG,EAASjN,EAAesE,EAAI,IAErD,IAQMgP,EAAW,CACf,CACEC,MAAO,qBACP5U,OAAQsO,EAAQA,QAAQhM,cAAcJ,WAExC,CACE0S,MAAO,2BACP5U,OAAQsO,EAAQA,QAAQhM,cAAcH,UAExC,CACEyS,MAAO,qBACP5U,OAAQsO,EAAQA,QAAQhM,cAAcF,SAExC,CACEwS,MAAO,eACP5U,OAAQsO,EAAQA,QAAQhM,cAAcD,MAIpCwS,EAAU,CACd,CACED,MAAO,qBACP5U,OAAQsO,EAAQA,QAAQrM,WAAWC,WAErC,CACE0S,MAAO,2BACP5U,OAAQsO,EAAQA,QAAQrM,WAAWE,UAErC,CACEyS,MAAO,qBACP5U,OAAQsO,EAAQA,QAAQrM,WAAWG,SAErC,CACEwS,MAAO,eACP5U,OAAQsO,EAAQA,QAAQrM,WAAWI,MAIvC,OACE,kBAAC,GAAD,KACE,yBAAKoD,GAAG,QACN,yBAAK7B,UAAU,YACZ0K,EAAQsE,MAAMJ,OACb,yBAAK/M,GAAG,UACN,kBAAC,IAAD,CAAMzB,GAAE,yBAAoB2B,EAAI,KAC9B,kBAAC,KAAD,CAAQzB,QArDI,WACxB,IAAM4Q,EAAa,aACjB7K,IAAK,CAAC,GAAD,OAAIzN,+BAAJ,0BAAoDmJ,EAAI,MAC1D2I,EAAQA,SAEb5S,EAASqW,GAAW+C,MAgDR,6BAEF,kBAAC,KAAD,CACEC,QAAM,EACN7Q,QAAS7C,EAAcgT,WACvBzO,MAAO,CAAEwG,WAAY,QACrB3I,MAAM,UAJR,4BAQA,kBAAC,GAAD,CACE4J,OAAO,2BACPN,UAAWuB,EAAQsE,MAAMF,OACzB/S,MAAO0B,EAAciT,YACrB7G,OACE,yBAAK7J,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CACEhC,MAAM,SACNS,QAAS,kBACP7C,EAAcsS,iBAAiBxN,KAHnC,+BAYN,yBAAKP,MAAO,CAAEK,OAAQ,UACtB,kBAAC,GAAD,CAAOoJ,MAAO,GAAd,wEACA,yBAAKzJ,MAAO,CAAEK,OAAQ,YAI1B,yBAAKR,GAAG,UACN,kBAAC,KAAD,CAAQzK,KAAK,UAAUkJ,QAAS7C,EAAc8S,WAA9C,sBAGA,kBAAC,GAAD,CACE9G,OAAO,2BACPN,UAAWuB,EAAQsE,MAAMH,WACzB9S,MAAO0B,EAAc+S,YAEpBzV,QAAQC,IAAI0P,EAAQA,QAAQ/L,QAC7B,kBAAC,GAAD,CACER,UAAWuM,EAAQA,QAAQvM,UAC3BoE,UAAWA,EACX6O,QAAS1G,EAAQA,QAAQ/L,OAAOG,MAAMD,KACtCwS,UAAW3G,EAAQkF,WAAWrY,UAC9BwE,MAAO0B,EAAc+S,gBAM/B,yBAAKxQ,UAAU,cACb,yBAAKA,UAAU,iBACb,yBACE6B,GAAG,QACHS,IAAG,UAAK1J,+BAAL,0BAAqDmJ,EAAI,IAC5DS,IAAI,UAGR,yBAAKxC,UAAU,kBAEb,6BACE,0BAAM6B,GAAG,OAAO6I,EAAQA,QAAQzM,eAElC,kBAAC,GAAD,CAAOwN,MAAO,GAAIf,EAAQA,QAAQ9M,aAClC,kBAAC,GAAD,CAAO6N,MAAO,GAAIf,EAAQA,QAAQ7M,UAClC,kBAAC,GAAD,CAAO4N,MAAO,GAAd,wBAAwBf,EAAQA,QAAQ5M,SACxC,yBAAK+D,GAAG,QACN,yBAAK7B,UAAU,iBACb,kBAAC,KAAD,CACEA,UAAU,qBACVsR,WAAW,aACXjV,KAAK,QACLoN,OAAQ,iEACR8H,UAAQ,EACR3W,QAAS8P,EAAQkF,WAAWtY,QAC5B2U,WAAY8E,EACZ7E,WAAY,SAACC,GACX,OACE,kBAAC,KAAKC,KAAN,CAAWoF,IAAKrF,EAAK6E,OACnB,kBAAC,KAAK5E,KAAKqF,KAAX,CAAgBT,MAAO,6BAAM7E,EAAK6E,SAClC,6BAAM7E,EAAK/P,OAAX,eAMV,yBAAK4D,UAAU,kBACb,kBAAC,KAAD,CACEA,UAAU,qBACVsR,WAAW,aACXjV,KAAK,QACLoN,OAAQ,0DACR8H,UAAQ,EACR3W,QAAS8P,EAAQkF,WAAWtY,QAC5B2U,WAAYgF,EACZ/E,WAAY,SAACC,GACX,OACE,kBAAC,KAAKC,KAAN,CAAWoF,IAAKrF,EAAK6E,OACnB,kBAAC,KAAK5E,KAAKqF,KAAX,CAAgBT,MAAO,6BAAM7E,EAAK6E,SAClC,6BAAM7E,EAAK/P,OAAX,kBAShB,kBAAC,GAAD,CAAOqP,MAAO,GAAd,gBACA,kBAAC2C,GAAD,CACEsD,OAAQhH,EAAQA,QAAQtM,aACxB4B,UAAU,iBAEX0K,EAAQsE,MAAMJ,QACb,6BACE,6BACE,kBAAC,GAAD,CACEnD,MAAO,EACPzJ,MAAO,CACLuJ,WAAY,OACZoG,YAAa,OACbjO,QAAS,iBALb,mCAUA,kBAAC,KAAD,CACE2I,SAAU,SAAC1G,GAAD,OACRlI,EAAcwS,YAAY,QAAStK,MAGtC+E,EAAQsE,MAAMlQ,QACa,IAAzB4L,EAAQ5L,MAAM8S,OACb,mFAEA,6BACE,kBAAC,KAAD,CACEN,WAAW,WACXtP,MAAO,CACLgC,gBAEE,WADA0G,EAAQ5L,MAAM4L,EAAQwE,WAAWpQ,OAAOhI,MAEpC,UAEA,WADA4T,EAAQ5L,MAAM4L,EAAQwE,WAAWpQ,OAAOhI,MAExC,0BACA,WAERmV,WAAYvB,EAAQ5L,MACpB2K,OACE,6BACE,yDAGJyF,WAAY,CACV7C,SAAU,SAAC7P,GACTzB,QAAQC,IAAIwB,IAEd8P,SAAU,GAEZJ,WAAY,SAACC,GACX,OACE,kBAAC,KAAKC,KAAN,CAAWoF,IAAKrF,EAAKlN,UAAWkN,EAAKzP,QAkBzC,kBAAC,KAAD,CAAQ4D,QAAS7C,EAAckT,iBAA/B,4BAGA,kBAAC,KAAD,CACEnD,SAAuC,IAA7B9C,EAAQwE,WAAWpQ,MAC7BwB,QAAS,kBACP7C,EAAc2S,gBAAgB,SAAU,KAH5C,gBAQA,kBAAC,KAAD,CACE5C,SACE9C,EAAQ5L,MAAM8S,OAASlH,EAAQwE,WAAWpQ,MAAQ,EAEpDwB,QAAS,kBACP7C,EAAc2S,gBAAgB,QAAS,KAL3C,iBAWF,kBAAC,GAAD,CACE3G,OAAO,+CACPN,UAAWuB,EAAQsE,MAAMD,YACzBhT,MAAO0B,EAAcmT,kBAErB,kBAAC,GAAD,CACEnW,KAAMiQ,EAAQsE,MAAMD,YACpBhT,MAAO0B,EAAcmT,iBACrBiB,UACEnH,EAAQ5L,MAAM4L,EAAQwE,WAAWpQ,OAAOH,OAAOC,KAC5CC,KAELiT,SAAUrU,EAAcgR,SACxB9X,OAAQ+T,EAAQ5L,MAAM4L,EAAQwE,WAAWpQ,OAAOnI,OAChDwY,cAAe,kBACb1R,EAAc2S,gBAAgB,QAAS,UAOrD,yBAAKpO,MAAO,CAAEwK,UAAW,SACvB,kBAAC,GAAD,CACEf,MAAO,EACPzJ,MAAO,CACLuJ,WAAY,OACZoG,YAAa,OACbjO,QAAS,iBALb,6BAUA,kBAAC,KAAD,CACE2I,SAAU,SAAC1G,GAAD,OACRlI,EAAcwS,YAAY,UAAWtK,MAGxC+E,EAAQsE,MAAMN,UACe,IAA3BhE,EAAQgE,QAAQkD,OACf,6EAEA,6BACE,kBAAC,KAAD,CACEN,WAAW,WACXjV,KAAK,QACLoN,OAAQ,0DACR8H,UAAQ,EACRtF,WAAYvB,EAAQgE,QACpBQ,WAAY,CACV7C,SAAU,SAAC7P,GACTzB,QAAQC,IAAIwB,IAEd8P,SAAU,GAEZJ,WAAY,SAACC,GACX,OACE,kBAAC,KAAKC,KAAN,KACE,kBAAC,KAAD,CAAM4E,MAAO7E,EAAKlN,UAChB,8CAAUkN,EAAKzP,MACf,0DAAYyP,EAAK/N,cACjB,8CAAU+N,EAAKrV,YAqCzB,kBAAC,KAAD,CACE0W,SAAyC,IAA/B9C,EAAQwE,WAAWR,QAC7BpO,QAAS,kBACP7C,EAAc2S,gBAAgB,WAAY,KAH9C,gBAQA,kBAAC,KAAD,CACE5C,SACE9C,EAAQgE,QAAQkD,OAASlH,EAAQwE,WAAWR,QAAU,EAExDpO,QAAS,kBACP7C,EAAc2S,gBAAgB,UAAW,KAL7C,sBAoBpB,IAAM2B,GAAe,SAAChR,GAAgB,IAC5B5C,EAAoD4C,EAApD5C,UAAsBiT,GAA8BrQ,EAAzCwB,UAAyCxB,EAA9BqQ,SAASC,EAAqBtQ,EAArBsQ,UAAWtV,EAAUgF,EAAVhF,MADf,EnBhXM,WAAO,IAAD,EACrBE,mBAAyB8C,GADJ,mBACxCD,EADwC,KACjC2P,EADiC,OAEjBxS,oBAAkB,GAFD,mBAExC+V,EAFwC,KAE/BC,EAF+B,KAGzCC,EAAa,uCAAG,WAAOd,GAAP,mBAAApZ,EAAA,6DAChBe,EAAQC,OAAOC,eAAeC,QAAQ,eACpC2I,EAAK7I,OAAOC,eAAeC,QAAQ,MAFrB,SAGJR,EACbe,IADa,UACN2X,EADM,YACKvP,GAAM,CACvB3H,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARa,+BAAAtX,EAAA,MAQP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAGSL,EACTe,IADS,UACF2X,EADE,YACSvP,GAAM,CACvB3H,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAZP,OAGHwB,EAHG,oCAeGxB,EAfH,4CARO,uDAHI,cAGhBwB,EAHgB,yBA6BbA,EAAIpB,MA7BS,2CAAH,sDAgCb0a,EAAc,uCAAG,WACrB1a,EACA2Z,GAFqB,eAAApZ,EAAA,6DAIjBe,EAAQC,OAAOC,eAAeC,QAAQ,eAC1C6B,QAAQC,IAAIoW,GALS,SAMf1Y,EACHC,KAAKyY,EAAS3Z,EAAM,CACnByC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARG,+BAAAtX,EAAA,MAQG,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAGGL,EACHC,KAAKyY,EAAS3Z,EAAM,CACnByC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAZP,mCAeGA,EAfH,2CARH,uDANe,2CAAH,wDAkCd+a,EAAa,uCAAG,WAAO3a,EAAW2Z,GAAlB,eAAApZ,EAAA,6DAChBe,EAAQC,OAAOC,eAAeC,QAAQ,eADtB,SAEdR,EACH2Z,IAAIjB,EAAS3Z,EAAM,CAClByC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARG,+BAAAtX,EAAA,MAQG,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAIGL,EACH2Z,IAAIjB,EAAS3Z,EAAM,CAClByC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAbP,mCAgBGA,EAhBH,2CARH,uDAFc,2CAAH,wDArE4B,EAoGNK,EAAWwa,GApGL,mBAoGxCI,EApGwC,KAoGvBC,EApGuB,KAoG5Bxa,IApG4B,EAqGNL,EAAW0a,GArGL,mBAqGxCI,EArGwC,KAqGvBC,EArGuB,KAqG5B1a,IArG4B,EAsGJL,EAAWya,GAtGP,mBAsGxCO,EAtGwC,KAsGtBC,EAtGsB,KAsG3B5a,IAoCpB,MAAO,CACL+G,MAAO,CAAEA,QAAOkT,UAASM,WAAUE,WAAUE,aAC7CE,YAAa,CACXD,eACAF,cACAF,cACA9D,WACAoE,YAhCgB,SAAC7a,EAAW8a,GAC9B,IAAMD,EAAc/T,EAAME,QAAQ6H,KAAI,SAAC5D,EAAO8P,GAC5C,OAAID,IAAMC,EACD/a,EAEAiL,KAGXwL,GAAS,SAACxL,GACR,OAAO,2BACFA,GADL,IAEEjE,QAAS6T,QAsBX3C,WA1Ce,SAAC1Z,EAAciB,GAChCgX,GAAS,SAACxL,GACR,OAAO,2BACFA,GADL,kBAEGzM,EAAOiB,QAuCVub,WAlBe,SAACvb,GAClBgX,GAAS,SAACxL,GACR,OAAO,2BACFA,GADL,IAEEvG,KAAMjF,QAeRwa,emB8N2BgB,GAAvBnU,EAF2B,EAE3BA,MAAO8T,EAFoB,EAEpBA,YAUf,OnBnO0C,SAC1C9T,EACA8T,EACAzU,EACAkT,EACAD,EACA8B,GAGA5a,qBAAU,WACR,IAAM6a,EAAa,IAAIC,MAAMjV,EAAUyT,QACvCuB,EAAWE,KAAK,IAChBT,EAAY1C,WAAW,UAAWiD,KACjC,CAAChV,IAEJ7F,qBAAU,WACJ+Y,GACFuB,EAAYL,YAAYnB,KAEzB,CAACC,IAEJ/Y,qBAAU,WACJwG,EAAMwT,SAAS/a,YACjBqb,EAAYnE,SAAS3P,EAAMwT,SAAS7a,MACD,IAA/BqH,EAAMA,MAAME,QAAQ4S,QACtBgB,EAAYX,YAAW,MAG1B,CAACnT,EAAMwT,SAAS/a,YAEnBe,qBAAU,WACR,GAAIwG,EAAM0T,SAASjb,UAAW,CACjByB,OAAOC,eAAeC,QAAQ,MACzCga,OAED,CAACpU,EAAM0T,SAASjb,YAEnBe,qBAAU,WACR,GAAIwG,EAAM4T,UAAUnb,UAAW,CAClByB,OAAOC,eAAeC,QAAQ,MACzCga,OAED,CAACpU,EAAM4T,UAAUnb,YmBgLpB+b,CACExU,EACA8T,EACAzU,EACAkT,EACAD,EACArV,GAIA,yBAAK8F,GAAG,eACN,yBAAKG,MAAO,CAAEK,OAAQ,UACrBvD,EAAMA,MAAME,QAAQ6H,KAAI,SAAC7O,EAAG8a,GAAJ,OACvB,6BACE,2BAAOS,QAAO,WAAMT,GAAK9Q,MAAO,CAAE8B,SAAU,SACzCgP,EAAI,EADP,yBACiB3U,EAAU2U,IAE3B,kBAAC,KAAD,CACEjR,GAAE,WAAMiR,GACRU,YAAY,SACZhd,KAAK,SACL6V,SAAU,SAAChE,GAAD,OAAOuK,EAAYC,YAAYxK,EAAE2E,OAAO/J,MAAO6P,IACzD7P,MAAOjL,QAIb,2BACEub,QAAQ,eACRvR,MAAO,CAAE4B,aAAc,MAAO4I,UAAW,OAAQ1I,SAAU,SAF7D,6BAMA,kBAAC,KAAM2P,SAAP,CACE5R,GAAG,eACHrL,KAAK,eACLgd,YAAY,2BACZnH,SAAU,SAAChE,GAAD,OAAOuK,EAAY1C,WAAW7H,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAChEA,MAAOnE,EAAMA,MAAMV,aACnBsV,SAAU,CAAEC,QAAS,EAAGC,QAAS,MAEnC,kBAAC,GAAD,CACE5R,MAAO,CAAEI,MAAO,OAAQoK,UAAW,QACnChF,cAAc,4BACdzQ,OAAQ6b,EAAYI,WACpBtL,KAAM5I,EAAMA,MAAMpC,OAEpB,yBAAKsD,UAAU,WAAWgC,MAAO,CAAEwK,UAAW,SAC5C,yBAAK3K,GAAG,UACL/C,EAAMkT,QACL,kBAAC,KAAD,CACE5a,KAAK,UACLwD,QAASkE,EAAM0T,SAASlb,QACxBgJ,QAAS,WACPsS,EAAYH,YACV,CACEzT,QAASF,EAAMA,MAAME,QACrBZ,aAAcU,EAAMA,MAAMV,aAC1B1B,KAAMoC,EAAMA,MAAMpC,MAEpB0U,KAVN,4BAiBA,kBAAC,KAAD,CACEha,KAAK,UACLwD,QAASkE,EAAM4T,UAAUpb,QACzBgJ,QAAS,WACPsS,EAAYD,aACV,CACE3T,QAASF,EAAMA,MAAME,QACrBZ,aAAcU,EAAMA,MAAMV,aAC1B1B,KAAMoC,EAAMA,MAAMpC,MAEpB0U,KAVN,gCAuBNyC,GAAmB,SAAC9S,GAAgB,IAChCtG,EAA4DsG,EAA5DtG,KAAMsB,EAAsDgF,EAAtDhF,MAAO8V,EAA+C9Q,EAA/C8Q,UAAWC,EAAoC/Q,EAApC+Q,SAAUnb,EAA0BoK,EAA1BpK,OADH,GAC6BoK,EAAlBoO,cnBtQV,WAAyB,IAAD,EACtClT,mBAAyB8C,GADa,mBACzDD,EADyD,KAClD2P,EADkD,KAG1DyD,EAAa,uCAAG,WAAO4B,GAAP,iBAAA9b,EAAA,6DAChBe,EAAQC,OAAOC,eAAeC,QAAQ,eAC/BF,OAAOC,eAAeC,QAAQ,MAFrB,SAGJR,EACbe,IADa,UACNqa,GAAO,CACb5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARa,+BAAAtX,EAAA,MAQP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAISL,EACTe,IADS,UACFqa,GAAO,CACb5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAbP,OAIHwB,EAJG,oCAgBGxB,EAhBH,4CARO,uDAHI,cAGhBwB,EAHgB,yBA8BbA,EAAIpB,MA9BS,2CAAH,sDAiCb2a,EAAa,uCAAG,WAAO0B,GAAP,eAAA9b,EAAA,6DAChBe,EAAQC,OAAOC,eAAeC,QAAQ,eADtB,SAEdR,EACH2Z,IACCyB,EACA,GACA,CACE5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAIbD,MAZG,+BAAAtX,EAAA,MAYG,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAIGL,EACH2Z,IAAIyB,EAAK,CACR5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAbP,mCAgBGA,EAhBH,2CAZH,uDAFc,2CAAH,sDAmCb0c,EAAgB,uCAAG,WAAOD,GAAP,eAAA9b,EAAA,6DACnBe,EAAQC,OAAOC,eAAeC,QAAQ,eADnB,SAEjBR,EACHoW,OAAOgF,EAAK,CACX5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARG,+BAAAtX,EAAA,MAQG,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAIGL,EACHoW,OAAOgF,EAAK,CACX5Z,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAbP,mCAgBGA,EAhBH,2CARH,uDAFiB,2CAAH,sDAvE0C,EAsGvBK,EAAWwa,GAtGY,mBAsGzDI,EAtGyD,KAsGxCC,EAtGwC,KAsG7Cxa,IAtG6C,EAuGvBL,EAAW0a,GAvGY,mBAuGzDI,EAvGyD,KAuGxCC,EAvGwC,KAuG7C1a,IAvG6C,EAwGjBL,EAAWqc,GAxGM,mBA0GhE,MAAO,CACLhF,YAAa,CAAEuD,WAAUE,WAAUwB,YA3G2B,KA2GdlV,SAChDmV,kBAAmB,CACjBC,eA7G4D,KAwG1Cnc,IAMlBwa,cACAE,cACAhE,amBuJuC0F,IAAnCpF,EAF+B,EAE/BA,YAAakF,EAFkB,EAElBA,kBAWrB,OnB7JyC,SACzCnV,EACA8T,EACAnY,EACAoX,EACAC,EACAnb,EACAoF,GAEgB1D,cAChBC,qBAAU,WACJmC,GACFmY,EAAYL,YAAYV,KAEzB,CAACpX,IAEJnC,qBAAU,WACJwG,EAAMwT,SAAS/a,WACjBqb,EAAYnE,SAAS3P,EAAMwT,SAAS7a,QAErC,CAACqH,EAAMwT,SAAS/a,YAEnBe,qBAAU,WACJwG,EAAM0T,SAASjb,YACjBua,GAAS,SAAC7O,GAWR,OAVmBA,EAAM4D,KAAI,SAAC/H,GAC5B,OAAIA,EAAMA,MAAMG,WAAatI,EACpB,2BACFmI,GADL,IAEEhI,MAAO,WAGFgI,QAKb/C,OAED,CAAC+C,EAAM0T,SAASjb,YAEnBe,qBAAU,WACJwG,EAAMkV,YAAYzc,YACpBua,GAAS,SAAC7O,GASR,OARmBA,EAAM4D,KAAI,SAAC/H,GAC5B,GAAIA,EAAMA,MAAMnI,SAAWA,EACzB,OAAO,2BACFmI,GADL,IAEEhI,MAAO,iBAMfiF,OAED,CAAC+C,EAAMkV,YAAYzc,YmB4FtB6c,CACErF,EACAkF,EACAxZ,EACAoX,EACAC,EACAnb,EACAoF,GAGA,yBAAK8F,GAAG,eACN,yBAAKG,MAAO,CAAEK,OAAQ,UACrB0M,EAAYjQ,MAAME,QAAQ6H,KAAI,SAAC7O,EAAW8a,GAAZ,OAC7B,6BACE,kBAAC,GAAD,CAAOrH,MAAO,GACX,IACAqH,EAAI,EAFP,yBAEiB/D,EAAYjQ,MAAMX,UAAU2U,IAE7C,kBAAC,GAAD,CAAOrH,MAAO,GAAIzT,GAClB,yBAAKgK,MAAO,CAAEK,OAAQ,cAG1B,2BAAOkR,QAAQ,eAAevR,MAAO,CAAE4B,aAAc,QAArD,6BAGA,kBAAC,GAAD,CAAO6H,MAAO,GAAIsD,EAAYjQ,MAAMV,cACpC,yBAAK4D,MAAO,CAAEK,OAAQ,UACtB,kBAAC,GAAD,CAAOoJ,MAAO,GAAd,+BAA0BsD,EAAYjQ,MAAMpC,MAC5C,yBAAKsF,MAAO,CAAEK,OAAQ,UACtB,yBAAKrC,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CACEvB,QAAS,WACP2T,EAAkBxB,YAAYZ,KAFlC,gBAOA,kBAAC,KAAD,CACEvR,QAAS,WACP2T,EAAkBC,eAAerC,KAFrC,kBASJ,yBAAK7P,MAAO,CAAEK,OAAQ,Y,uCCljBfgS,GAAe,SAC1Bxa,EACAya,GAGE,IAAMlc,EAAUC,cAElBC,qBAAU,WACR,GAAIuB,EAAQtC,UAAW,CACrB,IAAMgL,EAAY1I,EAAQpC,KAAK8c,SAAS/F,MAAM,KAC9CpW,EAAQG,KAAR,UAAgB+b,EAAhB,YAA2B/R,EAAU,QAEtC,CAAC1I,EAAQtC,YAEZe,qBAAU,WACJuB,EAAQrC,UAEVuD,QAAQC,IAAInB,EAAQxC,SAErB,CAACwC,EAAQrC,YCHC,SAASgd,KAAiB,IAAD,EnB6BR,WAAmB,IAAD,EAClBvY,mBAAwB0B,GADN,mBACzC+M,EADyC,KAChCyD,EADgC,OAE1BlS,mBAAiB,IAFS,mBAEzCoK,EAFyC,KAEpCoO,EAFoC,KAI1CC,EAAe,uCAAG,WAAOjd,GAAP,iBAAAO,EAAA,6DAClBe,EAAQC,OAAOC,eAAeC,QAAQ,eADpB,SAENR,EACbC,KADa,UACLC,+BADK,YACqCnB,EAAM,CACvDyC,QAAS,CACP,gCAAiC,WACjCC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MATa,+BAAAtX,EAAA,MASP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAGSL,EACTC,KADS,UACDC,+BADC,YACyCnB,EAAM,CACvDyC,QAAS,CACP,gCAAiC,WACjCC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,OAAM,SAACjY,GACN,MAAMA,KAbP,OAGHwB,EAHG,oCAgBGxB,EAhBH,4CATO,uDAFM,cAElBwB,EAFkB,yBA8BfA,GA9Be,2CAAH,sDAiCf8b,EAAQ,uCAAG,WAAOpS,EAAmB9K,GAA1B,mBAAAO,EAAA,6DACXe,EAAQC,OAAOC,eAAeC,QAAQ,gBACpC0b,EAAU,IAAI7a,UACZC,OAAO,QAASvC,GACxBmd,EAAQ5a,OAAO,OAAQ,cAJR,SAKCtB,EACbC,KADa,UAETC,+BAFS,0BAEuC2J,GACnDqS,EACA,CACE1a,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,oCAChBwW,OAAQ,uBACR,gCAAiC,OAItCD,MAba,+BAAAtX,EAAA,MAaP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAISL,EACTC,KADS,UAELC,+BAFK,0BAE2C2J,GACnDqS,EACA,CACE1a,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,oCAChBwW,OAAQ,uBACR,gCAAiC,OAItCD,OAAM,SAACjY,GACN,MAAMA,KAlBP,OAIHwB,EAJG,oCAqBGxB,EArBH,4CAbO,uDALD,cAKXwB,EALW,yBA0CRA,EAAIpB,MA1CI,2CAAH,wDArCkC,EAqF1CC,EAAWgd,GArF+B,mBAmF1CG,EAnF0C,KAoFnCC,EApFmC,KAoFxC/c,IApFwC,EAyF1CL,EAAWid,GAzF+B,mBA6LhD,MAAO,CAAEI,YAnB4B,CACnCrK,UACAmK,gBACAG,UA7K8C,KA8K9C3O,OAeoB4O,aAbiB,CACrCH,mBACAI,aAlL8C,KAwFxCnd,IA2FNiY,aAxFmB,SAACxZ,EAAc2e,GAClChH,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,kBAEGzM,EAAO2e,QAqFZC,SAvEe,SAAC3d,GAChBgd,EAAOhd,IAuEP4d,mBAvByB,SAAC7e,EAAc8e,GACxCnH,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEE5E,WAAW,2BACN4E,EAAM5E,YADD,kBAEP7H,EAAO8e,UAkBdC,UAlFgB,SAACC,GACjBrH,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEEnF,QAAS0X,QA+EbC,cA7DoB,SAAChe,EAAcsb,GACnC5E,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAU0I,KAAI,SAAC6O,EAAG5C,GACxC,OAAIC,IAAUD,EACLrb,EAEAie,KAGX,OAAO,2BACFzS,GADL,IAEE9E,UAAWA,QAmDfwX,YA9CkB,WAClBxH,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAUyX,OAAO,IACzC,OAAO,2BACF3S,GADL,IAEE9E,UAAWA,QA0Cf0X,eArCqB,SAAC9C,GACtB5E,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAU2X,QAAO,SAACJ,EAAG5C,GAAJ,OAAUA,IAAMC,KACzD,OAAO,2BACF9P,GADL,IAEE9E,UAAWA,QAiCf4X,WAzEiB,SAACte,GAClB0W,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEEhF,aAAcxG,UmBjJkBue,GAA9BjB,EAD8B,EAC9BA,YAAaE,EADiB,EACjBA,aAIrB,OAHAZ,GAAaU,EAAYC,UAAW,kBnB2NL,SAC/BD,EACAE,GAIA3c,qBAAU,WACR,GAAIyc,EAAYF,cAActd,UAAW,CACvC,IAAMgL,EAAYwS,EAAYF,cAAcpd,KAAKyC,QAAQoU,SAASE,MAChE,KAEFyG,EAAaC,aAAa3S,EAAU,GAAIwS,EAAY1O,QAErD,CAAC0O,EAAYF,cAActd,YAE9Be,qBAAU,WACJyc,EAAYF,cAAcrd,UAE5BuD,QAAQC,IAAI+Z,EAAYF,cAAcxd,SAEvC,CAAC0d,EAAYF,cAAcrd,WmB9O9Bye,CAAyBlB,EAAaE,GAGpC,kBAAC,GAAD,KACE,yBAAKpT,GAAG,QACN,yBAAK7B,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CACEjH,QACEma,EAAYF,cAAcvd,SAC1Byd,EAAYC,UAAU1d,QAExBgJ,QAAS,kBAAM2U,EAAaH,iBAAiBC,EAAYrK,WAL3D,kBAWJ,yBAAK1K,UAAU,cACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,kBAACoG,GAAD,CAAUC,IAAK0O,EAAY1O,IAAKC,QAAS2O,EAAaG,aAG1D,yBAAKpV,UAAU,kBACb,2BAAOuT,QAAQ,gBAAf,gBACA,kBAAC,KAAD,CACEnc,KAAK,OACLZ,KAAK,cACLgd,YAAY,mBACZvQ,MAAO8R,EAAYrK,QAAQ9M,YAC3ByO,SAAU,SAAChE,GAAD,OACR4M,EAAajF,aAAa3H,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,UAGtD,2BAAOsQ,QAAQ,gBAAf,aACA,kBAAC,KAAD,CACEnc,KAAK,OACLZ,KAAK,WACLgd,YAAY,YACZnH,SAAU,SAAChE,GAAD,OACR4M,EAAajF,aAAa3H,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAEpDA,MAAO8R,EAAYrK,QAAQ7M,WAE7B,yBAAKmC,UAAU,iBACb,2BAAOuT,QAAQ,gBAAf,kBACA,kBAAC,KAAD,CACE2C,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,aACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,YACL6V,SAAU,SAAChE,GAAD,OACR4M,EAAaI,mBAAmBhN,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAE1DA,MAAO8R,EAAYrK,QAAQrM,WAAWC,YAExC,kBAAC,KAAD,CACE4X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,YACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,WACL6V,SAAU,SAAChE,GAAD,OACR4M,EAAaI,mBAAmBhN,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAE1DA,MAAO8R,EAAYrK,QAAQrM,WAAWE,WAExC,kBAAC,KAAD,CACE2X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,WACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,UACL6V,SAAU,SAAChE,GAAD,OACR4M,EAAaI,mBAAmBhN,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAE1DA,MAAO8R,EAAYrK,QAAQrM,WAAWG,UAExC,kBAAC,KAAD,CACE0X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,OACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,MACL6V,SAAU,SAAChE,GAAD,OACR4M,EAAaI,mBAAmBhN,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAE1DA,MAAO8R,EAAYrK,QAAQrM,WAAWI,OAG1C,yBAAKuB,UAAU,kBACb,2BAAOuT,QAAQ,gBAAf,YACA,kBAAC,KAAD,CAAyB+C,MAAOC,KAAcC,OAAQC,MACpD,kBAAC,KAAD,CACEjgB,KAAK,UACLyM,MAAO8R,EAAYrK,QAAQ5M,QAC3BuO,SAAU,SAACmJ,GAAD,OAAUP,EAAaM,UAAUC,IAC3CnU,OAAO,iBACPmS,YAAY,qBACZ9F,QAAQ,SACRgJ,gBAAgB,EAChBC,UAAQ,EACRC,WAAS,EACTC,MAAI,KAIR,2BAAOtD,QAAQ,gBAAf,QACA,kBAAC,GAAD,CACEvR,MAAO,CAAEI,MAAO,QAChBoF,cAAc,OACdzQ,OAAQke,EAAac,WACrBrO,KAAMqN,EAAYrK,QAAQzM,kBAKlC,yBAAK+D,MAAO,CAAEwK,UAAW,SACvB,2BAAO+G,QAAQ,gBAAf,gBACA,kBAACjJ,GAAD,CACEwM,WAAS,EACT1f,KAAK,OACLZ,KAAK,eACLgd,YAAY,eACZvQ,MAAO8R,EAAYrK,QAAQtM,aAC3BiO,SAAU,SAAChE,GAAD,OACR4M,EAAajF,aAAa3H,EAAE2E,OAAOxW,KAAM6R,EAAE2E,OAAO/J,QAEpD8T,WAAS,IAEX,2BAAOxD,QAAQ,gBAAf,aACCwB,EAAYrK,QAAQvM,UAAU0I,KAAI,SAAC5D,EAAO8P,GACzC,IAAMiE,EAAc,mBAAejE,EAAQ,GAC3C,OACE,6BACE,kBAAC,KAAD,CACEmD,YAAac,EACbC,WACE,kBAAC,KAAD,CACEpX,MAAM,YACNS,QAAS,kBAAM2U,EAAaY,eAAe9C,KAF7C,UAOFS,YAAY,WACZhd,KAAK,YACL6V,SAAU,SAAChE,GAAD,OACR4M,EAAaQ,cAAcpN,EAAE2E,OAAO/J,MAAO8P,IAE7C9P,MAAOA,IAET,yBAAKjB,MAAO,CAAEK,OAAQ,eAK9B,yBAAKrC,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CAAQvB,QAAS2U,EAAaU,aAA9B,qBC3KG,SAASuB,KACtB,IACMnV,EADWwM,cACIzM,SAAS0M,MAAM,KAC9BjM,EAAYR,EAAI,GAHgB,ErB8BR,WAC9B,IAAMpE,EAAgB/B,aACpB,SAAC9E,GAAD,OAAgBA,EAAM4T,QAAQ/M,iBAFgB,EAIlB1B,mBAAwB0B,GAJN,mBAIzC+M,EAJyC,KAIhCyD,EAJgC,OAK1BlS,mBAAc0B,EAAc0I,KALF,mBAKzCA,EALyC,KAKpCoO,EALoC,KAO1C0C,EAAc,uCAAG,WACrB5U,EACA9K,GAFqB,iBAAAO,EAAA,6DAIjBe,EAAQC,OAAOC,eAAeC,QAAQ,eAJrB,SAKLR,EACb2Z,IADa,UACNzZ,+BADM,oBACoC2J,GAAa9K,EAAM,CACnEyC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAGXD,MARa,+BAAAtX,EAAA,MAQP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAISL,EACT2Z,IADS,UAELzZ,+BAFK,oBAEqC2J,GAC7C9K,EACA,CACEyC,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,iCAChBwW,OAAQ,0BAIbD,OAAM,SAACjY,GACN,MAAMA,KAjBP,OAIHwB,EAJG,oCAoBGxB,EApBH,4CARO,uDALK,cAKjBwB,EALiB,yBAoCdA,EAAIpB,MApCU,2CAAH,wDAuCdkd,EAAQ,uCAAG,WAAOpS,EAAmB9K,GAA1B,mBAAAO,EAAA,6DACXe,EAAQC,OAAOC,eAAeC,QAAQ,gBACpC0b,EAAU,IAAI7a,UACZC,OAAO,QAASvC,GACxBmd,EAAQ5a,OAAO,OAAQ,cAJR,SAKCtB,EACbC,KADa,UAETC,+BAFS,0BAEuC2J,GACnDqS,EACA,CACE1a,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,oCAChBwW,OAAQ,0BAIbD,MAZa,+BAAAtX,EAAA,MAYP,WAAOX,GAAP,SAAAW,EAAA,yDAC6B,QAA9BX,EAAMqD,SAASjD,KAAKJ,MADnB,gCAEWmB,IAAWM,eAFtB,cAEHC,EAFG,gBAISL,EACTC,KADS,UAELC,+BAFK,0BAE2C2J,GACnDqS,EACA,CACE1a,QAAS,CACPC,cAAc,UAAD,OAAYpB,GACzB,eAAgB,oCAChBwW,OAAQ,0BAIbD,OAAM,SAACjY,GACN,MAAMA,KAjBP,OAIHwB,EAJG,oCAoBGxB,EApBH,4CAZO,uDALD,cAKXwB,EALW,yBAwCRA,EAAIpB,MAxCI,2CAAH,wDA9CkC,EAyFGC,EAAWyf,GAzFd,mBAyFzCjG,EAzFyC,KAyFnBkG,EAzFmB,KAyFxBrf,IAzFwB,EA0FLL,EAAWid,GA1FN,mBA2KhD,MAAO,CACL0C,YAAa,CAAE3M,UAASrE,MAAK6K,gBAAeoG,UA5KE,MA6K9CC,aAAc,CACZH,mBACAI,aA/K4C,KA0F5Bzf,IAsFhBiY,aApFiB,SAAC3H,GACpB,IAAM7R,EAAO6R,EAAE2E,OAAOxW,KAChB2e,EAAc9M,EAAE2E,OAAO/J,MAE7BkL,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,kBAEGzM,EAAO2e,QA8EVV,SACAY,mBA9BuB,SAAChN,GAC1B,IAAM7R,EAAO6R,EAAE2E,OAAOxW,KAChB8e,EAAcjN,EAAE2E,OAAO/J,MAC7BkL,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEE5E,WAAW,2BACN4E,EAAM5E,YADD,kBAEP7H,EAAO8e,UAuBZC,UA3Ec,SAACC,GACjBrH,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEEnF,QAAS0X,QAwEXC,cAnEkB,SAAChe,EAAcsb,GACnC5E,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAU0I,KAAI,SAAC6O,EAAG5C,GACxC,OAAIC,IAAUD,EACLrb,EAEAie,KAGX,OAAO,2BACFzS,GADL,IAEE9E,UAAWA,QAyDbwX,YApDgB,WAClBxH,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAUyX,OAAO,IACzC,OAAO,2BACF3S,GADL,IAEE9E,UAAWA,QAgDb0X,eA5CmB,SAAC9C,GACtB5E,GAAW,SAAClL,GACV,IAAM9E,EAAY8E,EAAM9E,UAAU2X,QAAO,SAACJ,EAAG5C,GAAJ,OAAUA,IAAMC,KACzD,OAAO,2BACF9P,GADL,IAEE9E,UAAWA,QAwCb4X,WArBiB,SAACte,GAClB0W,GAAW,SAAClL,GACV,OAAO,2BACFA,GADL,IAEEhF,aAAcxG,UqBhMgBggB,GAA9BJ,EAJ8B,EAI9BA,YAAaE,EAJiB,EAIjBA,crBsNU,SAC/BF,EACAE,EACAhV,GAEA,IAAMnK,EAAUC,cAEVqf,EAAY9b,aAChB,SAAC9E,GAAD,OAAgBA,EAAM4T,QAAQ/M,cAAc0I,OAE9C/N,qBAAU,WACJ+e,EAAYnG,cAAc3Z,YAC5BwD,QAAQC,WAAWqc,EAAYhR,KAC/BtL,QAAQC,IAAIqc,EAAYhR,KACpBgR,EAAYhR,IAAIuL,SAAW8F,EAC7BH,EAAaC,aAAajV,EAAW8U,EAAYhR,KAC9CjO,EAAQG,KAAR,yBAA+BgK,OAErC,CAAC8U,EAAYnG,cAAc3Z,YAE9Be,qBAAU,WACJ+e,EAAYnG,cAAc1Z,UAE5BuD,QAAQC,IAAIqc,EAAYnG,cAAc7Z,SAEvC,CAACggB,EAAYnG,cAAc1Z,WqB7O9BmgB,CAAyBN,EAAaE,EAAcxV,EAAI,IAExDsS,GAAagD,EAAYC,UAAW,iBAqBpC,OACE,kBAAC,GAAD,KACE,yBAAKzV,GAAG,QACN,yBAAK7B,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CACEjH,QACEyc,EAAYC,UAAUhgB,SACtB+f,EAAYnG,cAAc5Z,QAE5BgJ,QA9Bc,WACxB,IAAMsX,EAAa,CACjBha,YAAayZ,EAAY3M,QAAQ9M,YACjCC,SAAUwZ,EAAY3M,QAAQ7M,SAC9BC,QAASuZ,EAAY3M,QAAQ5M,QAC7BM,aAAciZ,EAAY3M,QAAQtM,aAClCtH,MAAOugB,EAAY3M,QAAQ5T,MAC3BmH,aAAcoZ,EAAY3M,QAAQzM,aAClCC,aAAcmZ,EAAY3M,QAAQxM,aAClCG,WAAY,CACVC,UAAW+Y,EAAY3M,QAAQrM,WAAWC,UAC1CC,SAAU8Y,EAAY3M,QAAQrM,WAAWE,SACzCC,QAAS6Y,EAAY3M,QAAQrM,WAAWG,QACxCC,IAAK4Y,EAAY3M,QAAQrM,WAAWI,KAEtCN,UAAWkZ,EAAY3M,QAAQvM,WAEjCoZ,EAAaH,iBAAiB7U,EAAWqV,KAQjC,oBAWJ,yBAAK5X,UAAU,cACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,kBAACoG,GAAD,CAAUC,IAAKgR,EAAYhR,IAAKC,QAASiR,EAAa9C,WAG1D,yBAAKzU,UAAU,kBACb,2BAAOuT,QAAQ,gBAAf,gBACA,kBAAC,KAAD,CACEnc,KAAK,OACLZ,KAAK,cACLgd,YAAY,eACZnH,SAAUkL,EAAavH,aACvB/M,MAAOoU,EAAY3M,QAAQ9M,cAE7B,2BAAO2V,QAAQ,gBAAf,aACA,kBAAC,KAAD,CACEnc,KAAK,OACLZ,KAAK,WACLgd,YAAY,YACZnH,SAAUkL,EAAavH,aACvB/M,MAAOoU,EAAY3M,QAAQ7M,WAE7B,yBAAKmC,UAAU,iBACb,2BAAOuT,QAAQ,gBAAf,kBACA,kBAAC,KAAD,CACE2C,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,aACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,YACL6V,SAAU,SAAChE,GAAD,OACRkP,EAAalC,mBAAmBhN,IAElCpF,MAAOoU,EAAY3M,QAAQrM,WAAWC,YAExC,kBAAC,KAAD,CACE4X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,YACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,WACL6V,SAAU,SAAChE,GAAD,OACRkP,EAAalC,mBAAmBhN,IAElCpF,MAAOoU,EAAY3M,QAAQrM,WAAWE,WAExC,kBAAC,KAAD,CACE2X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,WACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,UACL6V,SAAU,SAAChE,GAAD,OACRkP,EAAalC,mBAAmBhN,IAElCpF,MAAOoU,EAAY3M,QAAQrM,WAAWG,UAExC,kBAAC,KAAD,CACE0X,YAAa,yBAAKlU,MAAO,CAAEI,MAAO,UAArB,OACboR,YAAY,IACZ2C,IAAK,EACLC,IAAK,IACLhf,KAAK,SACLif,KAAK,IACL7f,KAAK,MACL6V,SAAU,SAAChE,GAAD,OACRkP,EAAalC,mBAAmBhN,IAElCpF,MAAOoU,EAAY3M,QAAQrM,WAAWI,OAG1C,yBAAKuB,UAAU,kBACb,2BAAOuT,QAAQ,gBAAf,YACA,kBAAC,KAAD,CAAyB+C,MAAOC,KAAcC,OAAQC,MACpD,kBAAC,KAAD,CACEjgB,KAAK,UACLyM,MAAOoU,EAAY3M,QAAQ5M,QAC3BuO,SAAU,SAACmJ,GAAD,OAAU+B,EAAahC,UAAUC,IAC3CnU,OAAO,iBACPmS,YAAY,qBACZ9F,QAAQ,SACRgJ,gBAAgB,EAChBC,UAAQ,EACRC,WAAS,EACTC,MAAI,KAGR,2BAAOtD,QAAQ,gBAAf,QACA,kBAAC,GAAD,CACEvR,MAAO,CAAEI,MAAO,QAChBoF,cAAc,OACdzQ,OAAQwgB,EAAaxB,WACrBrO,KAAM2P,EAAY3M,QAAQzM,kBAKlC,yBAAK+D,MAAO,CAACwK,UAAW,SACtB,6BACE,2BAAO+G,QAAQ,gBAAf,gBACA,kBAACjJ,GAAD,CACEwM,WAAS,EACTtgB,KAAK,eACLgd,YAAY,eACZvQ,MAAOoU,EAAY3M,QAAQtM,aAC3BiO,SAAUkL,EAAavH,aACvB+G,WAAS,KAGb,2BAAOxD,QAAQ,gBAAf,aACC8D,EAAY3M,QAAQvM,UAAU0I,KAAI,SAAC5D,EAAe8P,GACjD,IAAMiE,EAAc,mBAAejE,EAAQ,GAC3C,OACE,6BACE,kBAAC,KAAD,CACEmD,YAAac,EACbC,WACE,kBAAC,KAAD,CACEpX,MAAM,YACNS,QAAS,kBAAMiX,EAAa1B,eAAe9C,KAF7C,UAOFS,YAAY,WACZhd,KAAK,YACL6V,SAAU,SAAChE,GAAD,OACRkP,EAAa9B,cAAcpN,EAAE2E,OAAO/J,MAAO8P,IAE7C9P,MAAOA,SAMjB,yBAAKjD,UAAU,YACb,yBAAK6B,GAAG,UACN,kBAAC,KAAD,CAAQvB,QAASiX,EAAa5B,aAA9B,qB,4BC9MJpL,GAAUC,KAAVD,MAEFsN,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,GAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA6DlBI,GA1DM,WAAO,IAAD,EACmB/d,IAArCQ,EADkB,EAClBA,QAASC,EADS,EACTA,SAAUI,EADD,EACCA,eAE1B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOwQ,MAAO,EAAGzL,UAAU,eAA3B,uBACA,yBAAKA,UAAU,aACb,kBAAC,KAAD,iBACM6X,GADN,CAEEhd,SAAUA,EACVI,eAAgBA,EAChBzE,KAAK,aAEL,kBAAC,KAAK4V,KAAN,CACEyB,MAAM,SACNrX,KAAK,SACL4hB,MAAO,CAAC,CAAEC,UAAU,EAAM1d,QAAS,iEAEnC,kBAAC,KAAD,CAAOqF,UAAU,iBAEnB,kBAAC,KAAKoM,KAAN,CACEyB,MAAM,YACNrX,KAAK,YACL4hB,MAAO,CAAC,CAAEC,UAAU,EAAM1d,QAAS,oEAEnC,kBAAC,KAAD,CAAOqF,UAAU,iBAEnB,kBAAC,KAAKoM,KAAN,CACEyB,MAAM,OACNrX,KAAK,OACL4hB,MAAO,CAAC,CAAEC,UAAU,EAAM1d,QAAS,mEAEnC,kBAAC,KAAD,CAAOqF,UAAU,iBAEnB,kBAAC,KAAKoM,KAAN,CACEyB,MAAM,WACNrX,KAAK,WACL4hB,MAAO,CACL,CACEC,UAAU,EACV1d,QAAS,oFACT2d,YAAY,KAIhB,kBAAC,KAAD,CAAOlhB,KAAK,WAAW4I,UAAU,iBAEnC,kBAAC,KAAKoM,KAAS6L,GACb,kBAAC,KAAD,CAAQ7gB,KAAK,UAAUmhB,SAAS,SAAS3d,QAASA,GAAlD,iCC7DN4d,I,mBAAejiB,YAAY,CAC/BC,KAAM,OACNC,aAAc,CACZgiB,cAAc,GAEhB7hB,SAAU,CACR8hB,cADQ,SACM5hB,EAAOC,GACnBD,EAAM2hB,aAAe1hB,EAAOC,QAAQyhB,kBAM3BD,IADkBA,GAAavhB,QAA/ByhB,cACAF,GAAf,SCTQjO,I,4BAAUC,KAAVD,OAEFsN,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,GAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA2ClBY,OAxCf,WAAsB,IAAD,EACyBzZ,IAArCtE,EADY,EACZA,QAASC,EADG,EACHA,SAAUI,EADP,EACOA,eAC1B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOwQ,MAAO,EAAGzL,UAAU,eAA3B,SAGA,yBAAKA,UAAU,aACb,kBAAC,KAAD,iBAAU6X,GAAV,CAAkBhd,SAAUA,EAAUI,eAAgBA,IACpD,kBAAC,KAAKmR,KAAN,CACEyB,MAAM,SACNrX,KAAK,SACL4hB,MAAO,CAAC,CAAEC,UAAU,EAAM1d,QAAS,iEAEnC,kBAAC,KAAD,CAAOqF,UAAU,iBAEnB,kBAAC,KAAKoM,KAAN,CACEyB,MAAM,WACNrX,KAAK,WACL4hB,MAAO,CACL,CACEC,UAAU,EACV1d,QAAS,oFACT2d,YAAY,KAIhB,kBAAC,KAAD,CAAOlhB,KAAK,WAAW4I,UAAU,iBAEnC,kBAAC,KAAKoM,KAAS6L,GACb,kBAAC,KAAD,CAAQ7gB,KAAK,UAAUmhB,SAAS,SAAS3d,QAASA,GAAlD,2B,cCFGge,OA3Bf,WAEE,OvBiDK,WACL,IAAM9gB,EAAW6D,cAGjBrD,qBAAU,WAER,IAAIugB,EACJA,EAAO7f,OAAOC,eAAeC,QAAQ,eACrC,IAAM2I,EAAK7I,OAAOC,eAAeC,QAAQ,MAG5B,OAAT2f,GAQF/gB,EAASjB,EANS,CAChBH,SAAS,EACTC,OAAQkL,OAMX,IuBvEHiX,GAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWL,KAChC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWb,KACnC,kBAAC,IAAD,CAAOc,OAAK,EAACF,KAAK,IAAIC,UAAWvO,KACjC,kBAAC,IAAD,CAAOsO,KAAK,YAAYC,UAAWE,KACnC,kBAAC,IAAD,CAAOH,KAAK,iBAAiBC,UAAWxE,KACxC,kBAAC,IAAD,CAAOuE,KAAK,qBAAqBC,UAAW3K,KAC5C,kBAAC,IAAD,CAAO0K,KAAK,qBAAqBC,UAAW9B,MAW9C,kBAAC,GAAD,QC3BciC,QACW,cAA7BngB,OAAOsV,SAAS8K,UAEe,UAA7BpgB,OAAOsV,SAAS8K,UAEhBpgB,OAAOsV,SAAS8K,SAASC,MACvB,2D,aCHSC,GARKC,aAAgB,CAClCC,UAAWre,EACXgE,MAAO7I,EACPmjB,QAASjB,GACT9N,QAASuD,GACTpS,MAAOP,ICFHoe,I,OAAQC,YAAe,CAC3BxiB,QAASmiB,MAGXM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEFI,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1K,MAAK,SAAA2K,GACJA,EAAaC,gBAEd9K,OAAM,SAAAjY,GACL0D,QAAQ1D,MAAMA,EAAMsD,c","file":"static/js/main.8672ae85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseImg.c40f4ed9.png\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginRedux = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    isToken: false,\r\n    userId: \"\"\r\n  },\r\n  reducers: {\r\n    setToken(state, action) {\r\n      state.isToken = action.payload.isToken;\r\n      state.userId = action.payload.userId;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setToken } = loginRedux.actions;\r\nexport default loginRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useTemporaryApi() {\r\n  const { temporary } = useSelector(state => state.temproray);\r\n  const getProjectList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const getPeopleList = async () => {\r\n    const res = await axios.get(`https://apis.tracker.delivery/carriers`);\r\n    return res.data;\r\n  };\r\n  const postProjectList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n  const postPeopletList = async data => {\r\n    await axios.post(`https://apis.tracker.delivery/carriers`, { data: data });\r\n  };\r\n\r\n  return [\r\n    temporary,\r\n    {\r\n      getProjectList,\r\n      getPeopleList,\r\n      postProjectList,\r\n      postPeopletList\r\n    }\r\n  ];\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nexport type Service<R, P extends any[]> = (...args: P) => Promise<R>;\r\n\r\nexport type RequestState = {\r\n  data: any;\r\n  error: any;\r\n  pending: boolean;\r\n  fulfilled: boolean;\r\n  rejected: boolean;\r\n};\r\n\r\nexport type RequestAction =\r\n  | { type: 'request' }\r\n  | { type: 'success'; payload: any }\r\n  | { type: 'failure'; payload: string };\r\n\r\nfunction reducer(state: RequestState, action: RequestAction): RequestState {\r\n  switch (action.type) {\r\n    case 'request':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        pending: true,\r\n        fulfilled: false,\r\n        rejected: false,\r\n      };\r\n    case 'success':\r\n      return {\r\n        data: action.payload,\r\n        error: null,\r\n        pending: false,\r\n        fulfilled: true,\r\n        rejected: false,\r\n      };\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        fulfilled: false,\r\n        rejected: true,\r\n      };\r\n  }\r\n}\r\n\r\nexport function useRequest<R, P extends any[]>(\r\n  asyncTask: Service<R, P>,\r\n  options?: {\r\n    // autoFirstRun?: boolean;\r\n    // passArgs?: P;\r\n  },\r\n) {\r\n  // const {autoFirstRun = false, passArgs} = options || {};\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    data: null,\r\n    error: null,\r\n    pending: false,\r\n    fulfilled: false,\r\n    rejected: false,\r\n  });\r\n  const requestActions = {\r\n    run: async (...args: P) => {\r\n      dispatch({\r\n        type: 'request',\r\n      });\r\n      try {\r\n        // then 패턴 데신에 await을 쓴 이유는 일반 함수일 경우에도 동작하도록\r\n        const data = await asyncTask(...args);\r\n        dispatch({\r\n          type: 'success',\r\n          payload: data,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: 'failure',\r\n          payload: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return [state, requestActions] as const;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function useMove(condition, destination) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (condition) history.push(`./${destination}`);\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      history.push(`./${destination}`);\r\n    }\r\n  }, [condition])\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport type RegisterState = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\nexport type RegisterLogin = {\r\n  userId: String;\r\n  password: String;\r\n};\r\n\r\n/**\r\n * 회원 가입 api\r\n */\r\nexport const registerApi: any = () => {\r\n  // 회원 가입 정보 등록\r\n  const postRegister = async (data: RegisterState): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signup`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  return { postRegister };\r\n};\r\n\r\n/**\r\n * login 관련 api\r\n */\r\nexport function loginApi(){\r\n  // 로그인\r\n  const postLogin = async (data: RegisterLogin): Promise<any> => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/signin`,\r\n      data,\r\n    );\r\n    return res.data;\r\n  };\r\n  \r\n  // 토큰 만료 시 refresh\r\n  const refreshToken = async (): Promise<string> => {\r\n    const token = window.sessionStorage.getItem(\"refreshToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}auth/refresh`,\r\n      {\r\n        refreshToken: token,\r\n      },\r\n    );\r\n    window.sessionStorage.setItem(\"accessToken\", res.data.accessToken);\r\n    return res.data.accessToken;\r\n  };\r\n\r\n  return { postLogin, refreshToken };\r\n};\r\n","import axios from \"axios\";\r\nimport { loginApi } from \"./\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\nexport const peopleListApi: any = () => {\r\n   \r\n    // 사람 리스트\r\n  const getPeopleList = async (pageNumber: number, params = \"\"): Promise<object> => {\r\n    const res = await axios.get(\r\n      `https://egluuapi.codingnome.dev/people?page=${pageNumber}&size=12${params}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  //\r\n  const getWantedPeopleList = async (pageNumber: number): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}people?page=${pageNumber}&size=6`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getPeopleList, getWantedPeopleList };\r\n}\r\n","import axios from \"axios\";\r\nimport { loginApi } from \"./\";\r\n\r\ntype info = {\r\n  userId: String;\r\n  userEmail: String;\r\n  password: String;\r\n  name: String;\r\n};\r\n\r\n/**\r\n * Profile Page 좌측 Info창에서 사용되는 api\r\n */\r\n\r\nexport function infoApi(): any {\r\n  // get info api\r\n  const getInfo = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // post info api\r\n  const postInfo = async (userId: String, data: any): Promise<any> => {\r\n    let token: String | Promise<String> | null = window.sessionStorage.getItem(\r\n      \"accessToken\",\r\n    );\r\n    const res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          const res = await axios\r\n            .put(`${process.env.REACT_APP_BASE_URL}profile/${userId}`, data, {\r\n              headers: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n          return res;\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return { getInfo, postInfo };\r\n}\r\n\r\n/**\r\n * img 저장 api\r\n */\r\nexport function imgApi():any {\r\n  // 이미지 불러오기\r\n  const getImg = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 이미지 저장\r\n  const postImg = async (userId: String, data: any): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    let image = new FormData();\r\n    image.append(\"image\", data.imgUrl);\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n      image,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    )\r\n    return res;\r\n  };\r\n\r\n  return { getImg, postImg };\r\n}\r\n\r\n/**\r\n * 진행중인 프로젝트\r\n */\r\nexport function runningProjectApi(): any {\r\n  const getProject = async (userId: String): Promise<any> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String): Promise<any> => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/running/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\n\r\nexport function endedProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/ended/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getProject, getHideProject };\r\n}\r\nexport function planProjectApi() {\r\n  const getProject = async (userId: String) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan?page=0&size=10&sort=projectName%2CDESC`,\r\n    );\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 숨긴 프로젝트 목록 가져오기\r\n  const getHideProject = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/plan/hidden?page=0&size=10&sort=projectName%2CDESC`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  // 모든 (planned) 프로젝트 목록 가져오기 (recruit modal에서 프로젝트 선택용)\r\n  const getAllPlannedProject = async (myId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    // 헤더\r\n    const header = {\r\n      \"Content-type\": \"application/json;charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    // 일반 plan과 숨겨진 plan 가져오기\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n    const res2 = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${myId}/plan/hidden`,\r\n      {\r\n        headers: header,\r\n      },\r\n    );\r\n\r\n    let totalRes: Array<Object> = [];\r\n\r\n    // 안에 데이터가 있을 경우 데이터 가져오기\r\n    if (res.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res.data._embedded.projectList);\r\n    }\r\n    if (res2.data.page.totalElements) {\r\n      totalRes = totalRes.concat(res2.data._embedded.projectList);\r\n    }\r\n\r\n    return totalRes;\r\n  };\r\n\r\n  return { getProject, getHideProject, getAllPlannedProject };\r\n}\r\nexport function hideProjectApi() {\r\n  const hideProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n\r\n  const displayProject = async (userId: String, projectId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/projects/${projectId}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return { res, projectId };\r\n  };\r\n  return { hideProject, displayProject };\r\n}\r\nexport function sendRecruitPeopleApi() {\r\n  const postRecruit = async (userId: String, data: any) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res;\r\n  };\r\n  return { postRecruit };\r\n}\r\nexport function invitationListApi() {\r\n  const getInvitationList = async (userId: String) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n  return { getInvitationList };\r\n}\r\nexport function invitationDetailApi() {\r\n  const getInvitationDetail = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const putInvitationAccept = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const deleteInvitationReject = async (userId: String, pid: Number) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}profile/${userId}/recruit/${pid}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return { getInvitationDetail, putInvitationAccept, deleteInvitationReject };\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useAlert, useMove } from \"..\";\r\nimport { useRequest } from \"../\";\r\nimport { registerApi } from \"../api\";\r\n\r\ntype RegisterType = {\r\n  loading: boolean;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n};\r\n\r\nexport function useRegisterEffect(): RegisterType {\r\n  const { alertAction } = useAlert();\r\n  const [registerPromiseState, { run: postRegisterFetch }] = useRequest(\r\n    registerApi().postRegister,\r\n  );\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Success:\", values);\r\n    postRegisterFetch(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  useMove(registerPromiseState.fulfilled, \"login\");\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.fulfilled) {\r\n      alertAction.open(\"회원가입을 무사히 마쳤습니다. 로그인 부탁드립니다.\");\r\n    }\r\n  }, [registerPromiseState.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (registerPromiseState.rejected) {\r\n      if (registerPromiseState.error) {\r\n        alertAction.open(registerPromiseState.error.response.data.message);\r\n      }\r\n    }\r\n  }, [registerPromiseState.rejected]);\r\n\r\n  return { loading: registerPromiseState.pending, onFinish, onFinishFailed };\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst temporaryRedux = createSlice({\r\n  name: 'project',\r\n  initialState: {\r\n    temporary: 0,\r\n  },\r\n  reducers: {\r\n    setTemporary(state, action) {\r\n      state.temporary = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setTemporary,\r\n} = temporaryRedux.actions;\r\nexport default temporaryRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { loginApi } from \"../api\";\r\nconst axios = require(\"axios\");\r\n\r\nexport function useProjectListState() {\r\n  const [projectList, setProjectList] = useState(staticProjectData);\r\n  const [page, setPage] = useState({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [stack, setStack] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const getProjectList = async (pageNumber, sort) => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects?page=${pageNumber}&size=8${sort}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async (pageNumber) => {\r\n    let res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  return [\r\n    { projectList, role, region, search, page, stack },\r\n    {\r\n      getProjectList,\r\n      setProjectList,\r\n      getDeadLineProjectList,\r\n      setPage,\r\n      setRegion,\r\n      setRole,\r\n      setStack,\r\n      setSearch,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useProjectListEffect(\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  getApi,\r\n  setProjectList,\r\n  setPage,\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      if (\"_embedded\" in data) {\r\n        setProjectList(data._embedded.projectList);\r\n        setPage(data.page);\r\n      } else {\r\n        setProjectList([]);\r\n        setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  projectlistPromise,\r\n  getApi,\r\n  setProjectList,\r\n  setPage,\r\n) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.fulfilled) {\r\n      if (projectlistPromise.data !== undefined) {\r\n        setProjectList(projectlistPromise.data._embedded.projectList);\r\n        setPage(projectlistPromise.data.page);\r\n      }\r\n    }\r\n  }, [projectlistPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    getApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (projectlistPromise.rejected) {\r\n      if (projectlistPromise.error) {\r\n        setProjectList([]);\r\n      }\r\n    }\r\n  }, [projectlistPromise.rejected]);\r\n}\r\n\r\nconst staticProjectData = [\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n  {\r\n    projectId: 16,\r\n    projectName: \"project0\",\r\n    teamName: \"project team0\",\r\n    endDate: \"2020-03-30T23:59:00\",\r\n    description: \"need zero 입니다.\",\r\n    dday: 5,\r\n    status: \"RECRUTING\",\r\n    projectField: null,\r\n    currentMember: {\r\n      developer: 2,\r\n      designer: 1,\r\n      planner: 1,\r\n      etc: 2,\r\n    },\r\n    needMember: {\r\n      developer: 2,\r\n      designer: 2,\r\n      planner: 3,\r\n      etc: 4,\r\n    },\r\n    leaderId: null,\r\n  },\r\n];\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst alertRedux = createSlice({\r\n  name: \"alert\",\r\n  initialState: {\r\n    isOpen: false,\r\n    sentence: \"\",\r\n  },\r\n  reducers: {\r\n    openAlert(state, action) {\r\n      state.isOpen = true;\r\n      console.log(action.payload);\r\n      state.sentence = action.payload;\r\n    },\r\n    closeAlert(state) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openAlert, closeAlert } = alertRedux.actions;\r\nexport default alertRedux.reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectDetailState = () => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [apply, setApply] = useState([]);\r\n  const [recruit, setRecruit] = useState(recruitDtoList);\r\n  const [alertData, alertAction] = useAlert();\r\n  const [check, setCheck] = useState({\r\n    apply: true,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n    applyDetail: false,\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n  const [teamReader, setTeamReader] = useState(false);\r\n  const fetchGetDetail = async (projectId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply = {\r\n      apply: {},\r\n      recruit: {},\r\n    };\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0]._links.self.href === `/profile/${id}`) {\r\n      token = await loginApi.refreshToken();\r\n\r\n      await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value) => {\r\n          try {\r\n            setApplyState(value.data._embedded.projectApplicantDtoList);\r\n          } catch {\r\n            setApplyState([]);\r\n          }\r\n        })\r\n        .catch(async (error) => {\r\n          throw error;\r\n        });\r\n      await axios\r\n        .get(\r\n          `${process.env.REACT_APP_BASE_URL}/projects/${projectId}/recruits`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          },\r\n        )\r\n        .then((value) => {\r\n          try {\r\n            setRecruitState(value.data._embedded.recruitDtoList);\r\n          } catch {\r\n            setRecruitState([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          await axios\r\n            .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    // history.push(\"/projects\");\r\n  };\r\n\r\n  const fetchPutApply = async (userId) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    token = await loginApi.refreshToken();\r\n\r\n    await axios\r\n      .put(project._links.apply.href, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        const deleteMember = apply.filter((member) => member.userId !== userId);\r\n        setApplyState(deleteMember);\r\n      })\r\n      .catch(async (error) => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  const setProjectState = (data) => {\r\n    setProject(data);\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setApplyState = (data) => {\r\n    setApply(data);\r\n  };\r\n\r\n  const inputApply = (e) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setRecruitState = (data) => {\r\n    setRecruit(data);\r\n  };\r\n\r\n  const inputRecruit = (e) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const checkSwitch = (name, checked) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name, nextPage) => {\r\n    setPagination((value) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDetailApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDetailApply = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = (e) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { getProject, deleteProject, project, check, apply, recruit, pagination },\r\n    {\r\n      fetchGetDetail,\r\n      inputProject,\r\n      setProjectState,\r\n      checkSwitch,\r\n      inputApply,\r\n      setApplyState,\r\n      setRecruitState,\r\n      inputRecruit,\r\n      fetchDeleteProject,\r\n      clickPagination,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n      openDetailApply,\r\n      closeDetailApply,\r\n      getProjectApi,\r\n      deleteProjectApi,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectDetailEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  fetchDetail,\r\n  projectAction,\r\n  projectId,\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    fetchDetail(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      projectAction.setProjectState(data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (data.res.memberList[0]._links.self.href === `/profile/${id}`) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n      }\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      console.log(error.response);\r\n      alertAction.open(error.response.data.message);\r\n\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nconst useProjectRecruitEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  inputState,\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      // inputDetail(data);\r\n      inputState(recruitDtoList);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport {\r\n  useProjectDetailState,\r\n  useProjectDetailEffect,\r\n  useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectCreateState = () => {\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(\"\");\r\n  const fetchPostCreate = async (data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios\r\n            .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                  \"Access-Control-Expose-Headers\": \"*\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPostCreate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectCreateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  createImgApi,\r\n  projectImg,\r\n) => {\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      const projectId = data.headers.location.split(\"/\");\r\n      createImgApi(projectId[4], projectImg);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectCreateState, useProjectCreateEffect };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert } from \"../\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst useProjectUpdateState = () => {\r\n  const projectDetail = useSelector((state) => state.project.projectDetail);\r\n  const [project, setProject] = useState(projectDetail);\r\n  const [img, setImg] = useState(projectDetail.img);\r\n  const fetchPutUpdate = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios\r\n            .put(\r\n              `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n              data,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId, data) => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const inputProject = (e) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  const inputDate = (date) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputQuestion = (data, index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { project, img },\r\n    {\r\n      fetchPutUpdate,\r\n      inputProject,\r\n      inputImg,\r\n      inputProjectMember,\r\n      fetchImg,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n    },\r\n  ];\r\n};\r\n\r\nconst useProjectUpdateEffect = (\r\n  data,\r\n  fulfilled,\r\n  rejected,\r\n  error,\r\n  UpdateImgApi,\r\n  projectImg,\r\n  projectId,\r\n) => {\r\n  const history = useHistory();\r\n  const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (fulfilled) {\r\n      console.log(typeof projectImg);\r\n      if (typeof projectImg !== \"string\") UpdateImgApi(projectId, projectImg);\r\n      history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      alertAction.open(error.response.data.message);\r\n      console.log(error);\r\n    }\r\n  }, [rejected]);\r\n};\r\n\r\nexport { useProjectUpdateState, useProjectUpdateEffect };\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"testApplicant1\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userId: \"testApplicant2\",\r\n    userName: \"테스터\",\r\n    status: \"UNREAD\",\r\n    role: \"DEVELOPER\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"유저01\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    userName: \"유저02\",\r\n    selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n    role: \"DEVELOPER\",\r\n    status: \"UNREAD\",\r\n    projectId: 11,\r\n    projectName: \"project1\",\r\n    _links: {\r\n      self: {\r\n        href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const useProjectApplyState = (api) => {\r\n  const [apply, setApply] = useState(projectApply);\r\n  const [applied, setApplied] = useState(false);\r\n  const fetchGetApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n          res = await axios\r\n            .get(`${api}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .post(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          await axios\r\n            .post(api, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data, projectId) => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(api, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          await axios\r\n            .put(api, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const inputApply = (name, data) => {\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a, i) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value, index) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return [\r\n    { apply, applied },\r\n    {\r\n      fetchPostApply,\r\n      inputAnswer,\r\n      setApply,\r\n      inputApply,\r\n      selectRole,\r\n      fetchGetApply,\r\n      fetchPutApply,\r\n      setApplied,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useProjectApplyEffect = (\r\n  questions,\r\n  getApply,\r\n  apply,\r\n  applyAction,\r\n  applyRes,\r\n  applyGetRes,\r\n  applyPutRes,\r\n  detailGet,\r\n  applyLink,\r\n  afterAction,\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const defaultAnaswer = questions.map(() => {\r\n      return \"\";\r\n    });\r\n    applyAction.inputApply(\"answers\", defaultAnaswer);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet && applyLink !== \"\") {\r\n      getApply();\r\n    }\r\n  }, [detailGet, applyLink]);\r\n\r\n  useEffect(() => {\r\n    if (applyGetRes.fulfilled) {\r\n      applyAction.setApply(applyGetRes.data);\r\n      if (apply.answer !== \"\") {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [applyGetRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyRes.fulfilled]);\r\n  useEffect(() => {\r\n    if (applyPutRes.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [applyPutRes.fulfilled]);\r\n  return \"\";\r\n};\r\n\r\nexport const useProjectDetailApplyState = (api) => {\r\n  const [apply, setApply] = useState(projectApply);\r\n\r\n  const fetchGetApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          res = await axios\r\n            .get(`${api}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPutApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(\r\n        api,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          await axios\r\n            .put(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteApply = async () => {\r\n    const token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(api, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi.refreshToken();\r\n\r\n          await axios\r\n            .delete(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  return [\r\n    { apply },\r\n    {\r\n      fetchDeleteApply,\r\n      setApply,\r\n      fetchGetApply,\r\n      fetchPutApply,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useProjectDetailApplyEffect = (\r\n  open,\r\n  getApply,\r\n  apply,\r\n  applyGetRes,\r\n  applyPutRes,\r\n  applyDeleteRes,\r\n  applySet,\r\n  userId,\r\n  close,\r\n  applyAction,\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (open) {\r\n      getApply();\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (applyGetRes.fulfilled) {\r\n      applyAction.setApply(applyGetRes.data);\r\n    }\r\n  }, [applyGetRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyPutRes.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"ACCEPT\",\r\n            };\r\n          } else {\r\n            return apply;\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [applyPutRes.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (applyDeleteRes.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"REJECT\",\r\n            };\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [applyDeleteRes.fulfilled]);\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openAlert, closeAlert } from \"../reducers/alert\";\r\nimport { RootState } from '../reducers';\r\n\r\nexport default function useAlert() {\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state: RootState) => state.alert.isOpen);\r\n  const sentence = useSelector((state: RootState) => state.alert.sentence);\r\n\r\n  const open = (data: String) => {\r\n    dispatch(openAlert(data));\r\n  };\r\n\r\n  const close = () => {\r\n    dispatch(closeAlert());\r\n  };\r\n\r\n  return {\r\n    alertState: { sentence, isOpen },\r\n    alertAction: {\r\n      open,\r\n      close,\r\n    },\r\n  };\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRequest } from \"../\";\r\nimport { setTemporary } from \"../../reducers/temporary\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype projectListType = {\r\n  projectId: number;\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  dday: number;\r\n  status: string;\r\n  projectField: object | null;\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  leaderId: string | null;\r\n};\r\n\r\ntype pageType = {\r\n  number: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n};\r\n\r\ntype projectPage = {\r\n  projectList: projectListType[];\r\n  role: string;\r\n  region: string;\r\n  search: string;\r\n  page: pageType;\r\n  stack: string;\r\n  projectListPromise: RequestState;\r\n  DeadLineProjectListPromise: RequestState;\r\n};\r\n\r\ntype projectAction = {\r\n  setProjectList: Dispatch<SetStateAction<projectListType[]>>;\r\n  setPage: Dispatch<\r\n    SetStateAction<{\r\n      number: number;\r\n      size: number;\r\n      totalElements: number;\r\n      totalPages: number;\r\n    }>\r\n  >;\r\n  setRegion: Dispatch<SetStateAction<string>>;\r\n  setRole: Dispatch<SetStateAction<string>>;\r\n  setStack: Dispatch<SetStateAction<string>>;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  getProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n  getDeadLineProjectListApi: (\r\n    pageNumber: number,\r\n    sort?: string | undefined,\r\n  ) => Promise<void>;\r\n};\r\n\r\ntype projectState = {\r\n  projectPage: projectPage;\r\n  projectAction: projectAction;\r\n};\r\n\r\nexport function useProjectListStateTs(): projectState {\r\n  const [projectList, setProjectList] = useState<projectListType[] | []>([]);\r\n  const [page, setPage] = useState<pageType>({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [stack, setStack] = useState<string>(\"\");\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const getProjectList = async (\r\n    pageNumber: number,\r\n    sort:string = \"\",\r\n  ): Promise<object> => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects?page=${pageNumber}&size=8${sort}`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const getDeadLineProjectList = async (\r\n    pageNumber: number,\r\n  ): Promise<object> => {\r\n    let res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}projects/deadline?page=${pageNumber}&size=4&sort=endDate`,\r\n    );\r\n    return res.data;\r\n  };\r\n\r\n  const [projectListPromise, { run: getProjectListApi }] = useRequest(\r\n    getProjectList,\r\n  );\r\n\r\n  const [\r\n    DeadLineProjectListPromise,\r\n    { run: getDeadLineProjectListApi },\r\n  ] = useRequest(getDeadLineProjectList);\r\n\r\n  const projectPage: projectPage = {\r\n    projectList,\r\n    role,\r\n    region,\r\n    search,\r\n    page,\r\n    stack,\r\n    projectListPromise,\r\n    DeadLineProjectListPromise,\r\n  };\r\n  const projectAction: projectAction = {\r\n    setProjectList,\r\n    setPage,\r\n    setRegion,\r\n    setRole,\r\n    setStack,\r\n    setSearch,\r\n    getProjectListApi,\r\n    getDeadLineProjectListApi,\r\n  };\r\n\r\n  return { projectPage, projectAction };\r\n}\r\n\r\nexport function useProjectListEffectTs(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.projectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.projectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.projectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.projectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.projectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.projectListPromise.rejected) {\r\n      if (project.projectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.projectListPromise.rejected]);\r\n}\r\n\r\nexport function useDeadlineProjectListEffect(\r\n  project: projectPage,\r\n  projectAction: projectAction,\r\n) {\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.fulfilled) {\r\n      if (\"_embedded\" in project.DeadLineProjectListPromise.data) {\r\n        projectAction.setProjectList(\r\n          project.DeadLineProjectListPromise.data._embedded.projectList,\r\n        );\r\n        projectAction.setPage(project.DeadLineProjectListPromise.data.page);\r\n      } else {\r\n        projectAction.setProjectList([]);\r\n        projectAction.setPage({\r\n          number: 0,\r\n          size: 0,\r\n          totalElements: 0,\r\n          totalPages: 0,\r\n        });\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    projectAction.getDeadLineProjectListApi(0, \"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.DeadLineProjectListPromise.rejected) {\r\n      if (project.DeadLineProjectListPromise.error) {\r\n        projectAction.setProjectList([]);\r\n      }\r\n    }\r\n  }, [project.DeadLineProjectListPromise.rejected]);\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ProjectDetailType = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  description: string;\r\n  status: string;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\nintroduction: string;\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  currentMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n    apply: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype RecruitDtoListType = {\r\n  userName: string;\r\n  selfDescription: string;\r\n  role: string;\r\n  status: string;\r\n  projectId: number;\r\n  projectName: string;\r\n  introduction: string;\r\n  state: string;\r\n  _links: {\r\n    self: {\r\n      href: string;\r\n    };\r\n  };\r\n};\r\n\r\ntype checkType = {\r\n  apply: boolean;\r\n  recruit: boolean;\r\n  reader: boolean;\r\n  applyModal: boolean;\r\n  delete: boolean;\r\n  applyDetail: boolean;\r\n};\r\n\r\ntype pagenationType = {\r\n    apply: number,\r\n    recruit: number,\r\n}\r\n\r\ntype ApplyType = {\r\n    state: string;\r\n    userName: string;\r\n    role: string;\r\n    _links: {\r\n        self: {\r\n            href: string\r\n        }\r\n    };\r\n    userId: string;\r\n    href: string;\r\n}\r\n\r\ntype ProjectType = { \r\n        getProject: RequestState;\r\n        deleteProject: RequestState;\r\n        project: ProjectDetailType;\r\n        check: checkType;\r\n        apply: ApplyType[];\r\n        recruit: RecruitDtoListType[];\r\n        pagination: pagenationType;\r\n    };\r\n\r\ntype ProjectActionType = {\r\n    getProjectApi: (projectId: string) => Promise<void>;\r\n      deleteProjectApi: (projectId: string) => Promise<void>;\r\n      inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      checkSwitch: (name: string, checked: boolean) => void;\r\n      inputApply: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      inputRecruit: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n      clickPagination: (name: string, nextPage: number) => void;\r\n      openApply: () => void;\r\n      closeApply: () => void;\r\n      openDelete: () => void;\r\n      closeDelete: () => void;\r\n      openDetailApply: () => void;\r\n      closeDetailApply: () => void;\r\n      setApply: Dispatch<SetStateAction<ApplyType[]>>;\r\n      setProject: Dispatch<SetStateAction<ProjectDetailType>>;\r\n    }\r\n\r\ntype ProjectDetailStateType = {\r\n    project: ProjectType;\r\n    projectAction: ProjectActionType;\r\n}\r\n\r\nconst useProjectDetailStateTs = (): ProjectDetailStateType => {\r\n  const history = useHistory();\r\n  const [project, setProject] = useState<ProjectDetailType>(projectDetail);\r\n  const [apply, setApply] = useState<ApplyType[]>([]);\r\n  const [recruit, setRecruit] = useState<RecruitDtoListType[]>([]);\r\n  //   const [alertData, alertAction] = useAlert();\r\n  const [check, setCheck] = useState<checkType>({\r\n    apply: false,\r\n    recruit: false,\r\n    reader: false,\r\n    applyModal: false,\r\n    delete: false,\r\n    applyDetail: false,\r\n  });\r\n  const [pagination, setPagination] = useState<pagenationType>({\r\n    apply: 0,\r\n    recruit: 0,\r\n  });\r\n  const [teamReader, setTeamReader] = useState(false);\r\n\r\n  const fetchGetDetail = async (projectId: string): Promise<any> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let resApply = {\r\n      apply: {},\r\n      recruit: {},\r\n    };\r\n    let res = await axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`)\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios.get(\r\n            `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n          );\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        throw error;\r\n      });\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    if (res.data.memberList[0]._links.self.href === `/profile/${id}`) {\r\n      token = await loginApi().refreshToken();\r\n\r\n      await axios\r\n        .get(res.data._links.apply.href, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        })\r\n        .then((value: any) => {\r\n          try {\r\n            setApply(value.data._embedded.projectApplicantDtoList);\r\n          } catch {\r\n            setApply([]);\r\n          }\r\n        })\r\n        .catch(async (error: any) => {\r\n          throw error;\r\n        });\r\n      await axios\r\n        .get(\r\n          `${process.env.REACT_APP_BASE_URL}projects/${projectId}/recruits`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              Accept: \"application/hal+json\",\r\n            },\r\n          },\r\n        )\r\n        .then((value: any) => {\r\n          try {\r\n            setRecruit(value.data._embedded.recruitDtoList);\r\n          } catch {\r\n            setRecruit([]);\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          throw error;\r\n        });\r\n    }\r\n    res = res.data;\r\n    return { res, resApply };\r\n  };\r\n\r\n  const fetchDeleteProject = async (projectId: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .delete(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    // history.push(\"/projects\");\r\n  };\r\n\r\n  const [getProject, { run: getProjectApi }] = useRequest(fetchGetDetail);\r\n\r\n  const [deleteProject, { run: deleteProjectApi }] = useRequest(\r\n    fetchDeleteProject,\r\n  );\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n    const checkSwitch = (name: string, checked: boolean) => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: checked,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputApply = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRecruit((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputRecruit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickPagination = (name: string, nextPage: number) => {\r\n    setPagination((value: any) => {\r\n      const count = value[name] + nextPage;\r\n      return {\r\n        ...value,\r\n        [name]: count,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyModal: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDetailApply = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        applyDetail: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const openDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  const closeDelete = () => {\r\n    setCheck((value) => {\r\n      return {\r\n        ...value,\r\n        delete: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    project: {\r\n      getProject,\r\n      deleteProject,\r\n      project,\r\n      check,\r\n      apply,\r\n      recruit,\r\n      pagination,\r\n    },\r\n    projectAction: {\r\n      getProjectApi,\r\n      deleteProjectApi,\r\n      inputProject,\r\n      checkSwitch,\r\n      inputApply,\r\n      inputRecruit,\r\n      clickPagination,\r\n      setApply,\r\n      openApply,\r\n      closeApply,\r\n      openDelete,\r\n      closeDelete,\r\n      openDetailApply,\r\n      closeDetailApply,\r\n      setProject\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectDetailEffectTs = (\r\n  project: ProjectType,\r\n  projectAction: ProjectActionType,\r\n  projectId: string,\r\n) => {\r\n  //   const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    projectAction.getProjectApi(projectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.fulfilled) {\r\n      projectAction.setProject(project.getProject.data.res);\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      if (\r\n        project.getProject.data.res.memberList[0]._links.self.href ===\r\n        `/profile/${id}`\r\n      ) {\r\n        projectAction.checkSwitch(\"reader\", true);\r\n      }\r\n    }\r\n  }, [project.getProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (project.getProject.rejected) {\r\n      console.log(project.getProject.error.response);\r\n      //   alertAction.open(error.response.data.message);\r\n    }\r\n  }, [project.getProject.rejected]);\r\n};\r\n\r\n// const useProjectRecruitEffect = (\r\n//   data,\r\n//   fulfilled,\r\n//   rejected,\r\n//   error,\r\n//   inputState,\r\n// ) => {\r\n// //   const [alertData, alertAction] = useAlert();\r\n\r\n//   useEffect(() => {\r\n//     if (fulfilled) {\r\n//       // inputDetail(data);\r\n//       inputState(recruitDtoList);\r\n//     }\r\n//   }, [fulfilled]);\r\n\r\n//   useEffect(() => {\r\n//     if (rejected) {\r\n//     //   alertAction.open(error.response.data.message);\r\n//       console.log(error);\r\n//     }\r\n//   }, [rejected]);\r\n// };\r\n\r\nexport {\r\n  useProjectDetailStateTs,\r\n  useProjectDetailEffectTs,\r\n  //   useProjectRecruitEffect,\r\n};\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"\",\r\n  description: \"\",\r\n  status: \"\",\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [],\r\n  introduction: \"\",\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  currentMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n  _links: {\r\n    self: {\r\n      href: \"\",\r\n    },\r\n    apply: {\r\n      href: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nconst projectApplicantDtoList = [\r\n  {\r\n    userId: \"\",\r\n    userName: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst recruitDtoList = [\r\n  {\r\n    userName: \"\",\r\n    selfDescription: \"\",\r\n    role: \"\",\r\n    status: \"\",\r\n    projectId: 0,\r\n    projectName: \"\",\r\n    introduction: \"\",\r\n    state:\"\",\r\n    _links: {\r\n      self: {\r\n        href: \"\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRequest } from \"../\";\r\nimport { loginApi } from \"../api\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype ApplyStateType = {\r\n  answers: string[];\r\n  introduction: string;\r\n  role: string;\r\n  questions: string[];\r\n  userName: string;\r\n  status: string;\r\n};\r\n\r\ntype ApplyInputType = {\r\n  apply: ApplyStateType;\r\n  applied: boolean;\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  postApply: RequestState;\r\n};\r\n\r\ntype ApplyInputActionType = {\r\n  getApplyApi: (apiLink: string) => Promise<void>;\r\n  postApplyApi: (data: object, apiLink: string) => Promise<void>;\r\n  putApplyApi: (data: any, apiLink: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n  inputAnswer: (a: string, i: number) => void;\r\n  inputApply: (name: string, data: string[] | string) => void;\r\n  selectRole: (data: string) => void;\r\n  setApplied: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\ntype ApplyType = {\r\n  getApply: RequestState;\r\n  putApply: RequestState;\r\n  deleteApply: RequestState;\r\n  apply: ApplyStateType;\r\n};\r\n\r\ntype ApplyActionType = {\r\n  getApplyApi: (api: string) => Promise<void>;\r\n  putApplyApi: (api: string) => Promise<void>;\r\n  deleteApplyApi: (api: string) => Promise<void>;\r\n  setApply: Dispatch<SetStateAction<ApplyStateType>>;\r\n};\r\n\r\ntype ProjectApplyType = {\r\n  applyDetail: ApplyType;\r\n  applyDetailAction: ApplyActionType;\r\n};\r\n\r\nexport const useInputProjectApplyStateTs = () => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n  const [applied, setApplied] = useState<boolean>(false);\r\n  const fetchGetApply = async (apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${apiLink}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .get(`${apiLink}/${id}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPostApply = async (\r\n    data: object,\r\n    apiLink: string,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    console.log(apiLink);\r\n    await axios\r\n      .post(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          await axios\r\n            .post(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchPutApply = async (data: any, apiLink: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(apiLink, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(apiLink, data, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [postApply, { run: postApplyApi }] = useRequest(fetchPostApply);\r\n\r\n  const inputApply = (name: string, data: string[] | string) => {\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        [name]: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputAnswer = (a: string, i: number) => {\r\n    const inputAnswer = apply.answers.map((value, index) => {\r\n      if (i === index) {\r\n        return a;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    setApply((value: any) => {\r\n      return {\r\n        ...value,\r\n        answers: inputAnswer,\r\n      };\r\n    });\r\n  };\r\n\r\n  const selectRole = (data: string) => {\r\n    setApply((value) => {\r\n      return {\r\n        ...value,\r\n        role: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    apply: { apply, applied, getApply, putApply, postApply },\r\n    applyAction: {\r\n      postApplyApi,\r\n      putApplyApi,\r\n      getApplyApi,\r\n      setApply,\r\n      inputAnswer,\r\n      inputApply,\r\n      selectRole,\r\n      setApplied,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useInputProjectApplyEffectTs = (\r\n  apply: ApplyInputType,\r\n  applyAction: ApplyInputActionType,\r\n  questions: string[],\r\n  detailGet: boolean,\r\n  apiLink: string,\r\n  afterAction: () => void,\r\n) => {\r\n\r\n  useEffect(() => {\r\n    const defaultAns = new Array(questions.length);\r\n    defaultAns.fill(\"\");\r\n    applyAction.inputApply(\"answers\", defaultAns);\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    if (detailGet) {\r\n      applyAction.getApplyApi(apiLink);\r\n    }\r\n  }, [detailGet]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n      if (apply.apply.answers.length !== 0) {\r\n        applyAction.setApplied(true);\r\n      }\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.postApply.fulfilled) {\r\n      const id = window.sessionStorage.getItem(\"id\");\r\n      afterAction();\r\n    }\r\n  }, [apply.postApply.fulfilled]);\r\n\r\n};\r\n\r\nexport const useViewProjectApplyStateTs = (): ProjectApplyType => {\r\n  const [apply, setApply] = useState<ApplyStateType>(projectApply);\r\n\r\n  const fetchGetApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n    let res = await axios\r\n      .get(`${api}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .get(`${api}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchPutApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .put(\r\n        api,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .put(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteApply = async (api: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    await axios\r\n      .delete(api, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          await axios\r\n            .delete(api, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  const [getApply, { run: getApplyApi }] = useRequest(fetchGetApply);\r\n  const [putApply, { run: putApplyApi }] = useRequest(fetchPutApply);\r\n  const [deleteApply, { run: deleteApplyApi }] = useRequest(fetchDeleteApply);\r\n\r\n  return {\r\n    applyDetail: { getApply, putApply, deleteApply, apply },\r\n    applyDetailAction: {\r\n      deleteApplyApi,\r\n      getApplyApi,\r\n      putApplyApi,\r\n      setApply,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useViewProjectApplyEffectTs = (\r\n  apply: ApplyType,\r\n  applyAction: ApplyActionType,\r\n  open: boolean,\r\n  applyLink: string,\r\n  applySet: Dispatch<SetStateAction<ApplyType[]>>,\r\n  userId: string,\r\n  close: () => void,\r\n) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (open) {\r\n      applyAction.getApplyApi(applyLink);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (apply.getApply.fulfilled) {\r\n      applyAction.setApply(apply.getApply.data);\r\n    }\r\n  }, [apply.getApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.putApply.fulfilled) {\r\n      applySet((value) => {\r\n        const filterData = value.map((apply) => {\r\n          if (apply.apply.userName === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"ACCEPT\",\r\n            };\r\n          } else {\r\n            return apply;\r\n          }\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.putApply.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (apply.deleteApply.fulfilled) {\r\n      applySet((value: any) => {\r\n        const filterData = value.map((apply: any) => {\r\n          if (apply.apply.userId === userId) {\r\n            return {\r\n              ...apply,\r\n              state: \"REJECT\",\r\n            };\r\n          }``\r\n        });\r\n        return filterData;\r\n      });\r\n      close();\r\n    }\r\n  }, [apply.deleteApply.fulfilled]);\r\n};\r\n\r\nconst projectApply = {\r\n  answers: [],\r\n  introduction: \"\",\r\n  role: \"\",\r\n  questions: [],\r\n  userName: \"\",\r\n  status: \"\",\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { AxiosError } from \"axios\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer: number;\r\n    planner: number;\r\n    etc: number;\r\n  };\r\n};\r\n\r\ntype updateStateType = {\r\n    project: CreateProject;\r\n    img: any;\r\n    updateProject: RequestState;\r\n    updateImg: RequestState;\r\n  }\r\n\r\ntype updateActionType = {\r\n    UpdateProjectApi: (projectId: string, data: any) => Promise<void>;\r\n    UpdateImgApi: (projectId: string, data: any) => Promise<void>;\r\n    inputProject: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    setImg: Dispatch<SetStateAction<any>>;\r\n    inputProjectMember: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    inputDate: (date: any) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputField: (data: string) => void;\r\n  }\r\n\r\ntype UpdateType = {\r\n  updateState: updateStateType;\r\n  updateAction: updateActionType;\r\n};\r\n\r\nconst useProjectUpdateStateTs = (): UpdateType => {\r\n  const projectDetail = useSelector(\r\n    (state: any) => state.project.projectDetail,\r\n  );\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<any>(projectDetail.img);\r\n\r\n  const fetchPutUpdate = async (\r\n    projectId: string,\r\n    data: any,\r\n  ): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .put(`${process.env.REACT_APP_BASE_URL}projects/${projectId}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .put(\r\n              `${process.env.REACT_APP_BASE_URL}projects/${projectId}`,\r\n              data,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: any): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n  const [updateProject, { run: UpdateProjectApi }] = useRequest(fetchPutUpdate);\r\n  const [updateImg, { run: UpdateImgApi }] = useRequest(fetchImg);\r\n\r\n  const inputProject = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const targetValue = e.target.value;\r\n\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputDate = (date: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.name;\r\n    const memberValue = e.target.value;\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n    const inputField = (data: string) => {\r\n      setProject((value) => {\r\n        return {\r\n          ...value,\r\n          projectField: data,\r\n        };\r\n      });\r\n    };\r\n\r\n  return {\r\n    updateState: { project, img, updateProject, updateImg },\r\n    updateAction: {\r\n      UpdateProjectApi,\r\n      UpdateImgApi,\r\n      inputProject,\r\n      setImg,\r\n      inputProjectMember,\r\n      inputDate,\r\n      inputQuestion,\r\n      addQuestion,\r\n      deleteQuestion,\r\n      inputField,\r\n    },\r\n  };\r\n};\r\n\r\nconst useProjectUpdateEffectTs = (\r\n  updateState: updateStateType,\r\n  updateAction: updateActionType,\r\n  projectId: string,\r\n) => {\r\n  const history = useHistory();\r\n//   const [alertData, alertAction] = useAlert();\r\n  const originImg = useSelector(\r\n    (state: any) => state.project.projectDetail.img,\r\n  );  \r\n  useEffect(() => {\r\n    if (updateState.updateProject.fulfilled) {\r\n      console.log(typeof updateState.img);\r\n      console.log(updateState.img);\r\n      if (updateState.img.length === originImg)\r\n        updateAction.UpdateImgApi(projectId, updateState.img);\r\n      else history.push(`/projectDetail/${projectId}`);\r\n    }\r\n  }, [updateState.updateProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (updateState.updateProject.rejected) {\r\n      //   alertAction.open(updateState.updateProject.error.response.data.message);\r\n      console.log(updateState.updateProject.error);\r\n    }\r\n  }, [updateState.updateProject.rejected]);\r\n};\r\n\r\nexport { useProjectUpdateStateTs, useProjectUpdateEffectTs };\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginApi } from \"../api\";\r\nimport { useAlert, useRequest } from \"../\";\r\nimport { RequestState } from \"../useRequest\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\ntype CreateProject = {\r\n  projectName: string;\r\n  teamName: string;\r\n  endDate: string;\r\n  introduction: string;\r\n  state: any;\r\n  projectField: string;\r\n  applyCanFile: boolean;\r\n  questions: string[];\r\n  needMember: {\r\n    developer: number;\r\n    designer:  number;\r\n    planner: number;\r\n    etc: number;\r\n  },\r\n}\r\n\r\ntype CreateStateType = {\r\n    project: CreateProject;\r\n    createProject: RequestState;\r\n    createImg: RequestState;\r\n    img: string;\r\n}\r\n\r\ntype CreateActionType = {\r\n    createProjectApi: (data: CreateProject) => Promise<void>;\r\n    createImgApi: (projectId: string, data: string) => Promise<void>;\r\n    inputProject: (name: string, targetValue: string) => void;\r\n    inputDate: (date: any) => void;\r\n    inputImg: (data: string) => void;\r\n    inputField: (data: string) => void;\r\n    inputQuestion: (data: string, index: number) => void;\r\n    addQuestion: () => void;\r\n    deleteQuestion: (index: number) => void;\r\n    inputProjectMember: (name: string, memberValue: string) => void;\r\n}\r\n\r\ntype CreateType = {\r\n    createState: CreateStateType;\r\n    createAction: CreateActionType;\r\n}\r\n\r\nconst useProjectCreateStateTS = (): CreateType => {\r\n  const [project, setProject] = useState<CreateProject>(projectDetail);\r\n  const [img, setImg] = useState<string>(\"\");\r\n\r\n  const fetchPostCreate = async (data: CreateProject): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    let res = await axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n        headers: {\r\n          \"Access-Control-Expose-Headers\": \"Location\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Accept: \"application/hal+json\",\r\n        },\r\n      })\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n          res = await axios\r\n            .post(`${process.env.REACT_APP_BASE_URL}projects`, data, {\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"Location\",\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n                Accept: \"application/hal+json\",\r\n              },\r\n            })\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res;\r\n  };\r\n\r\n  const fetchImg = async (projectId: string, data: string): Promise<void> => {\r\n    let token = window.sessionStorage.getItem(\"accessToken\");\r\n    const imgData = new FormData();\r\n    imgData.append(\"image\", data);\r\n    imgData.append(\"type\", \"image/jpeg\");\r\n    let res = await axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n        imgData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n            Accept: \"application/hal+json\",\r\n            \"Access-Control-Expose-Headers\": \"*\",\r\n          },\r\n        },\r\n      )\r\n      .catch(async (error: any) => {\r\n        if (error.response.data.error === \"007\") {\r\n          token = await loginApi().refreshToken();\r\n\r\n          res = await axios\r\n            .post(\r\n              `${process.env.REACT_APP_BASE_URL}projects/image/${projectId}`,\r\n              imgData,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n                  Accept: \"application/hal+json\",\r\n                  \"Access-Control-Expose-Headers\": \"*\",\r\n                },\r\n              },\r\n            )\r\n            .catch((error: any) => {\r\n              throw error;\r\n            });\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    return res.data;\r\n  };\r\n\r\n    const [\r\n        createProject,\r\n        { run: createProjectApi },\r\n    ] = useRequest(fetchPostCreate);\r\n    const [\r\n        createImg,\r\n        { run: createImgApi },\r\n    ] = useRequest(fetchImg);\r\n\r\n  const inputProject = (name: string, targetValue: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        [name]: targetValue,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const inputDate = (date: any) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        endDate: date,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputImg = (data: string) => {\r\n    setImg(data);\r\n  };\r\n\r\n  const inputField = (data: string) => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        projectField: data,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputQuestion = (data: string, index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.map((q, i) => {\r\n        if (index === i) {\r\n          return data;\r\n        } else {\r\n          return q;\r\n        }\r\n      });\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setProject((value) => {\r\n      const questions = value.questions.concat(\"\");\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteQuestion = (index: number) => {\r\n    setProject((value) => {\r\n      const questions = value.questions.filter((q, i) => i !== index);\r\n      return {\r\n        ...value,\r\n        questions: questions,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputProjectMember = (name: string, memberValue: string): void => {\r\n    setProject((value) => {\r\n      return {\r\n        ...value,\r\n        needMember: {\r\n          ...value.needMember,\r\n          [name]: memberValue,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const createState: CreateStateType = {\r\n    project,\r\n    createProject,\r\n    createImg,\r\n    img,\r\n  };\r\n  const createAction: CreateActionType = {\r\n    createProjectApi,\r\n    createImgApi,\r\n    inputProject,\r\n    inputImg,\r\n    inputProjectMember,\r\n    inputDate,\r\n    inputQuestion,\r\n    addQuestion,\r\n    deleteQuestion,\r\n    inputField,\r\n  };\r\n\r\n  return { createState, createAction }\r\n};\r\n\r\nconst useProjectCreateEffectTs = (\r\n  createState: CreateStateType,\r\n  createAction: CreateActionType,\r\n) => {\r\n//   const [alertData, alertAction] = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.fulfilled) {\r\n      const projectId = createState.createProject.data.headers.location.split(\r\n        \"/\",\r\n      );\r\n      createAction.createImgApi(projectId[4], createState.img);\r\n    }\r\n  }, [createState.createProject.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (createState.createProject.rejected) {\r\n    //   alertAction.open(createState.createProject.error.response.data.message);\r\n      console.log(createState.createProject.error);\r\n    }\r\n  }, [createState.createProject.rejected]);\r\n};\r\n\r\nexport { useProjectCreateStateTS, useProjectCreateEffectTs };\r\n\r\nconst projectDetail = {\r\n  projectName: \"\",\r\n  teamName: \"\",\r\n  endDate: \"2020-10-30T23:59:00\",\r\n  introduction: \"\",\r\n  state: null,\r\n  projectField: \"\",\r\n  applyCanFile: true,\r\n  questions: [\"\"],\r\n  needMember: {\r\n    developer: 0,\r\n    designer: 0,\r\n    planner: 0,\r\n    etc: 0,\r\n  },\r\n};\r\n\r\n// const projectApplicantDtoList = [\r\n//   {\r\n//     userId: \"testApplicant1\",\r\n//     userName: \"테스터\",\r\n//     status: \"UNREAD\",\r\n//     role: \"DEVELOPER\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant1\",\r\n//       },\r\n//     },\r\n//   },\r\n//   {\r\n//     userId: \"testApplicant2\",\r\n//     userName: \"테스터\",\r\n//     status: \"UNREAD\",\r\n//     role: \"DEVELOPER\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/projects/1/apply/testApplicant2\",\r\n//       },\r\n//     },\r\n//   },\r\n// ];\r\n\r\n// const recruitDtoList = [\r\n//   {\r\n//     userName: \"유저01\",\r\n//     selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n//     role: \"DEVELOPER\",\r\n//     status: \"UNREAD\",\r\n//     projectId: 11,\r\n//     projectName: \"project1\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n//       },\r\n//     },\r\n//   },\r\n//   {\r\n//     userName: \"유저02\",\r\n//     selfDescription: \"프로젝트 영입하고 싶습니다.\",\r\n//     role: \"DEVELOPER\",\r\n//     status: \"UNREAD\",\r\n//     projectId: 11,\r\n//     projectName: \"project1\",\r\n//     _links: {\r\n//       self: {\r\n//         href: \"https://api.eskiiimo.com/profile/tester/recruit/11\",\r\n//       },\r\n//     },\r\n//   },\r\n// ];\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setToken } from \"../../reducers/login\";\r\nimport { useAlert, useMove, useRequest } from \"..\";\r\nimport { loginApi } from \"../../hook/api\";\r\n\r\ntype LoginType = {\r\n  loading: boolean;\r\n  onFinish: (values: any) => void;\r\n  onFinishFailed: (errorInfo: any) => void;\r\n};\r\n\r\nexport function useLoginEffect(): LoginType {\r\n  const dispatch = useDispatch();\r\n  const isToken = useSelector((state: any) => state.login.isToken);\r\n\r\n  const userId = useRef(\"\");\r\n  const { alertAction } = useAlert();\r\n  const [login, { run: postLoginApi }] = useRequest(loginApi().postLogin);\r\n\r\n  useMove(isToken && login.fulfilled, \"\");\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Success:\", values);\r\n    userId.current = values.userId;\r\n    postLoginApi(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  // 로그인 성공 시 useEffect\r\n  useEffect(() => {\r\n    if (login.fulfilled) {\r\n      // response에서 토큰 추출\r\n      const accessToken = login.data.accessToken;\r\n      const refreshToken = login.data.refreshToken;\r\n      // 세션스토리지에 아이디와 토큰 저장\r\n      window.sessionStorage.setItem(\"id\", userId.current);\r\n      window.sessionStorage.setItem(\"accessToken\", accessToken);\r\n      window.sessionStorage.setItem(\"refreshToken\", refreshToken);\r\n      alertAction.open(\"로그인 성공\");\r\n\r\n      // 리덕스에 디스패치\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: userId.current,\r\n      };\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, [login.fulfilled]);\r\n\r\n  // 로그인 실패시\r\n  useEffect(() => {\r\n    if (login.rejected) {\r\n      if (login.error) {\r\n        // 실패 이유 알림\r\n        alertAction.open(login.error.response.data.message);\r\n      }\r\n    }\r\n  }, [login.rejected]);\r\n\r\n  return { loading: login.pending, onFinish, onFinishFailed };\r\n}\r\n\r\n// 세션 스토리지에 아이디와 토큰이 있을 때, 리덕스에 토큰유무와 아이디를 저장\r\n// 레이아웃 바에서 유저아이디를 띄우기 위함\r\nexport function useLoginAuth() {\r\n  const dispatch = useDispatch();\r\n\r\n  // 새로고침시 (최상단 컴포넌트 app이 다시 그려질 시)만 동작\r\n  useEffect(() => {\r\n    // 세션에서 값 받아옴\r\n    let test = null;\r\n    test = window.sessionStorage.getItem(\"accessToken\");\r\n    const id = window.sessionStorage.getItem(\"id\");\r\n\r\n    // null값이 아니면\r\n    if (test !== null) {\r\n      // payload 만들어서\r\n      const reduxData = {\r\n        isToken: true,\r\n        userId: id,\r\n      };\r\n\r\n      // 액션 디스패치\r\n      dispatch(setToken(reduxData));\r\n    }\r\n  }, []);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLogoutAuth } from \"../hook/auth/useLogin\";\r\nimport { setToken } from \"../reducers/login\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"./Layout.css\";\r\nimport \"./component.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // useMove 안 쓴 이유 -> 로그인 여부를 가지는 state가 레이아웃 컴포넌트 내부에 없어서 사용하기 애매함,,\r\n  // 일단 직접 useHistory로 구현\r\n  const history = useHistory();\r\n\r\n  // 레이아웃 바에서 로그인 여부를 확인하고, 유저 아이디를 띄울 변수\r\n  const userId = useSelector((state) => state.login.userId);\r\n  const isToken = useSelector((state) => state.login.isToken);\r\n\r\n  // 레이아웃에서 userId클릭하면 이동할 본인 프로필페이지 주소\r\n  const profileUrl = `/profile/${userId}`;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  // 로그아웃\r\n  const handleClick = () => {\r\n    // 세션 스토리지 비우기\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"accessToken\");\r\n    window.sessionStorage.removeItem(\"refreshToken\");\r\n\r\n    // 리덕스 초기화 데이터\r\n    const reduxData = {\r\n      isToken: false,\r\n      userId: null,\r\n    };\r\n\r\n    // 액션 디스패치\r\n    dispatch(setToken(reduxData));\r\n\r\n    // 홈으로\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"\" light expand=\"md\" className=\"nav_header\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          Egluu\r\n          {/* <img src={logo} alt=\"menubar\" id=\"menu-img\" width=\"100\" /> */}\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"container-fluid\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/projects\">\r\n                프로젝트 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/peoples\">\r\n                사용자 목록보기\r\n              </NavLink>\r\n            </NavItem>\r\n            {isToken ? (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to={profileUrl}>\r\n                    {userId} 님\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={handleClick}>로그아웃</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"ml-auto\">\r\n                  <NavLink tag={Link} to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"nav-right\">\r\n                  <NavLink tag={Link} to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <main>\r\n        <div className=\"nav_body\">{children}</div>\r\n      </main>\r\n\r\n      <footer className=\"nav_footer\">\r\n        <hr />\r\n        <div className=\"container-fluid text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mt-md-0 mt-3\">\r\n              <h4 className=\"text-uppercase\">Egluu</h4>\r\n              <br />\r\n              <p>Simple Team Building Platform</p> © 2020 Copyright:\r\n              <a href=\"https://egluuapi.codingnome.dev/\">\r\n                https://egluuapi.codingnome.dev/\r\n              </a>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n            <div className=\"col-md-2 mb-md-0 mb-2\"></div>\r\n            <div className=\"col-md-3 mb-md-0 mb-3\">\r\n              <h5 className=\"text-uppercase\">Links</h5>\r\n              <br />\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Instagram</a>\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  <a href=\"#!\">Github</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Progress\r\n} from \"reactstrap\";\r\nimport sampleimg from \"../icon/baseImg.png\";\r\nimport \"./Project.css\";\r\nconst moment = require(\"moment-timezone\"); //상단에 선언\r\n\r\nexport default function ProjectBox(props) {\r\n  const staticProjectData = props.data;\r\n  const nowDay = Date.parse(moment().tz(\"Asia/Seoul\").format());\r\n  const dday = Math.floor(\r\n    (Date.parse(staticProjectData.endDate) - nowDay) / (24 * 3600 * 1000)\r\n  );\r\n  // 0으로 나눌 경우 예외처리!\r\n  const developerPercent =\r\n    staticProjectData.currentMember.developer !== 0\r\n      ? (staticProjectData.currentMember.developer /\r\n          staticProjectData.needMember.developer) *\r\n        100\r\n      : 0;\r\n  const plannerPercent =\r\n    staticProjectData.currentMember.planner !== 0\r\n      ? (staticProjectData.currentMember.planner /\r\n          staticProjectData.needMember.planner) *\r\n        100\r\n      : 0;\r\n\r\n  const designerPercent =\r\n    staticProjectData.currentMember.designer !== 0\r\n      ? (staticProjectData.currentMember.designer /\r\n          staticProjectData.needMember.designer) *\r\n        100\r\n      : 0;\r\n\r\n  const etcPercent =\r\n    staticProjectData.currentMember.etc !== 0\r\n      ? (staticProjectData.currentMember.etc /\r\n          staticProjectData.needMember.etc) *\r\n        100\r\n      : 0;\r\n\r\n  return (\r\n    <div id=\"ProjectBoxCard\">\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Card>\r\n          <CardImg\r\n            width=\"240px\"\r\n            height=\"180px\"\r\n            src={`${process.env.REACT_APP_BASE_URL}projects/image/${staticProjectData.projectId}`}\r\n            alt=\"Card image cap\"\r\n          />\r\n          <CardBody>\r\n            <CardTitle>{staticProjectData.projectName}</CardTitle>\r\n            <Row xs=\"12\" id=\"team_dday\">\r\n              <Col xs=\"9\">\r\n                <CardSubtitle>{staticProjectData.teamName}</CardSubtitle>\r\n              </Col>\r\n              <Col xs=\"3\">\r\n                <CardSubtitle>D-{dday}</CardSubtitle>\r\n              </Col>\r\n            </Row>\r\n            <Row xs=\"12\" id=\"member-count\">\r\n              <Col xs=\"6\">\r\n                <CardText>developer</CardText>\r\n                <Progress color=\"#007bff\" value={developerPercent}>\r\n                  {developerPercent}\r\n                </Progress>\r\n                <CardText>planner </CardText>\r\n                <Progress color=\"#007bff\" value={plannerPercent}>\r\n                  {plannerPercent}\r\n                </Progress>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <CardText>designer</CardText>\r\n                <Progress color=\"#007bff\" value={designerPercent}>\r\n                  {designerPercent}\r\n                </Progress>\r\n                <CardText>etc</CardText>\r\n                <Progress color=\"#007bff\" value={etcPercent}>\r\n                  {etcPercent}\r\n                </Progress>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { imgApi } from \"../api\";\r\nimport { useRequest } from \"../useRequest\";\r\nexport const useImage = (\r\n  imgState,\r\n  setImgState,\r\n\r\n  userId,\r\n) => {\r\n  const { getImg } = imgApi();\r\n\r\n  const [\r\n    { data, fulfilled, pending, rejected, error },\r\n    { run: getImgApi },\r\n  ] = useRequest(getImg);\r\n\r\n  useEffect(() => {\r\n    getImgApi(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    setImgState({\r\n      ...imgState,\r\n      imgUrl: `${process.env.REACT_APP_BASE_URL}profile/image/${userId}`,\r\n    });\r\n  }, [fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (rejected) {\r\n      if (error) {\r\n        if (error.response.data.error === \"302\") {\r\n          setImgState({\r\n            ...imgState,\r\n            imgUrl:\r\n              \"https://i.pinimg.com/236x/21/88/fd/2188fd41b8d31930acc43b7b197e6dfd.jpg\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [rejected]);\r\n  return pending;\r\n};\r\n\r\nexport default useImage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Badge as Stack } from \"reactstrap\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Level from \"./Level\";\r\nimport \"./People.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useImage } from \"../../hook/profile/useImage\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    \"& .MuiBadge-badge\": {\r\n      height: \"30px\",\r\n      width: \"30px\",\r\n      fontSize: \"1rem\",\r\n      borderRadius: \"15px\",\r\n      color: \"#ffffff\",\r\n      backgroundColor: \"#007bff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function PeopleBox(props) {\r\n  const classes = useStyles();\r\n  const data = props.data;\r\n  const [imgState, setImgState] = useState(\"\");\r\n  const imgPending = useImage(imgState, setImgState, data.userId);\r\n  return (\r\n    <div id=\"PeopleBoxCard\" className={classes.card}>\r\n      <Link\r\n        to={{\r\n          pathname: `${props.url}`\r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"#000000\" }}\r\n      >\r\n        <Badge badgeContent={String(data.grade)} className={classes.root}>\r\n          <Card>\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              src={`${process.env.REACT_APP_BASE_URL}profile/image/${data.userId}`}\r\n              alt=\"Card image cap\"\r\n            /> */}\r\n            {imgPending ? (\r\n              <p>로딩중...</p>\r\n            ) : (\r\n              <div className=\"people-img\">\r\n                <img\r\n                  src={imgState.imgUrl}\r\n                  width=\"100%\"\r\n                  object-fit=\"contain\"\r\n                ></img>\r\n              </div>\r\n            )}\r\n            <CardBody>\r\n              <div id=\"card-title\">\r\n                <CardTitle>{data.userId}</CardTitle>\r\n              </div>\r\n\r\n              <CardText id=\"card-text\">\r\n                {data.stack === null && \" \"}\r\n                {/* {data.stacks.map(value => {\r\n                  return (\r\n                    <Stack color=\"secondary\" pill>\r\n                      # {value}{\" \"}\r\n                    </Stack>\r\n                  );\r\n                })} */}\r\n                {data.stacks[0] && (\r\n                  <Stack color=\"secondary\" pill>\r\n                    # {data.stacks[0]}{\" \"}\r\n                  </Stack>\r\n                )}\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Badge>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nexport const AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useRef, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst params = {\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    type: \"bullets\",\r\n    clickable: true,\r\n  },\r\n  observer: true,\r\n  spaceBetween: 30,\r\n  lazy: {\r\n    loadPrevNext: true,\r\n  },\r\n};\r\n\r\nfunction ImgInput({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://image.fmkorea.com/files/attach/new/20190706/486616/1139515760/1964885644/69a5ed6da6368495f69472d79fd6e19f.jpg\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`${img}`}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImgInput2({ img, saveImg }) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: [\".png\", \".jpeg\", \".jpg\"],\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      const imgFile = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          url: URL.createObjectURL(file),\r\n        })\r\n      );\r\n      saveImg(imgFile[0]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        {img === \"\" ? (\r\n          <img\r\n            src=\"https://pixabay.com/ko/illustrations/%EC%9C%84%EC%84%B1-%ED%96%89%EC%84%B1-%EA%B3%B5%EA%B0%84-%EC%B2%9C%EB%AC%B8%ED%95%99-1303512/\"\r\n            alt=\"이미지 에러\"\r\n            align=\"center\"\r\n            heigth=\"100%\"\r\n            width=\"100%\"\r\n          />\r\n        ) : (\r\n          <div>\r\n            {typeof img[0] !== \"string\" ? (\r\n              <img\r\n                src={img.url}\r\n                alt=\"이미지 에러\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={img}\r\n                alt=\"이미지\"\r\n                align=\"center\"\r\n                heigth=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ImgInput2, ImgInput };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst role = [\"DEVELOPER\", \"DESIGNER\", \"PLANNER\", \"ETC\"];\r\n\r\nconst DropdownRole = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle caret style={props.style}>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"DEVELOPER\")}>\r\n          DEVELOPER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"DESIGNER\")}>\r\n          DESIGNER\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"PLANNER\")}>PLANNER</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst DropdownField = (props) => {\r\n  const { dropdownCaret, dropdownHeader, action, pick } = props;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [caret, setCaret] = useState(dropdownCaret);\r\n  useEffect(() => {\r\n    if (pick !== \"\") setCaret(pick);\r\n  }, [pick]);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle style={props.style} caret>\r\n        {caret}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={props.style}>\r\n        <DropdownItem onClick={(e) => action(\"APP\")}>APP</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"WEB\")}>WEB</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"AI\")}>AI</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"HW\")}>HW</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"BLOCKCHAIN\")}>\r\n          BLOCKCHAIN\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"SYSTEM\")}>SYSTEM</DropdownItem>\r\n        <DropdownItem onClick={(e) => action(\"ETC\")}>ETC</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\nexport { DropdownRole, DropdownField };\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: \"20%\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function HalfDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { anchor, buttonName } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <React.Fragment key={anchor}>\r\n        <Button style={{ fontSize: \"20px\" }} onClick={handleDrawerOpen}>\r\n          {buttonName}\r\n        </Button>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"right\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {props.children}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useAlert } from \"../../hook\";\r\n\r\nconst CenterModal = (props) => {\r\n  const { modalFlag, close } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modalFlag}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>{props.header}</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {props.children}\r\n        <ModalFooter>{props.footer}</ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AlertModal = (props) => {\r\n  const { alertState, alertAction } = useAlert();\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={alertState.isOpen}>\r\n        <ModalHeader>\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr auto\",\r\n              alignItems: \"center\",\r\n              fontWeight: \"bold\",\r\n              width: \"408px\",\r\n            }}\r\n          >\r\n            <div>알림</div>\r\n            <div style={{ float: \"right\" }}>\r\n              <IconButton\r\n                style={{ width: \"30px\", height: \"30px\" }}\r\n                onClick={alertAction.close}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        {alertState.sentence}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CenterModal, AlertModal };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInputUI = withStyles((theme) => ({\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction BootstrapInput(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nfunction InputTemp(props) {\r\n  return <BootstrapInputUI {...props} />;\r\n}\r\n\r\nexport { BootstrapInput, InputTemp };\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { peopleListApi } from \"../api\";\r\nimport { useRequest, useAlert } from \"..\";\r\nimport { RequestState } from \"../useRequest\";\r\nconst axios = require(\"axios\");\r\n\r\ntype pageType = {\r\n  number: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n};\r\n\r\ntype peopleListType = {\r\n  userId: String;\r\n  userName: String;\r\n  stacks: Array<String>;\r\n  area: String;\r\n  level: number;\r\n  _links: {\r\n    self: {\r\n      href: String;\r\n    };\r\n    profileImage: {\r\n      href: String;\r\n    };\r\n  };\r\n};\r\n\r\ntype peoplePage = {\r\n  WantedPeopleListPromise: RequestState;\r\n  peopleListPromise: RequestState;\r\n  peopleList: peopleListType[];\r\n  role: string;\r\n  region: string;\r\n  search: string;\r\n  page: pageType;\r\n  grade: string;\r\n};\r\n\r\ntype peopleAction = {\r\n  getPeopleList: (pageNumber: number, params: Object[]) => Promise<void>;\r\n  getWantedPeopleList: (pageNumber: number) => Promise<void>;\r\n  setPeopleList: Dispatch<SetStateAction<peopleListType[]>>;\r\n  setPage: Dispatch<SetStateAction<pageType>>;\r\n  setRole: Dispatch<SetStateAction<string>>;\r\n  setRegion: Dispatch<SetStateAction<string>>;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  setGrade: Dispatch<SetStateAction<string>>;\r\n};\r\n\r\ntype peopleState = {\r\n  peoplePage: peoplePage;\r\n  peopleAction: peopleAction;\r\n};\r\n\r\nexport function usePeopleListStateTs(): peopleState {\r\n  const [peopleList, setPeopleList] = useState<peopleListType[] | []>([]);\r\n  const [page, setPage] = useState<pageType>({\r\n    number: 0,\r\n    size: 0,\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  });\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [grade, setGrade] = useState<string>(\"\");\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [peopleListPromise, { run: getPeopleList }] = useRequest(\r\n    peopleListApi().getPeopleList,\r\n  );\r\n\r\n  const [WantedPeopleListPromise, { run: getWantedPeopleList }] = useRequest(\r\n    peopleListApi().getWantedPeopleList,\r\n  );\r\n  const peoplePage: peoplePage = {\r\n    WantedPeopleListPromise,\r\n    peopleListPromise,\r\n    peopleList,\r\n    page,\r\n    role,\r\n    region,\r\n    search,\r\n    grade,\r\n  };\r\n\r\n  const peopleAction: peopleAction = {\r\n    setPeopleList,\r\n    setPage,\r\n    setRole,\r\n    setRegion,\r\n    setSearch,\r\n    setGrade,\r\n    getPeopleList,\r\n    getWantedPeopleList,\r\n  };\r\n\r\n  return { peoplePage, peopleAction };\r\n}\r\n\r\nexport function usePeopleListEffectTs(\r\n  peoplePage: peoplePage,\r\n  peopleAction: peopleAction,\r\n) {\r\n  useEffect(() => {\r\n    if (peoplePage.peopleListPromise.fulfilled) {\r\n      if (\"_embedded\" in peoplePage.peopleListPromise.data) {\r\n        peopleAction.setPeopleList(\r\n          peoplePage.peopleListPromise.data._embedded.peopleList,\r\n        );\r\n      }\r\n    }\r\n  }, [peoplePage.peopleListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (peoplePage.peopleListPromise.rejected) {\r\n      if (peoplePage.peopleListPromise.error) {\r\n        peopleAction.setPeopleList([]);\r\n      }\r\n    }\r\n  }, [peoplePage.peopleListPromise.rejected]);\r\n}\r\n\r\nexport function useWantedPeopleListEffectTs(\r\n  peoplePage: peoplePage,\r\n  peopleAction: peopleAction,\r\n) {\r\n  const { alertAction } = useAlert();\r\n  useEffect(() => {\r\n    if (peoplePage.WantedPeopleListPromise.fulfilled) {\r\n      if (\"_embedded\" in peoplePage.WantedPeopleListPromise.data) {\r\n        peopleAction.setPeopleList(\r\n          peoplePage.WantedPeopleListPromise.data._embedded.peopleList,\r\n        );\r\n      }\r\n    }\r\n  }, [peoplePage.WantedPeopleListPromise.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (peoplePage.WantedPeopleListPromise.rejected) {\r\n      if (peoplePage.WantedPeopleListPromise.error) {\r\n        peopleAction.setPeopleList([]);\r\n      }\r\n    }\r\n  }, [peoplePage.WantedPeopleListPromise.rejected]);\r\n\r\n  useEffect(() => {\r\n    peopleAction.getWantedPeopleList(0);\r\n  }, []);\r\n}\r\n","import React from \"react\";\r\nimport { Layout, ProjectBox, PeopleBox } from \"../components\";\r\nimport \"./main.css\";\r\nimport { Pagination, Carousel, List, Typography } from \"antd\";\r\nimport {\r\n  useProjectListStateTs,\r\n  useDeadlineProjectListEffect,\r\n} from \"../hook/projectTs\";\r\nimport {\r\n  usePeopleListStateTs,\r\n  useWantedPeopleListEffectTs,\r\n} from \"../hook/peopleTs\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Root() {\r\n  const { projectPage, projectAction } = useProjectListStateTs();\r\n  useDeadlineProjectListEffect(projectPage, projectAction);\r\n\r\n  const { peoplePage, peopleAction } = usePeopleListStateTs();\r\n  useWantedPeopleListEffectTs(peoplePage, peopleAction);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Carousel autoplay>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/1/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/2/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/3/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"480px\",\r\n                color: \"#fff\",\r\n                lineHeight: \"480px\",\r\n                textAlign: \"center\",\r\n                background: \"#364d79\",\r\n              }}\r\n              src=\"https://picsum.photos/id/4/1000/480\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n        </Carousel>\r\n        <Title level={3}>마감임박 프로젝트 </Title>\r\n        <List\r\n          loading={projectPage.DeadLineProjectListPromise.pending}\r\n          grid={{\r\n            gutter: 10,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 4,\r\n            xxl: 4,\r\n          }}\r\n          dataSource={projectPage.projectList}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <ProjectBox\r\n                data={item}\r\n                url={`/projectDetail/${item.projectId}`}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            onChange={(page, pageSize) =>\r\n              projectAction.getDeadLineProjectListApi(page - 1)\r\n            }\r\n            pageSize={8}\r\n            current={projectPage.page.number + 1}\r\n            total={projectPage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n        <Title level={3}>프로젝트를 찾는 사람들</Title>\r\n        <List\r\n          loading={peoplePage.WantedPeopleListPromise.pending}\r\n          grid={{\r\n            gutter: 10,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 6,\r\n            lg: 6,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }}\r\n          dataSource={peoplePage.peopleList}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <PeopleBox data={item} url={`/profile/${item.userId}`} />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\" style={{ marginTop: \"30px\" }}>\r\n          <Pagination\r\n            onChange={(page, pageSize) =>\r\n              peopleAction.getWantedPeopleList(page - 1)\r\n            }\r\n            pageSize={8}\r\n            current={peoplePage.page.number + 1}\r\n            total={peoplePage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(1),\r\n    width: \"30ch\",\r\n  },\r\n}));\r\nexport function ProjectSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  stack,\r\n  setStack,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setStack(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, stack) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (stack !== \"\") params += `&stack=${stack}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"Seoul\">서울</MenuItem>\r\n              <MenuItem value=\"Gunggi\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"stack\"\r\n              value={stack}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                기술스택\r\n              </MenuItem>\r\n              <MenuItem value=\"ReactJS\">ReactJS</MenuItem>\r\n              <MenuItem value=\"SPRINGBOOT\">SPRINGBOOT</MenuItem>\r\n              <MenuItem value=\"PHP\">PHP</MenuItem>\r\n            </Select>\r\n            <FormHelperText>stack</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outlined\"\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button\r\n            style={{ height: \"auto\" }}\r\n            onClick={() => getPage(role, region, stack)}\r\n          >\r\n            search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function PeopleSort({\r\n  role,\r\n  setRole,\r\n  region,\r\n  setRegion,\r\n  grade,\r\n  setGrade,\r\n  search,\r\n  setSearch,\r\n  getApi,\r\n}) {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"role\") {\r\n      setRole(event.target.value);\r\n    } else if (event.target.name === \"region\") {\r\n      setRegion(event.target.value);\r\n    } else {\r\n      setGrade(event.target.value);\r\n    }\r\n  };\r\n\r\n  const getPage = async (role, region, grade) => {\r\n    let params = \"\";\r\n    if (role !== \"\") params += `&role=${role}`;\r\n    if (region !== \"\") params += `&region=${region}`;\r\n    if (grade !== \"\") params += `&grade=${grade}`;\r\n    await getApi(0, params);\r\n  };\r\n\r\n  const handleChangeSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"role\"\r\n              value={role}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                역할\r\n              </MenuItem>\r\n              <MenuItem value=\"LEADER\">leader</MenuItem>\r\n              <MenuItem value=\"DEVELOPER\">developer</MenuItem>\r\n              <MenuItem value=\"DESIGNER\">designer</MenuItem>\r\n              <MenuItem value=\"PLANNER\">director</MenuItem>\r\n              <MenuItem value=\"ETC\">etc.</MenuItem>\r\n            </Select>\r\n            <FormHelperText>role</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"grade\"\r\n              value={grade}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                레벨\r\n              </MenuItem>\r\n              <MenuItem value=\"0\">0</MenuItem>\r\n              <MenuItem value=\"1\">1</MenuItem>\r\n              <MenuItem value=\"2\">2</MenuItem>\r\n            </Select>\r\n            <FormHelperText>grade</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              name=\"region\"\r\n              value={region}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                지역\r\n              </MenuItem>\r\n              <MenuItem value=\"SEOUL\">서울</MenuItem>\r\n              <MenuItem value=\"GYEONGGI\">경기</MenuItem>\r\n              <MenuItem value=\"Busan\">부산</MenuItem>\r\n            </Select>\r\n            <FormHelperText>region</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ display: \"flex\" }}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            className={classes.search}\r\n          >\r\n            <InputLabel>Search</InputLabel>\r\n            <OutlinedInput\r\n              value={search}\r\n              onChange={handleChangeSearch}\r\n              label=\"Search\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ display: \"flex\" }}>\r\n          <Button onClick={() => getPage(role, region, grade)}>search</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Layout, ProjectBox } from \"../../components\";\r\nimport { ProjectSort } from \"../../components/List/Sort\";\r\nimport { Alert, List, Pagination, Typography } from \"antd\";\r\nimport {\r\n  useProjectListStateTs,\r\n  useProjectListEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function ProjectListPage() {\r\n  const { projectPage, projectAction } = useProjectListStateTs();\r\n  useProjectListEffectTs(projectPage, projectAction);\r\n  const isToken = useSelector((state: any) => state.login.isToken);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <ProjectSort\r\n          role={projectPage.role}\r\n          setRole={projectAction.setRole}\r\n          region={projectPage.region}\r\n          setRegion={projectAction.setRegion}\r\n          stack={projectPage.stack}\r\n          setStack={projectAction.setStack}\r\n          search={projectPage.search}\r\n          setSearch={projectAction.setSearch}\r\n          getApi={projectAction.getProjectListApi}\r\n        />\r\n        {isToken && <Link to=\"/createProject\">\r\n          <Alert\r\n            message=\"프로젝트 생성을 원하신다면 여기를\r\n          눌러주세요.\"\r\n            type=\"success\"\r\n          />\r\n        </Link>}\r\n\r\n        <Title level={3}>모집 진행 중 프로젝트 </Title>\r\n        <List\r\n          loading={projectPage.projectListPromise.pending}\r\n          grid={{\r\n            gutter: 8,\r\n            xs: 2,\r\n            sm: 3,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 4,\r\n            xxl: 4,\r\n          }}\r\n          dataSource={projectPage.projectList}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <ProjectBox\r\n                data={item}\r\n                url={`/projectDetail/${item.projectId}`}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <div id=\"pagination_div\">\r\n          <Pagination\r\n            onChange={(page, pageSize) =>\r\n              projectAction.getProjectListApi(page - 1)\r\n            }\r\n            defaultCurrent={1}\r\n            current={projectPage.page.number+1}\r\n            pageSize={8}\r\n            total={projectPage.page.totalPages * 8}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst projectDetail = {\r\n    projectName: \"\",\r\n    teamName: \"\",\r\n    endDate: \"2020-10-30T23:59:00\",\r\n    introduction: \"\",\r\n    state: 'RECRUTING',\r\n    projectField: \"\",\r\n    applyCanFile: true,\r\n    needMember: {\r\n        developer: 0,\r\n        designer: 0,\r\n        planner: 0,\r\n        etc: 0\r\n    },\r\n    questions: [],\r\n    currentMember: null,\r\n    memberList: null,\r\n    img: []\r\n}\r\n\r\nconst projectRedux = createSlice({\r\n    name: \"project\",\r\n    initialState: {\r\n        projectDetail,\r\n    },\r\n    reducers: {\r\n        setProject(state, action) {\r\n            state.projectDetail = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setProject } = projectRedux.actions;\r\nexport default projectRedux.reducer;\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  DropdownRole,\r\n  HalfDrawer,\r\n  CenterModal,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setProject } from \"../../reducers/project\";\r\nimport \"./projectDetail.css\";\r\nimport {\r\n  useProjectDetailStateTs,\r\n  useProjectDetailEffectTs,\r\n  useInputProjectApplyStateTs,\r\n  useInputProjectApplyEffectTs,\r\n  useViewProjectApplyStateTs,\r\n  useViewProjectApplyEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { Button, Switch, List, Typography, Card, Input } from \"antd\";\r\nconst ReactMarkdown = require(\"react-markdown\");\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function ProjectDetail() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const { project, projectAction } = useProjectDetailStateTs();\r\n\r\n  useProjectDetailEffectTs(project, projectAction, url[2]);\r\n\r\n  const handleClickUpdate = () => {\r\n    const updateProject = {\r\n      img: [`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`],\r\n      ...project.project,\r\n    };\r\n    dispatch(setProject(updateProject));\r\n  };\r\n\r\n  const needList = [\r\n    {\r\n      title: \"개발자\",\r\n      number: project.project.currentMember.developer,\r\n    },\r\n    {\r\n      title: \"디자이너\",\r\n      number: project.project.currentMember.designer,\r\n    },\r\n    {\r\n      title: \"기획자\",\r\n      number: project.project.currentMember.planner,\r\n    },\r\n    {\r\n      title: \"기타\",\r\n      number: project.project.currentMember.etc,\r\n    },\r\n  ];\r\n\r\n  const allList = [\r\n    {\r\n      title: \"개발자\",\r\n      number: project.project.needMember.developer,\r\n    },\r\n    {\r\n      title: \"디자이너\",\r\n      number: project.project.needMember.designer,\r\n    },\r\n    {\r\n      title: \"기획자\",\r\n      number: project.project.needMember.planner,\r\n    },\r\n    {\r\n      title: \"기타\",\r\n      number: project.project.needMember.etc,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          {project.check.reader ? (\r\n            <div id=\"button\">\r\n              <Link to={`/projectUpdate/${url[2]}`}>\r\n                <Button onClick={handleClickUpdate}>수정하기</Button>\r\n              </Link>\r\n              <Button\r\n                danger\r\n                onClick={projectAction.openDelete}\r\n                style={{ marginLeft: \"20px\" }}\r\n                color=\"danger\"\r\n              >\r\n                삭제하기\r\n              </Button>\r\n              <CenterModal\r\n                header=\"삭제하기\"\r\n                modalFlag={project.check.delete}\r\n                close={projectAction.closeDelete}\r\n                footer={\r\n                  <div className=\"full_div\">\r\n                    <div id=\"button\">\r\n                      <Button\r\n                        color=\"danger\"\r\n                        onClick={() =>\r\n                          projectAction.deleteProjectApi(projectId)\r\n                        }\r\n                      >\r\n                        삭제하기\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n              >\r\n                <div style={{ height: \"12px\" }} />\r\n                <Title level={3}>정말로 삭제하시겠습니까?</Title>\r\n                <div style={{ height: \"12px\" }} />\r\n              </CenterModal>\r\n            </div>\r\n          ) : (\r\n            <div id=\"button\">\r\n              <Button type=\"primary\" onClick={projectAction.openApply}>\r\n                지원서\r\n              </Button>\r\n              <CenterModal\r\n                header=\"지원하기\"\r\n                modalFlag={project.check.applyModal}\r\n                close={projectAction.closeApply}\r\n              >\r\n                {console.log(project.project._links)}\r\n                <ApplyProject\r\n                  questions={project.project.questions}\r\n                  projectId={projectId}\r\n                  apiLink={project.project._links.apply.href}\r\n                  detailGet={project.getProject.fulfilled}\r\n                  close={projectAction.closeApply}\r\n                />\r\n              </CenterModal>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <img\r\n              id=\"cover\"\r\n              src={`${process.env.REACT_APP_BASE_URL}projects/image/${url[2]}`}\r\n              alt=\"temp\"\r\n            />\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            {/* <div id=\"tag_case\"> */}\r\n            <div>\r\n              <span id=\"tag\">{project.project.projectField}</span>\r\n            </div>\r\n            <Title level={1}>{project.project.projectName}</Title>\r\n            <Title level={4}>{project.project.teamName}</Title>\r\n            <Title level={5}>마감일 : {project.project.endDate}</Title>\r\n            <div id=\"list\">\r\n              <div className=\"half_div_left\">\r\n                <List\r\n                  className=\"demo-loadmore-list\"\r\n                  itemLayout=\"horizontal\"\r\n                  size=\"large\"\r\n                  header={<div>모집 중 인원</div>}\r\n                  bordered\r\n                  loading={project.getProject.pending}\r\n                  dataSource={needList}\r\n                  renderItem={(item) => {\r\n                    return (\r\n                      <List.Item key={item.title}>\r\n                        <List.Item.Meta title={<div>{item.title}</div>} />\r\n                        <div>{item.number}명</div>\r\n                      </List.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"half_div_right\">\r\n                <List\r\n                  className=\"demo-loadmore-list\"\r\n                  itemLayout=\"horizontal\"\r\n                  size=\"large\"\r\n                  header={<div>전체 인원</div>}\r\n                  bordered\r\n                  loading={project.getProject.pending}\r\n                  dataSource={allList}\r\n                  renderItem={(item) => {\r\n                    return (\r\n                      <List.Item key={item.title}>\r\n                        <List.Item.Meta title={<div>{item.title}</div>} />\r\n                        <div>{item.number}명</div>\r\n                      </List.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Title level={3}>소개</Title>\r\n        <ReactMarkdown\r\n          source={project.project.introduction}\r\n          className=\"introduction\"\r\n        />\r\n        {project.check.reader && (\r\n          <div>\r\n            <div>\r\n              <Title\r\n                level={5}\r\n                style={{\r\n                  lineHeight: \"22px\",\r\n                  marginRight: \"10px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                지원자 목록\r\n              </Title>\r\n              <Switch\r\n                onChange={(checked: boolean) =>\r\n                  projectAction.checkSwitch(\"apply\", checked)\r\n                }\r\n              />\r\n              {project.check.apply &&\r\n                (project.apply.length === 0 ? (\r\n                  <div>지원자가 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List\r\n                      itemLayout=\"vertical\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          project.apply[project.pagination.apply].state ===\r\n                          \"REJECT\"\r\n                            ? \"#eeeeee\"\r\n                            : project.apply[project.pagination.apply].state ===\r\n                              \"ACCEPT\"\r\n                            ? \"rgb(212, 237, 218, 0.3)\"\r\n                            : \"#ffffff\",\r\n                      }}\r\n                      dataSource={project.apply}\r\n                      header={\r\n                        <div>\r\n                          <b>지원 현황</b>\r\n                        </div>\r\n                      }\r\n                      pagination={{\r\n                        onChange: (page) => {\r\n                          console.log(page);\r\n                        },\r\n                        pageSize: 1,\r\n                      }}\r\n                      renderItem={(item) => {\r\n                        return (\r\n                          <List.Item key={item.userName}>{item.role}</List.Item>\r\n                        );\r\n                      }}\r\n                    >\r\n                      {/* <ListItem>\r\n                      <ListItemText\r\n                        primary={`이름 : ${\r\n                          project.apply[project.pagination.apply].userName\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`역할 : ${\r\n                          project.apply[project.pagination.apply].role\r\n                        }`}\r\n                      />\r\n                    </ListItem> */}\r\n                      <Button onClick={projectAction.openDetailApply}>\r\n                        상세보기\r\n                      </Button>\r\n                      <Button\r\n                        disabled={project.pagination.apply === 0}\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", -1)\r\n                        }\r\n                      >\r\n                        이전\r\n                      </Button>\r\n                      <Button\r\n                        disabled={\r\n                          project.apply.length - project.pagination.apply < 2\r\n                        }\r\n                        onClick={() =>\r\n                          projectAction.clickPagination(\"apply\", 1)\r\n                        }\r\n                      >\r\n                        다음\r\n                      </Button>\r\n                    </List>\r\n                    <CenterModal\r\n                      header=\"지원자 상세 정보\"\r\n                      modalFlag={project.check.applyDetail}\r\n                      close={projectAction.closeDetailApply}\r\n                    >\r\n                      <ViewProjectApply\r\n                        open={project.check.applyDetail}\r\n                        close={projectAction.closeDetailApply}\r\n                        applyLink={\r\n                          project.apply[project.pagination.apply]._links.self\r\n                            .href\r\n                        }\r\n                        applySet={projectAction.setApply}\r\n                        userId={project.apply[project.pagination.apply].userId}\r\n                        setPagination={() =>\r\n                          projectAction.clickPagination(\"apply\", 0)\r\n                        }\r\n                      />\r\n                    </CenterModal>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Title\r\n                level={5}\r\n                style={{\r\n                  lineHeight: \"22px\",\r\n                  marginRight: \"10px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                요청 목록\r\n              </Title>\r\n              <Switch\r\n                onChange={(checked: boolean) =>\r\n                  projectAction.checkSwitch(\"recruit\", checked)\r\n                }\r\n              />\r\n              {project.check.recruit &&\r\n                (project.recruit.length === 0 ? (\r\n                  <div>요청이 없습니다 </div>\r\n                ) : (\r\n                  <div>\r\n                    <List\r\n                      itemLayout=\"vertical\"\r\n                      size=\"large\"\r\n                      header={<div>지원 상태</div>}\r\n                      bordered\r\n                      dataSource={project.recruit}\r\n                      pagination={{\r\n                        onChange: (page) => {\r\n                          console.log(page);\r\n                        },\r\n                        pageSize: 1,\r\n                      }}\r\n                      renderItem={(item) => {\r\n                        return (\r\n                          <List.Item>\r\n                            <Card title={item.userName}>\r\n                              <div>역할: {item.role}</div>\r\n                              <div>자기소개: {item.introduction}</div>\r\n                              <div>상태: {item.state}</div>\r\n                            </Card>\r\n                          </List.Item>\r\n                        );\r\n                      }}\r\n                    />\r\n                    {/* <List dense>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`이름 : ${\r\n                          project.recruit[project.pagination.recruit].userName\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`역할 : ${\r\n                          project.recruit[project.pagination.recruit].role\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`자기소개 : ${\r\n                          project.recruit[project.pagination.recruit]\r\n                            .introduction\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={`상태 : ${\r\n                          project.recruit[project.pagination.recruit].state\r\n                        }`}\r\n                      />\r\n                    </ListItem>\r\n                  </List> */}\r\n                    <Button\r\n                      disabled={project.pagination.recruit === 0}\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", -1)\r\n                      }\r\n                    >\r\n                      이전\r\n                    </Button>\r\n                    <Button\r\n                      disabled={\r\n                        project.recruit.length - project.pagination.recruit < 2\r\n                      }\r\n                      onClick={() =>\r\n                        projectAction.clickPagination(\"recruit\", 1)\r\n                      }\r\n                    >\r\n                      다음\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst ApplyProject = (props: any) => {\r\n  const { questions, projectId, apiLink, detailGet, close } = props;\r\n  const { apply, applyAction } = useInputProjectApplyStateTs();\r\n  useInputProjectApplyEffectTs(\r\n    apply,\r\n    applyAction,\r\n    questions,\r\n    detailGet,\r\n    apiLink,\r\n    close,\r\n  );\r\n\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {apply.apply.answers.map((a, i) => (\r\n        <div>\r\n          <label htmlFor={`q${i}`} style={{ fontSize: \"15px\" }}>\r\n            {i + 1}번 질문 : {questions[i]}\r\n          </label>\r\n          <Input\r\n            id={`q${i}`}\r\n            placeholder=\"answer\"\r\n            name=\"answer\"\r\n            onChange={(e) => applyAction.inputAnswer(e.target.value, i)}\r\n            value={a}\r\n          />\r\n        </div>\r\n      ))}\r\n      <label\r\n        htmlFor=\"introduction\"\r\n        style={{ marginBottom: \"0px\", marginTop: \"15px\", fontSize: \"16px\" }}\r\n      >\r\n        자기 소개\r\n      </label>\r\n      <Input.TextArea\r\n        id=\"introduction\"\r\n        name=\"introduction\"\r\n        placeholder=\"자기소개\"\r\n        onChange={(e) => applyAction.inputApply(e.target.name, e.target.value)}\r\n        value={apply.apply.introduction}\r\n        autoSize={{ minRows: 3, maxRows: 10 }}\r\n      />\r\n      <DropdownRole\r\n        style={{ width: \"100%\", marginTop: \"12px\" }}\r\n        dropdownCaret=\"역할 선택\"\r\n        action={applyAction.selectRole}\r\n        pick={apply.apply.role}\r\n      />\r\n      <div className=\"full_div\" style={{ marginTop: \"12px\" }}>\r\n        <div id=\"button\">\r\n          {apply.applied ? (\r\n            <Button\r\n              type=\"primary\"\r\n              loading={apply.putApply.pending}\r\n              onClick={() => {\r\n                applyAction.putApplyApi(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  apiLink,\r\n                );\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              loading={apply.postApply.pending}\r\n              onClick={() => {\r\n                applyAction.postApplyApi(\r\n                  {\r\n                    answers: apply.apply.answers,\r\n                    introduction: apply.apply.introduction,\r\n                    role: apply.apply.role,\r\n                  },\r\n                  apiLink,\r\n                );\r\n              }}\r\n            >\r\n              지원하기\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewProjectApply = (props: any) => {\r\n  const { open, close, applyLink, applySet, userId, setPagination } = props;\r\n  const { applyDetail, applyDetailAction } = useViewProjectApplyStateTs();\r\n\r\n  useViewProjectApplyEffectTs(\r\n    applyDetail,\r\n    applyDetailAction,\r\n    open,\r\n    applyLink,\r\n    applySet,\r\n    userId,\r\n    close,\r\n  );\r\n  return (\r\n    <div id=\"drawer_root\">\r\n      <div style={{ height: \"12px\" }} />\r\n      {applyDetail.apply.answers.map((a: string, i: number) => (\r\n        <div>\r\n          <Title level={5}>\r\n            {\" \"}\r\n            {i + 1}번 질문 : {applyDetail.apply.questions[i]}\r\n          </Title>\r\n          <Title level={5}>{a}</Title>\r\n          <div style={{ height: \"12px\" }} />\r\n        </div>\r\n      ))}\r\n      <label htmlFor=\"exampleEmail\" style={{ marginBottom: \"0px\" }}>\r\n        자기 소개\r\n      </label>\r\n      <Title level={5}>{applyDetail.apply.introduction}</Title>\r\n      <div style={{ height: \"12px\" }} />\r\n      <Title level={5}>지원 분야 : {applyDetail.apply.role}</Title>\r\n      <div style={{ height: \"12px\" }} />\r\n      <div className=\"full_div\">\r\n        <div id=\"button\">\r\n          <Button\r\n            onClick={() => {\r\n              applyDetailAction.putApplyApi(applyLink);\r\n            }}\r\n          >\r\n            수락\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              applyDetailAction.deleteApplyApi(applyLink);\r\n            }}\r\n          >\r\n            거절\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"12px\" }} />\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RequestState } from \"./useRequest\";\r\n\r\n\r\nexport const useImageSave = (\r\n  postImg: RequestState,\r\n  nextUrl: string\r\n) => {\r\n  //   const [alertData, alertAction] = useAlert();\r\n    const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (postImg.fulfilled) {\r\n      const projectId = postImg.data.fileName.split(\".\");\r\n      history.push(`${nextUrl}/${projectId[0]}`);\r\n    }\r\n  }, [postImg.fulfilled]);\r\n\r\n  useEffect(() => {\r\n    if (postImg.rejected) {\r\n      //   alertAction.open(createState.createProject.error.response.data.message);\r\n      console.log(postImg.error);\r\n    }\r\n  }, [postImg.rejected]);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  useProjectCreateEffectTs,\r\n  useProjectCreateStateTS,\r\n} from \"../../hook/projectTs\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useImageSave } from \"../../hook/useImage\";\r\n\r\nexport default function ProjectCreate() {\r\n  const { createState, createAction } = useProjectCreateStateTS();\r\n  useImageSave(createState.createImg, \"/projectDetail\");\r\n  useProjectCreateEffectTs(createState, createAction);\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button\r\n              loading={\r\n                createState.createProject.pending ||\r\n                createState.createImg.pending\r\n              }\r\n              onClick={() => createAction.createProjectApi(createState.project)}\r\n            >\r\n              Make Project\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={createState.img} saveImg={createAction.inputImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <label htmlFor=\"exampleEmail\">Project Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"createState name\"\r\n              value={createState.project.projectName}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                createAction.inputProject(e.target.name, e.target.value)\r\n              }\r\n            />\r\n            <label htmlFor=\"exampleEmail\">Team Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                createAction.inputProject(e.target.name, e.target.value)\r\n              }\r\n              value={createState.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <label htmlFor=\"exampleEmail\">Recruit People</label>\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Developer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"developer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.developer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Designer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"designer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.designer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Planner</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"planner\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.planner}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Etc</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"etc\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  createAction.inputProjectMember(e.target.name, e.target.value)\r\n                }\r\n                value={createState.project.needMember.etc}\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <label htmlFor=\"exampleEmail\">End Date</label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={createState.project.endDate}\r\n                  onChange={(date) => createAction.inputDate(date)}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n\r\n              <label htmlFor=\"exampleEmail\">Role</label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={createAction.inputField}\r\n                pick={createState.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <label htmlFor=\"exampleEmail\">Introduction</label>\r\n          <BootstrapInput\r\n            multiline\r\n            type=\"name\"\r\n            name=\"introduction\"\r\n            placeholder=\"introduction\"\r\n            value={createState.project.introduction}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              createAction.inputProject(e.target.name, e.target.value)\r\n            }\r\n            fullWidth\r\n          />\r\n          <label htmlFor=\"exampleEmail\">Questions</label>\r\n          {createState.project.questions.map((value, index) => {\r\n            const questionString = `Question ${index + 1}`;\r\n            return (\r\n              <div>\r\n                <Input\r\n                  addonBefore={questionString}\r\n                  addonAfter={\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => createAction.deleteQuestion(index)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                  }\r\n                  placeholder=\"question\"\r\n                  name=\"questions\"\r\n                  onChange={(e) =>\r\n                    createAction.inputQuestion(e.target.value, index)\r\n                  }\r\n                  value={value}\r\n                />\r\n                <div style={{ height: \"12px\" }} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button onClick={createAction.addQuestion}>Add Questions</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  ImgInput,\r\n  DropdownField,\r\n  BootstrapInput,\r\n} from \"../../components\";\r\nimport \"../main.css\";\r\nimport {\r\n  DateTimePicker as MuiDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport {\r\n  useProjectUpdateStateTs,\r\n  useProjectUpdateEffectTs,\r\n} from \"../../hook/projectTs\";\r\nimport { useImageSave } from \"../../hook/useImage\";\r\nimport { Button, Input } from \"antd\";\r\n\r\nexport default function ProjectUpdate() {\r\n  const location = useLocation();\r\n  const url = location.pathname.split(\"/\");\r\n  const projectId = url[2];\r\n  const { updateState, updateAction } = useProjectUpdateStateTs();\r\n\r\n  useProjectUpdateEffectTs(updateState, updateAction, url[2]);\r\n\r\n  useImageSave(updateState.updateImg, \"projectDetail\");\r\n  const handleClickUpdate = () => {\r\n    const updateData = {\r\n      projectName: updateState.project.projectName,\r\n      teamName: updateState.project.teamName,\r\n      endDate: updateState.project.endDate,\r\n      introduction: updateState.project.introduction,\r\n      state: updateState.project.state,\r\n      projectField: updateState.project.projectField,\r\n      applyCanFile: updateState.project.applyCanFile,\r\n      needMember: {\r\n        developer: updateState.project.needMember.developer,\r\n        designer: updateState.project.needMember.designer,\r\n        planner: updateState.project.needMember.planner,\r\n        etc: updateState.project.needMember.etc,\r\n      },\r\n      questions: updateState.project.questions,\r\n    };\r\n    updateAction.UpdateProjectApi(projectId, updateData);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"root\">\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button\r\n              loading={\r\n                updateState.updateImg.pending ||\r\n                updateState.updateProject.pending\r\n              }\r\n              onClick={handleClickUpdate}\r\n            >\r\n              Update Project\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input_grid\">\r\n          <div className=\"half_div_left\">\r\n            <div className=\"input_img\">\r\n              <ImgInput img={updateState.img} saveImg={updateAction.setImg} />\r\n            </div>\r\n          </div>\r\n          <div className=\"half_div_right\">\r\n            <label htmlFor=\"exampleEmail\">Project Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"projectName\"\r\n              placeholder=\"project name\"\r\n              onChange={updateAction.inputProject}\r\n              value={updateState.project.projectName}\r\n            />\r\n            <label htmlFor=\"exampleEmail\">Team Name</label>\r\n            <Input\r\n              type=\"name\"\r\n              name=\"teamName\"\r\n              placeholder=\"team name\"\r\n              onChange={updateAction.inputProject}\r\n              value={updateState.project.teamName}\r\n            />\r\n            <div className=\"half_div_left\">\r\n              <label htmlFor=\"exampleEmail\">Recruit People</label>\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Developer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"developer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.developer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Designer</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"designer\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.designer}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Planner</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"planner\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.planner}\r\n              />\r\n              <Input\r\n                addonBefore={<div style={{ width: \"100px\" }}>Etc</div>}\r\n                placeholder=\"0\"\r\n                min={0}\r\n                max={100}\r\n                type=\"number\"\r\n                step=\"1\"\r\n                name=\"etc\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  updateAction.inputProjectMember(e)\r\n                }\r\n                value={updateState.project.needMember.etc}\r\n              />\r\n            </div>\r\n            <div className=\"half_div_right\">\r\n              <label htmlFor=\"exampleEmail\">End Date</label>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ko}>\r\n                <MuiDateTimePicker\r\n                  name=\"endDate\"\r\n                  value={updateState.project.endDate}\r\n                  onChange={(date) => updateAction.inputDate(date)}\r\n                  format=\"yy.MM.dd HH:mm\"\r\n                  placeholder=\"종료일\"\r\n                  variant=\"dialog\"\r\n                  disableToolbar={false}\r\n                  hideTabs\r\n                  clearable\r\n                  ampm\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <label htmlFor=\"exampleEmail\">Role</label>\r\n              <DropdownField\r\n                style={{ width: \"100%\" }}\r\n                dropdownCaret=\"Role\"\r\n                action={updateAction.inputField}\r\n                pick={updateState.project.projectField}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginTop: '20px'}}>\r\n          <div>\r\n            <label htmlFor=\"exampleEmail\">Introduction</label>\r\n            <BootstrapInput\r\n              multiline\r\n              name=\"introduction\"\r\n              placeholder=\"introduction\"\r\n              value={updateState.project.introduction}\r\n              onChange={updateAction.inputProject}\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <label htmlFor=\"exampleEmail\">Questions</label>\r\n          {updateState.project.questions.map((value: string, index: number) => {\r\n            const questionString = `Question ${index + 1}`;\r\n            return (\r\n              <div>\r\n                <Input\r\n                  addonBefore={questionString}\r\n                  addonAfter={\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => updateAction.deleteQuestion(index)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                  }\r\n                  placeholder=\"question\"\r\n                  name=\"questions\"\r\n                  onChange={(e) =>\r\n                    updateAction.inputQuestion(e.target.value, index)\r\n                  }\r\n                  value={value}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"full_div\">\r\n          <div id=\"button\">\r\n            <Button onClick={updateAction.addQuestion}>Add Questions</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Form, Input, Typography } from \"antd\";\r\nimport { Layout } from \"../../components\";\r\nimport { useRegisterEffect } from \"../../hook/auth\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  const {loading, onFinish, onFinishFailed} = useRegisterEffect();\r\n\r\n  return (\r\n    <Layout>\r\n      <Title level={3} className=\"login_title\">Create your Account</Title>\r\n      <div className=\"login_box\">\r\n        <Form\r\n          {...layout}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          name=\"register\"\r\n        >\r\n          <Form.Item\r\n            label=\"UserId\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"ID를 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"UserEmail\"\r\n            name=\"userEmail\"\r\n            rules={[{ required: true, message: \"Email을 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Name을 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력하셔야 합니다.\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"password\" className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n              회원가입\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst profileRedux = createSlice({\r\n  name: \"hide\",\r\n  initialState: {\r\n    isHideChange: true\r\n  },\r\n  reducers: {\r\n    setHideChange(state, action) {\r\n      state.isHideChange = action.payload.isHideChange;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setHideChange } = profileRedux.actions;\r\nexport default profileRedux.reducer;\r\n","import { Button, Form, Input, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Layout } from \"../../components\";\r\nimport \"./Login.css\";\r\nimport { useLoginEffect } from \"../../hook/auth\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction LoginPage() {\r\n  const {loading, onFinish, onFinishFailed} = useLoginEffect();\r\n  return (\r\n    <Layout>\r\n      <Title level={3} className=\"login_title\">\r\n        Login\r\n      </Title>\r\n      <div className=\"login_box\">\r\n        <Form {...layout} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            label=\"UserId\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: \"ID를 입력하셔야 합니다.\" }]}\r\n          >\r\n            <Input className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력하셔야 합니다.\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"password\" className=\"login_input\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n              로그인\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  Root,\r\n  ProjectList,\r\n  Profile,\r\n  ProjectDetail,\r\n  ProjectCreate,\r\n  ProjectUpdate,\r\n  PeopleList,\r\n  LoginPage,\r\n  RegisterPage,\r\n} from \"./pages\";\r\nimport { AlertModal } from \"./components\";\r\nimport { useLoginAuth } from \"./hook/auth/useLogin\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction App() {\r\n  useLoginAuth();\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        <Route exact path=\"/\" component={Root} />\r\n        <Route path=\"/projects\" component={ProjectList} />\r\n        <Route path=\"/createProject\" component={ProjectCreate} />\r\n        <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n        <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n        {/* <Route exact path=\"/\" component={Root} />\r\n        <Route path=\"/projects\" component={ProjectList} />\r\n        <Route path=\"/peoples\" component={PeopleList} />\r\n        <Route path=\"/createProject\" component={ProjectCreate} />\r\n        <Route path=\"/projectDetail/:id\" component={ProjectDetail} />\r\n        <Route path=\"/projectUpdate/:id\" component={ProjectUpdate} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/profile/:userId\" component={Profile} /> */}\r\n      </Switch>\r\n      <AlertModal />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport temporaryRedux from \"./temporary\";\r\nimport loginRedux from \"./login\";\r\nimport profileRedux from \"./profile\";\r\nimport projectRedux from \"./project\";\r\nimport alertRedux from \"./alert\";\r\n\r\nconst rootReducer = combineReducers({\r\n  temproray: temporaryRedux,\r\n  login: loginRedux,\r\n  profile: profileRedux,\r\n  project: projectRedux,\r\n  alert: alertRedux,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}